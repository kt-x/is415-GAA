{
  "hash": "5fcdebea19b9c9c5fa608c09a69482ff",
  "result": {
    "markdown": "---\ntitle: \"In-class Exercise 2: Geospatial Data Wrangling\"\ndate: \"2023-01-25\"\nformat: html\nexecute: \n  message: true\n  warning: false\neditor: visual\n---\n\n\nInstalling and check packages (sf, tidyverse, funModeling)\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse, funModeling)\n```\n:::\n\n\nImporting the geoNGA data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeoNGA = st_read(dsn = \"data/geospatial/\", \n               layer = \"geoBoundaries-NGA-ADM2\")%>%\n  \n#because the values were in decimals and hence need to transform\nst_transform(crs = 26392)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n\nImporting the NGA data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNGA <- st_read(dsn = \"data/geospatial/\", \n               layer = \"nga_admbnda_adm2_osgof_20190417\")%>%\n  \nst_transform(crs = 26392)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `nga_admbnda_adm2_osgof_20190417' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwp_nga <- read_csv(\"data/aspatial/WPdx.csv\") %>%\n  filter(`#clean_country_name` == \"Nigeria\")\n```\n:::\n\n\n##Converting water point into sf point features\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\nwp_nga\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n    <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwp_sf <- st_sf(wp_nga, crs=4326)\nwp_sf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 95008 features and 70 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 2.707441 ymin: 4.301812 xmax: 14.21828 ymax: 13.86568\nGeodetic CRS:  WGS 84\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n *  <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwp_sf <- wp_sf %>%\n  st_transform(crs = 26392)\n```\n:::\n\n\n##exclude redundant fields\n\n::: {.cell}\n\n```{.r .cell-code}\nNGA <- NGA %>%\n  select(c(3:4, 8:9))\n```\n:::\n\n\n\n##check for duplicates\n\n::: {.cell}\n\n```{.r .cell-code}\nNGA$ADM2_EN[duplicated(NGA$ADM2_EN) == TRUE]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Bassa\"    \"Ifelodun\" \"Irepodun\" \"Nasarawa\" \"Obi\"      \"Surulere\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNGA$ADM2_EN[94] <- \"Bassa, Kogi\"\nNGA$ADM2_EN[95] <- \"Bassa, Plateau\"\nNGA$ADM2_EN[304] <- \"Ifelodun, Kwara\"\nNGA$ADM2_EN[305] <- \"Ifelodun, Osun\"\nNGA$ADM2_EN[355] <- \"Irepodun, Kwara\"\nNGA$ADM2_EN[356] <- \"Irepodun, Osun\"\nNGA$ADM2_EN[519] <- \"Nasarawa, Kano\"\nNGA$ADM2_EN[520] <- \"Nasarawa, Nasarawa\"\nNGA$ADM2_EN[546] <- \"Obi, Benue\"\nNGA$ADM2_EN[547] <- \"Obi, Nasarawa\"\nNGA$ADM2_EN[693] <- \"Surulere, Lagos\"\nNGA$ADM2_EN[694] <- \"Surulere, Oyo\"\n```\n:::\n\n\n\n\n#Data wrangling\n\n::: {.cell}\n\n```{.r .cell-code}\nfreq(data=wp_sf, \n     input='#status_clean')\n```\n\n::: {.cell-output-display}\n![](In-class_Ex02_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n                     #status_clean frequency percentage cumulative_perc\n1                       Functional     45883      48.29           48.29\n2                   Non-Functional     29385      30.93           79.22\n3                             <NA>     10656      11.22           90.44\n4      Functional but needs repair      4579       4.82           95.26\n5 Non-Functional due to dry season      2403       2.53           97.79\n6        Functional but not in use      1686       1.77           99.56\n7         Abandoned/Decommissioned       234       0.25           99.81\n8                        Abandoned       175       0.18           99.99\n9 Non functional due to dry season         7       0.01          100.00\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwp_sf_nga <- wp_sf %>%\n  rename(status_clean = '#status_clean') %>%\n  select(status_clean) %>%\n  mutate(status_clean = replace_na (\n    status_clean, \"unknown\"))\n```\n:::\n\n\n\n##extract data points\n\n::: {.cell}\n\n```{.r .cell-code}\nwp_functional <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Functional\", \n             \"Functional but not in use\", \n             \"Functional but needs repair\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwp_nonfunctional <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Abandoned/Decommissioned\",\n             \"Abandoned\",\n             \"Non-Functional due to dry season\",\n             \"Non-Functional\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwp_unkown <- wp_sf_nga %>%\n  filter(status_clean == \"unknown\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNGA_wp <- NGA %>%\n  mutate(`total_wp` = lengths(\n    st_intersects(NGA, wp_sf_nga)\n  )) %>% \n  mutate(`wp_functional` = lengths(\n    st_intersects(NGA, wp_functional)\n  )) %>%\n  mutate(`wp_nonfunctional` = lengths(\n    st_intersects(NGA, wp_nonfunctional)\n  )) %>%\n  mutate(`wp_unknown` = lengths(\n    st_intersects(NGA, wp_unkown)\n  ))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(NGA_wp, \"data/rds/NGA_wp.rds\")\n```\n:::\n",
    "supporting": [
      "In-class_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}