[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "",
    "text": "In this section, I will install and load tidyverse and sf packages.\n\npacman::p_load(sf, tidyverse)\n\n\n\n\n\nmpsz = st_read(dsn = \"data/geospatial/MP14_SUBZONE_WEB_PL\", \n               layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\kt-x\\is415-GAA\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial\\MP14_SUBZONE_WEB_PL' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\ncyclingpath = st_read(dsn = \"data/geospatial/CyclingPathGazette\", \n                         layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\kt-x\\is415-GAA\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial\\CyclingPathGazette' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2248 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\n\n\n\n\npreschool = st_read(\"data/geospatial/preschools-location.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\kt-x\\is415-GAA\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial\\preschools-location.kml' \n  using driver `KML'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\n\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\n\n\n\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO <int> 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  <chr> \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  <chr> \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     <chr> \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N <chr> \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C <chr> \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    <chr> \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D <date> 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     <dbl> 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     <dbl> 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng <dbl> 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area <dbl> 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\n\n\n\n\nhead(mpsz, n=5)  \n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n\n\n\n\n\n\n\nplot(mpsz)\n\n\n\n\n\nplot(st_geometry(mpsz))\n\n\n\n\n\nplot(mpsz[\"PLN_AREA_N\"])\n\n\n\n\n\n\n\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nmpsz3414 <- st_set_crs(mpsz, 3414)\n\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\n\npreschool3414 <- st_transform(preschool, \n                              crs = 3414)\npreschool3414\n\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11203.01 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n     Name\n1   kml_1\n2   kml_2\n3   kml_3\n4   kml_4\n5   kml_5\n6   kml_6\n7   kml_7\n8   kml_8\n9   kml_9\n10 kml_10\nescription\n1             <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BRILLIANT TOTS PTE. LTD.</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9334</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>610, JURONG WEST STREET 65, #01 - 534, S 640610</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>640610</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>0523C7904478A63D</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n2             <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUBBLESLAND PLAYHOUSE PTE LTD</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT7680</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>238, COMPASSVALE WALK, #01 - 542, S 540238</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>540238</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>18BED05A501AA168</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n3       <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUCKET HOUSE PRESCHOOL</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9527</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>39, WOODLANDS CLOSE, #01 - 62, MEGA@WOODLANDS, S 737856</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>737856</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>C88B9AC31EE71BF6</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n4            <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUMBLE BEE CHILD CARE CENTRE</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT3150</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>369, WOODLANDS AVENUE 1, #01 - 853, S 730369</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>730369</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>64AB8FACA8F60129</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n5               <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUSY BEES SINGAPORE PTE LTD</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9117</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>327B, ANCHORVALE ROAD, #01 - 322, S 542327</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>542327</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>E1B55AC65B9059E8</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n6                  <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUSY BEES SINGAPORE PTE LTD</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9066</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>211A, PUNGGOL WALK, #01 - 623, S 821211</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>821211</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>3B5A4AF2696592AA</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n7       <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUSY BEES SINGAPORE PTE LTD</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9479</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>2, GAMBAS CRESCENT,  - 01-03, NORDCOM II, S 757044</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>757044</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>5F5452B568838620</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n8          <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUSY BEES SINGAPORE PTE.LTD</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9127</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>6, SERANGOON NORTH AVENUE 5, #02 - 01, S 554910</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>554910</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>3AD4173BBB057D89</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n9             <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUSY BEES SINGAPORE PTE.LTD.</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9067</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>348A, YISHUN AVENUE 11, #01 - 557, S 761348</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>761348</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>F4D7A4BDA3CBB15F</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n10 <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>CAELUM JUNIOR @ BENDEMEER PTE. LTD.</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9053</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>70, BENDEMEER ROAD, #02 - 01, LUZERNE, S 339940</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>339940</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>D55FC7583E8CCBA7</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n                        geometry\n1  POINT Z (13258.34 35611.04 0)\n2  POINT Z (35272.09 41373.42 0)\n3  POINT Z (25050.54 46634.14 0)\n4  POINT Z (22892.48 46127.66 0)\n5  POINT Z (34155.79 41949.13 0)\n6   POINT Z (35414.54 42625.1 0)\n7  POINT Z (26046.98 47205.62 0)\n8  POINT Z (31980.09 39607.05 0)\n9  POINT Z (28879.22 45454.97 0)\n10 POINT Z (31250.89 33171.55 0)\n\n\n\n\n\n\nlistings <- read_csv(\"data/aspatial/listings.csv\")\n\n\nlist(listings) \n\n[[1]]\n# A tibble: 4,161 × 18\n       id name     host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n    <dbl> <chr>      <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>   <dbl>\n 1  50646 Pleasan…  227796 Sujatha Centra… Bukit …    1.33    104. Privat…    80\n 2  71609 Ensuite…  367042 Belinda East R… Tampin…    1.35    104. Privat…   145\n 3  71896 B&B  Ro…  367042 Belinda East R… Tampin…    1.35    104. Privat…    85\n 4  71903 Room 2-…  367042 Belinda East R… Tampin…    1.35    104. Privat…    85\n 5 275344 15 mins… 1439258 Kay     Centra… Bukit …    1.29    104. Privat…    49\n 6 289234 Booking…  367042 Belinda East R… Tampin…    1.34    104. Privat…   184\n 7 294281 5 mins … 1521514 Elizab… Centra… Newton     1.31    104. Privat…    79\n 8 324945 Cozy Bl… 1439258 Kay     Centra… Bukit …    1.29    104. Privat…    49\n 9 330089 Cozy Bl… 1439258 Kay     Centra… Bukit …    1.29    104. Privat…    55\n10 330095 10 mins… 1439258 Kay     Centra… Bukit …    1.29    104. Privat…    55\n# … with 4,151 more rows, 8 more variables: minimum_nights <dbl>,\n#   number_of_reviews <dbl>, last_review <date>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <dbl>, availability_365 <dbl>,\n#   number_of_reviews_ltm <dbl>, license <chr>, and abbreviated variable names\n#   ¹​host_name, ²​neighbourhood_group, ³​neighbourhood, ⁴​latitude, ⁵​longitude,\n#   ⁶​room_type\n\n\n\n\n\n\nlistings_sf <- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %>%\n  st_transform(crs = 3414)\n\n\nglimpse(listings_sf)\n\nRows: 4,161\nColumns: 17\n$ id                             <dbl> 50646, 71609, 71896, 71903, 275344, 289…\n$ name                           <chr> \"Pleasant Room along Bukit Timah\", \"Ens…\n$ host_id                        <dbl> 227796, 367042, 367042, 367042, 1439258…\n$ host_name                      <chr> \"Sujatha\", \"Belinda\", \"Belinda\", \"Belin…\n$ neighbourhood_group            <chr> \"Central Region\", \"East Region\", \"East …\n$ neighbourhood                  <chr> \"Bukit Timah\", \"Tampines\", \"Tampines\", …\n$ room_type                      <chr> \"Private room\", \"Private room\", \"Privat…\n$ price                          <dbl> 80, 145, 85, 85, 49, 184, 79, 49, 55, 5…\n$ minimum_nights                 <dbl> 92, 92, 92, 92, 60, 92, 92, 60, 60, 60,…\n$ number_of_reviews              <dbl> 18, 20, 24, 47, 14, 12, 133, 17, 12, 3,…\n$ last_review                    <date> 2014-12-26, 2020-01-17, 2019-10-13, 20…\n$ reviews_per_month              <dbl> 0.18, 0.15, 0.18, 0.34, 0.11, 0.10, 1.0…\n$ calculated_host_listings_count <dbl> 1, 6, 6, 6, 44, 6, 7, 44, 44, 44, 6, 7,…\n$ availability_365               <dbl> 365, 340, 265, 365, 296, 285, 365, 181,…\n$ number_of_reviews_ltm          <dbl> 0, 0, 0, 0, 1, 0, 0, 3, 2, 0, 1, 0, 0, …\n$ license                        <chr> NA, NA, NA, NA, \"S0399\", NA, NA, \"S0399…\n$ geometry                       <POINT [m]> POINT (22646.02 35167.9), POINT (…\n\n\n\n\n\n\n\n\nbuffer_cycling <- st_buffer(cyclingpath, \n                               dist=5, nQuadSegs = 30)\n\n\nbuffer_cycling$AREA <- st_area(buffer_cycling)\n\n\nsum(buffer_cycling$AREA)\n\n1556978 [m^2]\n\n\n\n\n\n\nmpsz3414$`PreSch Count`<- lengths(st_intersects(mpsz3414, preschool3414))\n\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    3.00    5.96    9.00   58.00 \n\n\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           58\n\n\n\nmpsz3414$Area <- mpsz3414 %>%\n  st_area()\n\n\nmpsz3414 <- mpsz3414 %>%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)\n\n\n\n\n\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "",
    "text": "In this section, I will install and load tidyverse and sf packages.\n\npacman::p_load(sf, tmap, tidyverse)\n\n\n\n\n\nmpsz <- st_read(dsn = \"data/geospatial/MP14_SUBZONE_WEB_PL\", \n               layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\kt-x\\is415-GAA\\Hands-on_Ex\\Hands-on_Ex02\\data\\geospatial\\MP14_SUBZONE_WEB_PL' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\n\npopdata <- read.csv(\"data/aspatial/respopagesextod2011to2020.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#data-wrangling",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#joining-the-attribute-data-and-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#joining-the-attribute-data-and-geospatial-data",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "Joining the attribute data and geospatial data",
    "text": "Joining the attribute data and geospatial data\n\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n\n\nmpsz_pop2020 <- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#choropleth-mapping-geospatial-data-using-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#choropleth-mapping-geospatial-data-using-tmap",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "Choropleth Mapping Geospatial Data Using tmap",
    "text": "Choropleth Mapping Geospatial Data Using tmap\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-a-choropleth-map-quickly-by-using-qtm",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-a-choropleth-map-quickly-by-using-qtm",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "Plotting a choropleth map quickly by using qtm()",
    "text": "Plotting a choropleth map quickly by using qtm()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#drawing-a-base-map",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#drawing-a-base-map",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "Drawing a Base Map",
    "text": "Drawing a Base Map\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#drawing-a-choropleth-map-using-tm_polygons",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#drawing-a-choropleth-map-using-tm_polygons",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "Drawing a choropleth map using tm_polygons()",
    "text": "Drawing a choropleth map using tm_polygons()\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#drawing-a-choropleth-map-using-tm_fill-and-tm_border",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#drawing-a-choropleth-map-using-tm_fill-and-tm_border",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "Drawing a choropleth map using tm_fill() and *tm_border()**",
    "text": "Drawing a choropleth map using tm_fill() and *tm_border()**\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\nWith border\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-choropleth-maps-with-built-in-classification-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-choropleth-maps-with-built-in-classification-methods",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "Plotting choropleth maps with built-in classification methods",
    "text": "Plotting choropleth maps with built-in classification methods\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-choropleth-map-with-custome-break",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-choropleth-map-with-custome-break",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "Plotting choropleth map with custome break",
    "text": "Plotting choropleth map with custome break\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 \n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nColour Scheme\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#map-layouts",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#map-layouts",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "Map Layouts",
    "text": "Map Layouts\n\nMap Legend\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nMap Style\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\nCartographic Furniture\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\nreset default style\n\ntmap_style(\"white\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#drawing-small-multiple-choropleth-maps-by-assigning-multiple-values-to-at-least-one-of-the-aesthetic-arguments",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#drawing-small-multiple-choropleth-maps-by-assigning-multiple-values-to-at-least-one-of-the-aesthetic-arguments",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "Drawing Small Multiple Choropleth Maps #By assigning multiple values to at least one of the aesthetic arguments",
    "text": "Drawing Small Multiple Choropleth Maps #By assigning multiple values to at least one of the aesthetic arguments\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#by-defining-a-group-by-variable-in-tm_facets",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#by-defining-a-group-by-variable-in-tm_facets",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "By defining a group-by variable in tm_facets()",
    "text": "By defining a group-by variable in tm_facets()\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#by-creating-multiple-stand-alone-maps-with-tmap_arrange",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#by-creating-multiple-stand-alone-maps-with-tmap_arrange",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "By creating multiple stand-alone maps with tmap_arrange()",
    "text": "By creating multiple stand-alone maps with tmap_arrange()\n\nyoungmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#mappping-spatial-object-meeting-a-selection-criterion",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#mappping-spatial-object-meeting-a-selection-criterion",
    "title": "Hands-on Exercise 2: Choropleth Mapping with R",
    "section": "Mappping Spatial Object Meeting a Selection Criterion",
    "text": "Mappping Spatial Object Meeting a Selection Criterion\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap)\n\n\n\n\nchildcare_sf <- st_read(\"data/child-care-services-geojson.geojson\") %>%\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\kt-x\\is415-GAA\\Hands-on_Ex\\Hands-on_Ex03\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nsg_sf <- st_read(dsn = \"data\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\kt-x\\is415-GAA\\Hands-on_Ex\\Hands-on_Ex03\\data' using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf <- st_read(dsn = \"data\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\kt-x\\is415-GAA\\Hands-on_Ex\\Hands-on_Ex03\\data' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\n\n\ntmap_mode('view')\ntm_shape(childcare_sf) + tm_dots()\n\n\n\n\n\n\n\ntmap_mode('plot')\n\n\n\n\nchildcare <- as_Spatial(childcare_sf)\nmpsz <- as_Spatial(mpsz_sf)\nsg <- as_Spatial(sg_sf)\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>018989</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>08F73931F4A691F4</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \nmax values  : kml_999,                  <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>829646</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td>Child Care Services</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>RAFFLES KIDZ @ PUNGGOL PTE LTD</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>379D017BF244B0FA</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND \n\n\n\n\n\n\nchildcare_sp <- as(childcare, \"SpatialPoints\")\nsg_sp <- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \n\n\n##Converting the generic sp format into spatstat’s ppp format\n\nchildcare_ppp <- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\n\n\n\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    1    3    1    1    1    1    2    1    1    1    1    1    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    1    1    1    1    9    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    1    1    3    1    1    1    1    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    1    1    1    1    2    1    1    1    1    1    2    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    3    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    2    1    1    1    3    1    1    1    2    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    3    2 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    2    1    1    1    2    2    3    1    5    1    5    1    1    1    2 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    1    1    2    1    1    1    1    1    1    2    1    1    1    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    4    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    1    1    2    2    1    1    1    1    2    1    4    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    3 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    1    1    1    1    1    9    1    1    2    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    5    1    1    1    1    1    2    1    1    2    2    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    2    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    9    1    1    1    1    1    1    1    1    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    9    9    1    1    1    1    1    1    1    1    1    1    2    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    2    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    2 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    3    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    3    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    2    2    1    1    1    1    2    1    1    2    1    1    1    2    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    2    1    1    1    1    1    9    1    4    1    2    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   2    1    1    1    1    1    1    1    2    1    2    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    1    1    1    1    2    1    2    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    4    1    1    1    1    1    4    1    1    1    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    4    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   3    1    1    1    2    1    1    1    3    1    1    3    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   1    1    1    1    1    1    1    1    1    2    2    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    1    1    1    1    2    2    1    1    1    5    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    9    1    2    2    1    1    1    2    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    2    1    1    1    3    1    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   9    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    2    1    2    1    1    1    2    2    2    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    1    1    1    1    1    1    1    4    1    1    1    1    1    2    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    9    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    2    1    1    1    1    2    1    1    1    1    3 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 \n   1    1    1    1    1    1    2    1    1 \n\n\n\nsum(multiplicity(childcare_ppp) > 1)\n\n[1] 128\n\n\n\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\n\ntmap_mode('plot')\n\n\n\n\nchildcare_ppp_jit <- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE\n\n\n\n\n\n\n\nsg_owin <- as(sg_sp, \"owin\")\n\n\nplot(sg_owin)\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414\n\n\n\n\n\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 2.063463e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#nearest-neighbour-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#nearest-neighbour-analysis",
    "title": "Hands-on_Ex03",
    "section": "2.1 Nearest Neighbour Analysis",
    "text": "2.1 Nearest Neighbour Analysis\n\n2.1.1 Testing spatial point patterns using Clark and Evans Test\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  childcareSG_ppp\nR = 0.54756, p-value = 0.01\nalternative hypothesis: clustered (R < 1)\n\n\n\n2.1.1.1 Clark and Evans Test: Choa Chu Kang planning area\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 999 simulations of CSR with fixed n\n\ndata:  childcare_ck_ppp\nR = 0.94902, p-value = 0.106\nalternative hypothesis: two-sided\n\n\n\n\n2.1.1.2 Clark and Evans Test: Tampines planning area\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 999 simulations of CSR with fixed n\n\ndata:  childcare_tm_ppp\nR = 0.79942, p-value = 0.002\nalternative hypothesis: two-sided"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#analysing-spatial-point-process-using-g-function",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#analysing-spatial-point-process-using-g-function",
    "title": "Hands-on_Ex03",
    "section": "3.1 Analysing Spatial Point Process Using G-Function",
    "text": "3.1 Analysing Spatial Point Process Using G-Function\n\n3.1.1 Choa Chu Kang planning area Computing G-function estimation\n\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\n\n\n3.1.2 Performing Complete Spatial Randomness Test\n\nG_CK.csr <- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(G_CK.csr)\n\n\n\n\n\n\n3.1.3 Tampines planning area - Computing G-function estimation\n\nG_tm = Gest(childcare_tm_ppp, correction = \"best\")\nplot(G_tm)\n\n\n\n\n\n\n3.1.4 Performing Complete Spatial Randomness Test\n\nG_tm.csr <- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(G_tm.csr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#analysing-spatial-point-process-using-f-function",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#analysing-spatial-point-process-using-f-function",
    "title": "Hands-on_Ex03",
    "section": "3.2 Analysing Spatial Point Process Using F-Function",
    "text": "3.2 Analysing Spatial Point Process Using F-Function\n\n3.2.1 Choa Chu Kang planning area\n\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\n\n\n3.2.2 Performing Complete Spatial Randomness Test Monte Carlo test with F-fucntion\n\nF_CK.csr <- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(F_CK.csr)\n\n\n\n\n\n\n3.2.3 Tampines planning area Computing F-function estimation\n\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\n\n\n3.2.4 Performing Complete Spatial Randomness Test\n\nF_tm.csr <- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(F_tm.csr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#analysing-spatial-point-process-using-k-function",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#analysing-spatial-point-process-using-k-function",
    "title": "Hands-on_Ex03",
    "section": "3.3 Analysing Spatial Point Process Using K-Function",
    "text": "3.3 Analysing Spatial Point Process Using K-Function\n\n3.3.1 Choa Chu Kang planning area Computing K-fucntion estimate\n\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n3.3.2 Performing Complete Spatial Randomness Test\n\nK_ck.csr <- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n3.3.3 Tampines planning area Computing K-function estimation\n\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n3.3.4 Performing Complete Spatial Randomness Test\n\nK_tm.csr <- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#analysing-spatial-point-process-using-l-function",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#analysing-spatial-point-process-using-l-function",
    "title": "Hands-on_Ex03",
    "section": "3.4 Analysing Spatial Point Process Using L-Function",
    "text": "3.4 Analysing Spatial Point Process Using L-Function\n\n3.4.1 Choa Chu Kang planning area Computing L Fucntion estimation\n\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n3.4.2 Performing Complete Spatial Randomness Test\n\nL_ck.csr <- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n3.4.3 Tampines planning area Computing L-function estimate\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n3.4.4 Performing Complete Spatial Randomness Test\n\nL_tm.csr <- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands-on_Ex06",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse, knitr)\n\n\n\n\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\kt-x\\is415-GAA\\Hands-on_Ex\\Hands-on_Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nhunan <- left_join(hunan,hunan2012)%>%\n  select(1:4, 7, 15)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#computing-queen-contiguity-based-neighbours",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#computing-queen-contiguity-based-neighbours",
    "title": "Hands-on_Ex06",
    "section": "3.1 Computing (QUEEN) contiguity based neighbours",
    "text": "3.1 Computing (QUEEN) contiguity based neighbours\n\nwm_q <- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\nwm_q[[1]]\n\n[1]  2  3  4 57 85\n\n\n\nhunan$County[1]\n\n[1] \"Anxiang\"\n\n\n\nhunan$NAME_3[c(2,3,4,57,85)]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\n\n\nnb1 <- wm_q[[1]]\nnb1 <- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\n\nstr(wm_q)\n\nList of 88\n $ : int [1:5] 2 3 4 57 85\n $ : int [1:5] 1 57 58 78 85\n $ : int [1:4] 1 4 5 85\n $ : int [1:4] 1 3 5 6\n $ : int [1:4] 3 4 6 85\n $ : int [1:5] 4 5 69 75 85\n $ : int [1:4] 67 71 74 84\n $ : int [1:7] 9 46 47 56 78 80 86\n $ : int [1:6] 8 66 68 78 84 86\n $ : int [1:8] 16 17 19 20 22 70 72 73\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:3] 11 15 17\n $ : int [1:4] 13 14 17 83\n $ : int [1:5] 10 17 22 72 83\n $ : int [1:7] 10 11 14 15 16 72 83\n $ : int [1:5] 20 22 23 77 83\n $ : int [1:6] 10 20 21 73 74 86\n $ : int [1:7] 10 18 19 21 22 23 82\n $ : int [1:5] 19 20 35 82 86\n $ : int [1:5] 10 16 18 20 83\n $ : int [1:7] 18 20 38 41 77 79 82\n $ : int [1:5] 25 28 31 32 54\n $ : int [1:5] 24 28 31 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:3] 26 29 42\n $ : int [1:5] 24 25 33 49 54\n $ : int [1:3] 27 37 42\n $ : int 33\n $ : int [1:8] 24 25 32 36 39 40 56 81\n $ : int [1:8] 24 31 50 54 55 56 75 85\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 47 80 82 86\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:4] 29 42 43 44\n $ : int [1:4] 23 44 77 79\n $ : int [1:5] 31 40 42 43 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:7] 26 27 29 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:4] 37 38 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:3] 8 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:5] 32 48 52 54 55\n $ : int [1:3] 48 49 52\n $ : int [1:5] 48 49 50 51 54\n $ : int [1:3] 48 55 75\n $ : int [1:6] 24 28 32 49 50 52\n $ : int [1:5] 32 48 50 53 75\n $ : int [1:7] 8 31 32 36 78 80 85\n $ : int [1:6] 1 2 58 64 76 85\n $ : int [1:5] 2 57 68 76 78\n $ : int [1:4] 60 61 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:7] 12 59 60 62 63 77 87\n $ : int [1:3] 61 77 87\n $ : int [1:4] 12 61 77 83\n $ : int [1:2] 57 76\n $ : int 76\n $ : int [1:5] 9 67 68 76 84\n $ : int [1:4] 7 66 76 84\n $ : int [1:5] 9 58 66 76 78\n $ : int [1:3] 6 75 85\n $ : int [1:3] 10 72 73\n $ : int [1:3] 7 73 74\n $ : int [1:5] 10 11 16 17 70\n $ : int [1:5] 10 19 70 71 74\n $ : int [1:6] 7 19 71 73 84 86\n $ : int [1:6] 6 32 53 55 69 85\n $ : int [1:7] 57 58 64 65 66 67 68\n $ : int [1:7] 18 23 38 61 62 63 83\n $ : int [1:7] 2 8 9 56 58 68 85\n $ : int [1:7] 23 38 40 41 43 44 45\n $ : int [1:8] 8 34 35 36 41 45 47 56\n $ : int [1:6] 25 26 31 33 39 42\n $ : int [1:5] 20 21 23 35 41\n $ : int [1:9] 12 13 15 16 17 18 22 63 77\n $ : int [1:6] 7 9 66 67 74 86\n $ : int [1:11] 1 2 3 5 6 32 56 57 69 75 ...\n $ : int [1:9] 8 9 19 21 35 46 47 74 84\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language poly2nb(pl = hunan, queen = TRUE)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"sym\")= logi TRUE\n\n\n\n3.1.1 Creating (ROOK) contiguity based neighbours\n\nwm_r <- poly2nb(hunan, queen=FALSE)\nsummary(wm_r)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links\n\n\n\n\n3.1.2 Visualising contiguity weights\n\nlatitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\n\nlongitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\n\ncoords <- cbind(longitude, latitude)\n\n\nhead(coords)\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\n3.1.2.1 Plotting Queen contiguity based neighbours map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n\n\n\n\n\n\n3.1.2.2 Plotting Rook contiguity based neighbours map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\n3.1.2.3 Plotting both Queen and Rook contiguity based neighbours maps\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\", main=\"Queen Contiguity\")\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\", main=\"Rook Contiguity\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#determine-the-cut-off-distance",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#determine-the-cut-off-distance",
    "title": "Hands-on_Ex06",
    "section": "4.1 Determine the cut-off distance",
    "text": "4.1 Determine the cut-off distance\n\n#coords <- coordinates(hunan)\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\n4.1.1 Computing fixed distance weight matrix\n\nwm_d62 <- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nQuiz: What is the meaning of “Average number of links: 3.681818” shown above?\nNext, we will use str() to display the content of wm_d62 weight matrix.\n\nstr(wm_d62)\n\nList of 88\n $ : int [1:5] 3 4 5 57 64\n $ : int [1:4] 57 58 78 85\n $ : int [1:4] 1 4 5 57\n $ : int [1:3] 1 3 5\n $ : int [1:4] 1 3 4 85\n $ : int 69\n $ : int [1:2] 67 84\n $ : int [1:4] 9 46 47 78\n $ : int [1:4] 8 46 68 84\n $ : int [1:4] 16 22 70 72\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:2] 11 17\n $ : int 13\n $ : int [1:4] 10 17 22 83\n $ : int [1:3] 11 14 16\n $ : int [1:3] 20 22 63\n $ : int [1:5] 20 21 73 74 82\n $ : int [1:5] 18 19 21 22 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:4] 10 16 18 20\n $ : int [1:3] 41 77 82\n $ : int [1:4] 25 28 31 54\n $ : int [1:4] 24 28 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:2] 26 29\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:2] 27 37\n $ : int 33\n $ : int [1:2] 24 36\n $ : int 50\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:5] 31 34 45 56 80\n $ : int [1:2] 29 42\n $ : int [1:3] 44 77 79\n $ : int [1:4] 40 42 43 81\n $ : int [1:3] 39 45 79\n $ : int [1:5] 23 35 45 79 82\n $ : int [1:5] 26 37 39 43 81\n $ : int [1:3] 39 42 44\n $ : int [1:2] 38 43\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:5] 8 9 35 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:4] 48 49 50 52\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:2] 48 55\n $ : int [1:5] 24 28 49 50 52\n $ : int [1:4] 48 50 53 75\n $ : int 36\n $ : int [1:5] 1 2 3 58 64\n $ : int [1:5] 2 57 64 66 68\n $ : int [1:3] 60 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:5] 12 60 62 63 87\n $ : int [1:4] 61 63 77 87\n $ : int [1:5] 12 18 61 62 83\n $ : int [1:4] 1 57 58 76\n $ : int 76\n $ : int [1:5] 58 67 68 76 84\n $ : int [1:2] 7 66\n $ : int [1:4] 9 58 66 84\n $ : int [1:2] 6 75\n $ : int [1:3] 10 72 73\n $ : int [1:2] 73 74\n $ : int [1:3] 10 11 70\n $ : int [1:4] 19 70 71 74\n $ : int [1:5] 19 21 71 73 86\n $ : int [1:2] 55 69\n $ : int [1:3] 64 65 66\n $ : int [1:3] 23 38 62\n $ : int [1:2] 2 8\n $ : int [1:4] 38 40 41 45\n $ : int [1:5] 34 35 36 45 47\n $ : int [1:5] 25 26 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:4] 12 13 16 63\n $ : int [1:4] 7 9 66 68\n $ : int [1:2] 2 5\n $ : int [1:4] 21 46 47 74\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 62, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 62\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n\n\nAnother way to display the structure of the weight matrix is to combine table() and card() of spdep.\n\ntable(hunan$County, card(wm_d62))\n\n               \n                1 2 3 4 5 6\n  Anhua         1 0 0 0 0 0\n  Anren         0 0 0 1 0 0\n  Anxiang       0 0 0 0 1 0\n  Baojing       0 0 0 0 1 0\n  Chaling       0 0 1 0 0 0\n  Changning     0 0 1 0 0 0\n  Changsha      0 0 0 1 0 0\n  Chengbu       0 1 0 0 0 0\n  Chenxi        0 0 0 1 0 0\n  Cili          0 1 0 0 0 0\n  Dao           0 0 0 1 0 0\n  Dongan        0 0 1 0 0 0\n  Dongkou       0 0 0 1 0 0\n  Fenghuang     0 0 0 1 0 0\n  Guidong       0 0 1 0 0 0\n  Guiyang       0 0 0 1 0 0\n  Guzhang       0 0 0 0 0 1\n  Hanshou       0 0 0 1 0 0\n  Hengdong      0 0 0 0 1 0\n  Hengnan       0 0 0 0 1 0\n  Hengshan      0 0 0 0 0 1\n  Hengyang      0 0 0 0 0 1\n  Hongjiang     0 0 0 0 1 0\n  Huarong       0 0 0 1 0 0\n  Huayuan       0 0 0 1 0 0\n  Huitong       0 0 0 1 0 0\n  Jiahe         0 0 0 0 1 0\n  Jianghua      0 0 1 0 0 0\n  Jiangyong     0 1 0 0 0 0\n  Jingzhou      0 1 0 0 0 0\n  Jinshi        0 0 0 1 0 0\n  Jishou        0 0 0 0 0 1\n  Lanshan       0 0 0 1 0 0\n  Leiyang       0 0 0 1 0 0\n  Lengshuijiang 0 0 1 0 0 0\n  Li            0 0 1 0 0 0\n  Lianyuan      0 0 0 0 1 0\n  Liling        0 1 0 0 0 0\n  Linli         0 0 0 1 0 0\n  Linwu         0 0 0 1 0 0\n  Linxiang      1 0 0 0 0 0\n  Liuyang       0 1 0 0 0 0\n  Longhui       0 0 1 0 0 0\n  Longshan      0 1 0 0 0 0\n  Luxi          0 0 0 0 1 0\n  Mayang        0 0 0 0 0 1\n  Miluo         0 0 0 0 1 0\n  Nan           0 0 0 0 1 0\n  Ningxiang     0 0 0 1 0 0\n  Ningyuan      0 0 0 0 1 0\n  Pingjiang     0 1 0 0 0 0\n  Qidong        0 0 1 0 0 0\n  Qiyang        0 0 1 0 0 0\n  Rucheng       0 1 0 0 0 0\n  Sangzhi       0 1 0 0 0 0\n  Shaodong      0 0 0 0 1 0\n  Shaoshan      0 0 0 0 1 0\n  Shaoyang      0 0 0 1 0 0\n  Shimen        1 0 0 0 0 0\n  Shuangfeng    0 0 0 0 0 1\n  Shuangpai     0 0 0 1 0 0\n  Suining       0 0 0 0 1 0\n  Taojiang      0 1 0 0 0 0\n  Taoyuan       0 1 0 0 0 0\n  Tongdao       0 1 0 0 0 0\n  Wangcheng     0 0 0 1 0 0\n  Wugang        0 0 1 0 0 0\n  Xiangtan      0 0 0 1 0 0\n  Xiangxiang    0 0 0 0 1 0\n  Xiangyin      0 0 0 1 0 0\n  Xinhua        0 0 0 0 1 0\n  Xinhuang      1 0 0 0 0 0\n  Xinning       0 1 0 0 0 0\n  Xinshao       0 0 0 0 0 1\n  Xintian       0 0 0 0 1 0\n  Xupu          0 1 0 0 0 0\n  Yanling       0 0 1 0 0 0\n  Yizhang       1 0 0 0 0 0\n  Yongshun      0 0 0 1 0 0\n  Yongxing      0 0 0 1 0 0\n  You           0 0 0 1 0 0\n  Yuanjiang     0 0 0 0 1 0\n  Yuanling      1 0 0 0 0 0\n  Yueyang       0 0 1 0 0 0\n  Zhijiang      0 0 0 0 1 0\n  Zhongfang     0 0 0 1 0 0\n  Zhuzhou       0 0 0 0 1 0\n  Zixing        0 0 1 0 0 0\n\n\n\n4.1.1.1 Plotting fixed distance weight matrix\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_d62, coords, add=TRUE)\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\n\n\n\n\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\")\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08, main=\"1st nearest neighbours\")\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_d62, coords, add=TRUE, pch = 19, cex = 0.6, main=\"Distance link\")\n\n\n\n\n\n\n\n4.1.2 Computing adaptive distance weight matrix\n\nknn6 <- knn2nb(knearneigh(coords, k=6))\nknn6\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 528 \nPercentage nonzero weights: 6.818182 \nAverage number of links: 6 \nNon-symmetric neighbours list\n\n\n\nstr(knn6)\n\nList of 88\n $ : int [1:6] 2 3 4 5 57 64\n $ : int [1:6] 1 3 57 58 78 85\n $ : int [1:6] 1 2 4 5 57 85\n $ : int [1:6] 1 3 5 6 69 85\n $ : int [1:6] 1 3 4 6 69 85\n $ : int [1:6] 3 4 5 69 75 85\n $ : int [1:6] 9 66 67 71 74 84\n $ : int [1:6] 9 46 47 78 80 86\n $ : int [1:6] 8 46 66 68 84 86\n $ : int [1:6] 16 19 22 70 72 73\n $ : int [1:6] 10 14 16 17 70 72\n $ : int [1:6] 13 15 60 61 63 83\n $ : int [1:6] 12 15 60 61 63 83\n $ : int [1:6] 11 15 16 17 72 83\n $ : int [1:6] 12 13 14 17 60 83\n $ : int [1:6] 10 11 17 22 72 83\n $ : int [1:6] 10 11 14 16 72 83\n $ : int [1:6] 20 22 23 63 77 83\n $ : int [1:6] 10 20 21 73 74 82\n $ : int [1:6] 18 19 21 22 23 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:6] 10 16 18 19 20 83\n $ : int [1:6] 18 20 41 77 79 82\n $ : int [1:6] 25 28 31 52 54 81\n $ : int [1:6] 24 28 31 33 54 81\n $ : int [1:6] 25 27 29 33 42 81\n $ : int [1:6] 26 29 30 37 42 81\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:6] 26 27 37 42 43 81\n $ : int [1:6] 26 27 28 33 49 81\n $ : int [1:6] 24 25 36 39 40 54\n $ : int [1:6] 24 31 50 54 55 56\n $ : int [1:6] 25 26 28 30 49 81\n $ : int [1:6] 36 40 41 45 56 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:6] 26 27 29 42 43 44\n $ : int [1:6] 23 43 44 62 77 79\n $ : int [1:6] 25 40 42 43 44 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:6] 26 27 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:6] 37 38 39 42 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:6] 8 9 35 47 78 86\n $ : int [1:6] 8 21 35 46 80 86\n $ : int [1:6] 49 50 51 52 53 55\n $ : int [1:6] 28 33 48 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:6] 28 48 49 50 52 54\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:6] 48 50 51 52 55 75\n $ : int [1:6] 24 28 49 50 51 52\n $ : int [1:6] 32 48 50 52 53 75\n $ : int [1:6] 32 34 36 78 80 85\n $ : int [1:6] 1 2 3 58 64 68\n $ : int [1:6] 2 57 64 66 68 78\n $ : int [1:6] 12 13 60 61 87 88\n $ : int [1:6] 12 13 59 61 63 87\n $ : int [1:6] 12 13 60 62 63 87\n $ : int [1:6] 12 38 61 63 77 87\n $ : int [1:6] 12 18 60 61 62 83\n $ : int [1:6] 1 3 57 58 68 76\n $ : int [1:6] 58 64 66 67 68 76\n $ : int [1:6] 9 58 67 68 76 84\n $ : int [1:6] 7 65 66 68 76 84\n $ : int [1:6] 9 57 58 66 78 84\n $ : int [1:6] 4 5 6 32 75 85\n $ : int [1:6] 10 16 19 22 72 73\n $ : int [1:6] 7 19 73 74 84 86\n $ : int [1:6] 10 11 14 16 17 70\n $ : int [1:6] 10 19 21 70 71 74\n $ : int [1:6] 19 21 71 73 84 86\n $ : int [1:6] 6 32 50 53 55 69\n $ : int [1:6] 58 64 65 66 67 68\n $ : int [1:6] 18 23 38 61 62 63\n $ : int [1:6] 2 8 9 46 58 68\n $ : int [1:6] 38 40 41 43 44 45\n $ : int [1:6] 34 35 36 41 45 47\n $ : int [1:6] 25 26 28 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:6] 12 13 15 16 22 63\n $ : int [1:6] 7 9 66 68 71 74\n $ : int [1:6] 2 3 4 5 56 69\n $ : int [1:6] 8 9 21 46 47 74\n $ : int [1:6] 59 60 61 62 63 88\n $ : int [1:6] 59 60 61 62 63 87\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language knearneigh(x = coords, k = 6)\n - attr(*, \"sym\")= logi FALSE\n - attr(*, \"type\")= chr \"knn\"\n - attr(*, \"knn-k\")= num 6\n - attr(*, \"class\")= chr \"nb\"\n\n\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#spatial-lag-with-row-standardized-weights",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#spatial-lag-with-row-standardized-weights",
    "title": "Hands-on_Ex06",
    "section": "6.1 Spatial lag with row-standardized weights",
    "text": "6.1 Spatial lag with row-standardized weights\n\nGDPPC.lag <- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\n\nnb1 <- wm_q[[1]]\nnb1 <- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\n\nlag.list <- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nlag.res <- as.data.frame(lag.list)\ncolnames(lag.res) <- c(\"NAME_3\", \"lag GDPPC\")\nhunan <- left_join(hunan,lag.res)\n\n\nhead(hunan)\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25\n4 Changde 21102      Li      County      Li 24473  27737.50\n5 Changde 21103   Linli      County   Linli 25554  27270.25\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\n\ngdppc <- qtm(hunan, \"GDPPC\")\nlag_gdppc <- qtm(hunan, \"lag GDPPC\")\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)\n\n\n\n\n\n6.1.1 Spatial lag as a sum of neighboring values\n\nb_weights <- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 <- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\n\nlag_sum <- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res <- as.data.frame(lag_sum)\ncolnames(lag.res) <- c(\"NAME_3\", \"lag_sum GDPPC\")\n\n\nlag_sum\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 124236 113624  96573 110950 109081 106244 174988 235079 273907 256221\n[11]  98013 104050 102846  92017 133831 158446 141883 119508 150757 153324\n[21] 113593 129594 142149 100119  82884  74668  43184  99244  46549  20518\n[31] 140576 121601  92069  43258 144567 132119  51694  59024  69349  73780\n[41]  94651 100680  69398  52798 140472 118623 180933  82798  83090  97356\n[51]  59482  77334  38777 111463  74715 174391 150558 122144  68012  84575\n[61] 143045  51394  98279  47671  26360 236917 220631 185290  64640  70046\n[71] 126971 144693 129404 284074 112268 203611 145238 251536 108078 238300\n[81] 108870 108085 262835 248182 244850 404456  67608  33860\n\n\n\nhunan <- left_join(hunan, lag.res)\n\n\ngdppc <- qtm(hunan, \"GDPPC\")\nlag_sum_gdppc <- qtm(hunan, \"lag_sum GDPPC\")\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n6.1.2 Spatial window average\n\nwm_qs <- include.self(wm_q)\n\n\nwm_qs[[1]]\n\n[1]  1  2  3  4 57 85\n\n\n\nwm_qs <- nb2listw(wm_qs)\nwm_qs\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 30.90265 357.5308\n\n\n\nlag_w_avg_gpdpc <- lag.listw(wm_qs, \n                             hunan$GDPPC)\nlag_w_avg_gpdpc\n\n [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12\n [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83\n[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17\n[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44\n[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43\n[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83\n[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75\n[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00\n[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00\n[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22\n[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33\n\n\n\nlag.list.wm_qs <- list(hunan$NAME_3, lag.listw(wm_qs, hunan$GDPPC))\nlag_wm_qs.res <- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) <- c(\"NAME_3\", \"lag_window_avg GDPPC\")\n\n\nhunan <- left_join(hunan, lag_wm_qs.res)\n\n\nhunan %>%\n  select(\"County\", \"lag GDPPC\", \"lag_window_avg GDPPC\") %>%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n43747.00\n47621.20\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n33582.71\n37160.12\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n45651.17\n49224.71\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n32027.62\n29886.89\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n32671.00\n26627.50\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n20810.00\n22690.17\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n25711.50\n25366.40\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n30672.33\n25825.75\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n33457.75\n30329.00\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n31689.20\n32682.83\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n20269.00\n25948.62\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n23901.60\n23987.67\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n25126.17\n25463.14\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21903.43\n21904.38\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n22718.60\n23127.50\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n25918.80\n25949.83\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n20307.00\n20018.75\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n20023.80\n19524.17\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n16576.80\n18955.00\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n18667.00\n17800.40\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n14394.67\n15883.00\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n19848.80\n18831.33\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n15516.33\n14832.50\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518.00\n17965.00\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n17572.00\n17159.89\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n15200.12\n16199.44\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n18413.80\n18764.50\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n14419.33\n26878.75\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n24094.50\n23188.86\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n22019.83\n20788.14\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n12923.50\n12365.20\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n14756.00\n15985.00\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13869.80\n13764.83\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n12296.67\n11907.43\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n15775.17\n17128.14\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n14382.86\n14593.62\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n11566.33\n11644.29\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n13199.50\n12706.00\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n23412.00\n21712.29\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n39541.00\n43548.25\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n36186.60\n35049.00\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n16559.60\n16226.83\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n20772.50\n19294.40\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n19471.20\n18156.00\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n19827.33\n19954.75\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n15466.80\n18145.17\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n12925.67\n12132.75\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n18577.17\n18419.29\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n14943.00\n14050.83\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n24913.00\n23619.75\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n25093.00\n24552.71\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n24428.80\n24733.67\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n17003.00\n16762.60\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n21143.75\n20932.60\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n20435.00\n19467.75\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n17131.33\n18334.00\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n24569.75\n22541.00\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n23835.50\n26028.00\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360.00\n29128.50\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n47383.40\n46569.00\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n55157.75\n47576.60\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n37058.00\n36545.50\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n21546.67\n20838.50\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n23348.67\n22531.00\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n42323.67\n42115.50\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n28938.60\n27619.00\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n25880.80\n27611.33\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n47345.67\n44523.29\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n18711.33\n18127.43\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n29087.29\n28746.38\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20748.29\n20734.50\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n35933.71\n33880.62\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n15439.71\n14716.38\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n29787.50\n28516.22\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n18145.00\n18086.14\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21617.00\n21244.50\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n29203.89\n29568.80\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n41363.67\n48119.71\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22259.09\n22310.75\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n44939.56\n43151.60\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n16902.00\n17133.40\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n16930.00\n17009.33\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\n\nw_avg_gdppc <- qtm(hunan, \"lag_window_avg GDPPC\")\ntmap_arrange(lag_gdppc, w_avg_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n6.1.3 Spatial window sum\n\nwm_qs <- include.self(wm_q)\nwm_qs\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\n\n\nb_weights <- lapply(wm_qs, function(x) 0*x + 1)\nb_weights[1]\n\n[[1]]\n[1] 1 1 1 1 1 1\n\n\n\nb_weights2 <- nb2listw(wm_qs, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 536 1072 14160\n\n\n\nw_sum_gdppc <- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nw_sum_gdppc\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 147903 134605 131165 135423 134635 133381 238106 297281 344573 268982\n[11] 106510 136141 126832 103303 151645 196097 207589 143926 178242 175235\n[21] 138765 155699 160150 117145 113730  89002  63532 112988  59330  35930\n[31] 154439 145795 112587 107515 162322 145517  61826  79925  82589  83352\n[41] 119897 116749  81510  63530 151986 174193 210294  97361  96472 108936\n[51]  79819 108871  48531 128935  84305 188958 171869 148402  83813 104663\n[61] 155742  73336 112705  78084  58257 279414 237883 219273  83354  90124\n[71] 168462 165714 165668 311663 126892 229971 165876 271045 117731 256646\n[81] 126603 127467 295688 336838 267729 431516  85667  51028\n\n\n\nw_sum_gdppc.res <- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) <- c(\"NAME_3\", \"w_sum GDPPC\")\n\n\nhunan <- left_join(hunan, w_sum_gdppc.res)\n\n\nhunan %>%\n  select(\"County\", \"lag_sum GDPPC\", \"w_sum GDPPC\") %>%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n174988\n238106\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n235079\n297281\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n273907\n344573\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n256221\n268982\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n98013\n106510\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n104050\n136141\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n102846\n126832\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n92017\n103303\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n133831\n151645\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n158446\n196097\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n141883\n207589\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n119508\n143926\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n150757\n178242\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n153324\n175235\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n113593\n138765\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n129594\n155699\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n142149\n160150\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n100119\n117145\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n82884\n113730\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n74668\n89002\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n43184\n63532\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n99244\n112988\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n46549\n59330\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518\n35930\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n140576\n154439\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n121601\n145795\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n92069\n112587\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n43258\n107515\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n144567\n162322\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n132119\n145517\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n51694\n61826\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n59024\n79925\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n69349\n82589\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n73780\n83352\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n94651\n119897\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n100680\n116749\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n69398\n81510\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n52798\n63530\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n140472\n151986\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n118623\n174193\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n180933\n210294\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n82798\n97361\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n83090\n96472\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n97356\n108936\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n59482\n79819\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n77334\n108871\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n38777\n48531\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n111463\n128935\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n74715\n84305\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n174391\n188958\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n150558\n171869\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n122144\n148402\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n68012\n83813\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n84575\n104663\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n143045\n155742\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n51394\n73336\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n98279\n112705\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n47671\n78084\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360\n58257\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n236917\n279414\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n220631\n237883\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n185290\n219273\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n64640\n83354\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n70046\n90124\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n126971\n168462\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n144693\n165714\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n129404\n165668\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n284074\n311663\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n112268\n126892\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n203611\n229971\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n145238\n165876\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n251536\n271045\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n108078\n117731\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n238300\n256646\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n108870\n126603\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n108085\n127467\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n262835\n295688\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n248182\n336838\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n244850\n267729\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n404456\n431516\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n67608\n85667\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n33860\n51028\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\n\nw_sum_gdppc <- qtm(hunan, \"w_sum GDPPC\")\ntmap_arrange(lag_sum_gdppc, w_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "title": "Hands-on_Ex07",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#geospatial",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#geospatial",
    "title": "Hands-on_Ex07",
    "section": "2.1 Geospatial",
    "text": "2.1 Geospatial\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\kt-x\\is415-GAA\\Hands-on_Ex\\Hands-on_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#aspatial",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#aspatial",
    "title": "Hands-on_Ex07",
    "section": "2.2 Aspatial",
    "text": "2.2 Aspatial\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#relational-join",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#relational-join",
    "title": "Hands-on_Ex07",
    "section": "2.3 Relational Join",
    "text": "2.3 Relational Join\n\nhunan <- left_join(hunan,hunan2012) %>%\n  select(1:4, 7, 15)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-regional-development-indicator",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-regional-development-indicator",
    "title": "Hands-on_Ex07",
    "section": "2.4 Visualising Regional Development Indicator",
    "text": "2.4 Visualising Regional Development Indicator\n\nequal <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-contiguity-spatial-weights",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-contiguity-spatial-weights",
    "title": "Hands-on_Ex07",
    "section": "3.1 Computing Contiguity Spatial Weights",
    "text": "3.1 Computing Contiguity Spatial Weights\n\nwm_q <- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#row-standardised-weights-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#row-standardised-weights-matrix",
    "title": "Hands-on_Ex07",
    "section": "3.2 Row-standardised weights matrix",
    "text": "3.2 Row-standardised weights matrix\n\nrswm_q <- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#global-spatial-autocorrelation-morans-i",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#global-spatial-autocorrelation-morans-i",
    "title": "Hands-on_Ex07",
    "section": "3.3 Global Spatial Autocorrelation: Moran’s I",
    "text": "3.3 Global Spatial Autocorrelation: Moran’s I\n\n3.3.1 Maron’s I test\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n\n3.3.2 Computing Monte Carlo Moran’s I\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n3.3.2.1 Visualising Monte Carlo Moran’s I\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#global-spatial-autocorrelation-gearys",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#global-spatial-autocorrelation-gearys",
    "title": "Hands-on_Ex07",
    "section": "3.4 Global Spatial Autocorrelation: Geary’s",
    "text": "3.4 Global Spatial Autocorrelation: Geary’s\n\n3.4.1 Geary’s C test\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\n3.4.1.1 Computing Monte Carlo Geary’s C\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n3.4.1.2 Visualising the Monte Carlo Geary’s C\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#compute-morans-i-correlogram",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#compute-morans-i-correlogram",
    "title": "Hands-on_Ex07",
    "section": "4.1 Compute Moran’s I correlogram",
    "text": "4.1 Compute Moran’s I correlogram\n\nMI_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#compute-gearys-c-correlogram-and-plot",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#compute-gearys-c-correlogram-and-plot",
    "title": "Hands-on_Ex07",
    "section": "4.2 Compute Geary’s C correlogram and plot",
    "text": "4.2 Compute Geary’s C correlogram and plot\n\nGC_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-local-morans-i",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-local-morans-i",
    "title": "Hands-on_Ex07",
    "section": "5.1 Computing local Moran’s I",
    "text": "5.1 Computing local Moran’s I\n\nfips <- order(hunan$County)\nlocalMI <- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\n5.1.1 Mapping the local Moran’s I\n\nhunan.localMI <- cbind(hunan,localMI) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n\n5.1.2 Mapping local Moran’s I values\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n5.1.3 Mapping local Moran’s I p-values\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n5.1.4 Mapping both local Moran’s I values and p-values\n\nlocalMI.map <- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map <- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#plotting-moran-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#plotting-moran-scatterplot",
    "title": "Hands-on_Ex07",
    "section": "6.1 Plotting Moran scatterplot",
    "text": "6.1 Plotting Moran scatterplot\n\nnci <- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\n\n6.1.1 Plotting Moran scatterplot with standardised variable\n\nhunan$Z.GDPPC <- scale(hunan$GDPPC) %>% \n  as.vector \n\n\nnci2 <- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#preparing-lisa-map-classes",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#preparing-lisa-map-classes",
    "title": "Hands-on_Ex07",
    "section": "6.2 Preparing LISA map classes",
    "text": "6.2 Preparing LISA map classes\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\n\n\nhunan$lag_GDPPC <- lag.listw(rswm_q, hunan$GDPPC)\nDV <- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \n\n\nLM_I <- localMI[,1] - mean(localMI[,1])    \n\n\nsignif <- 0.05       \n\n\nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4      \n\n\nquadrant[localMI[,5]>signif] <- 0\n\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\nhunan$lag_GDPPC <- lag.listw(rswm_q, hunan$GDPPC)\nDV <- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \nLM_I <- localMI[,1]   \nsignif <- 0.05       \nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4    \nquadrant[localMI[,5]>signif] <- 0"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#plotting-lisa-map",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#plotting-lisa-map",
    "title": "Hands-on_Ex07",
    "section": "6.3 Plotting LISA map",
    "text": "6.3 Plotting LISA map\n\nhunan.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\ngdppc <- qtm(hunan, \"GDPPC\")\n\nhunan.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap <- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#getis-and-ords-g-statistics",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#getis-and-ords-g-statistics",
    "title": "Hands-on_Ex07",
    "section": "7.1 Getis and Ord’s G-Statistics",
    "text": "7.1 Getis and Ord’s G-Statistics\n\n7.1.1 Deriving distance-based weight matrix\n\n7.1.1.1 Deriving the centroid\n\nlongitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\n\nlatitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\n\ncoords <- cbind(longitude, latitude)\n\n\n\n\n7.1.2 Determine the cut-off distance\n\n#coords <- coordinates(hunan)\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\n\n7.1.3 Computing fixed distance weight matrix\n\nwm_d62 <- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\n\nwm62_lw <- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-adaptive-distance-weight-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-adaptive-distance-weight-matrix",
    "title": "Hands-on_Ex07",
    "section": "7.2 Computing adaptive distance weight matrix",
    "text": "7.2 Computing adaptive distance weight matrix\n\nknn <- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\n\nknn_lw <- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#gi-statistics-using-fixed-distance",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#gi-statistics-using-fixed-distance",
    "title": "Hands-on_Ex07",
    "section": "8.1 Gi statistics using fixed distance",
    "text": "8.1 Gi statistics using fixed distance\n\nfips <- order(hunan$County)\ngi.fixed <- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\n\nhunan.gi <- cbind(hunan, as.matrix(gi.fixed)) %>%\n  rename(gstat_fixed = as.matrix.gi.fixed.)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#mapping-gi-values-with-fixed-distance-weights",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#mapping-gi-values-with-fixed-distance-weights",
    "title": "Hands-on_Ex07",
    "section": "8.2 Mapping Gi values with fixed distance weights",
    "text": "8.2 Mapping Gi values with fixed distance weights\n\ngdppc <- qtm(hunan, \"GDPPC\")\n\nGimap <-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#gi-statistics-using-adaptive-distance",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#gi-statistics-using-adaptive-distance",
    "title": "Hands-on_Ex07",
    "section": "8.3 Gi statistics using adaptive distance",
    "text": "8.3 Gi statistics using adaptive distance\n\nfips <- order(hunan$County)\ngi.adaptive <- localG(hunan$GDPPC, knn_lw)\nhunan.gi <- cbind(hunan, as.matrix(gi.adaptive)) %>%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#mapping-gi-values-with-adaptive-distance-weights",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#mapping-gi-values-with-adaptive-distance-weights",
    "title": "Hands-on_Ex07",
    "section": "8.4 Mapping Gi values with adaptive distance weights",
    "text": "8.4 Mapping Gi values with adaptive distance weights\n\ngdppc<- qtm(hunan, \"GDPPC\")\n\nGimap <- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "title": "Hands-on_Ex08",
    "section": "",
    "text": "pacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary, readr, dplyr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#geospatial-data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#geospatial-data-wrangling",
    "title": "Hands-on_Ex08",
    "section": "1 Geospatial Data Wrangling",
    "text": "1 Geospatial Data Wrangling\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\kt-x\\is415-GAA\\Hands-on_Ex\\Hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n1.1 Updating CRS information\n\nmpsz_svy21 <- st_transform(mpsz, 3414)\n\n\nst_crs(mpsz_svy21)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nst_bbox(mpsz_svy21) #view extent\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#aspatial-data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#aspatial-data-wrangling",
    "title": "Hands-on_Ex08",
    "section": "2 Aspatial Data Wrangling",
    "text": "2 Aspatial Data Wrangling\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             <dbl> 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            <dbl> 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             <dbl> 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\n\nhead(condo_resale$LONGITUDE) #see the data in XCOORD column\n\n[1] 103.7802 103.8123 103.7971 103.8247 103.9505 103.9386\n\n\n\nhead(condo_resale$LATITUDE) #see the data in YCOORD column\n\n[1] 1.287145 1.328698 1.313727 1.308563 1.321437 1.314198\n\n\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n\n\n\n2.1 Converting aspatial data frame into a sf object\n\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %>%\n  st_transform(crs=3414)\n\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLI…¹ AREA_…²   AGE PROX_…³ PROX_…⁴ PROX_…⁵ PROX_…⁶ PROX_…⁷ PROX_…⁸\n     <dbl>   <dbl>   <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1   118635 3000000     309    30    7.94   0.166   2.52     6.62   1.77   0.0584\n2   288420 3880000     290    32    6.61   0.280   1.93     7.51   0.545  0.616 \n3   267833 3325000     248    33    6.90   0.429   0.502    6.46   0.378  0.141 \n4   258380 4250000     127     7    4.04   0.395   1.99     4.91   1.68   0.382 \n5   467169 1400000     145    28   11.8    0.119   1.12     6.41   0.565  0.461 \n6   466472 1320000     139    22   10.3    0.125   0.789    5.09   0.781  0.0994\n# … with 12 more variables: PROX_MRT <dbl>, PROX_PARK <dbl>,\n#   PROX_PRIMARY_SCH <dbl>, PROX_TOP_PRIMARY_SCH <dbl>,\n#   PROX_SHOPPING_MALL <dbl>, PROX_SUPERMARKET <dbl>, PROX_BUS_STOP <dbl>,\n#   NO_Of_UNITS <dbl>, FAMILY_FRIENDLY <dbl>, FREEHOLD <dbl>,\n#   LEASEHOLD_99YR <dbl>, geometry <POINT [m]>, and abbreviated variable names\n#   ¹​SELLING_PRICE, ²​AREA_SQM, ³​PROX_CBD, ⁴​PROX_CHILDCARE, ⁵​PROX_ELDERLYCARE,\n#   ⁶​PROX_URA_GROWTH_AREA, ⁷​PROX_HAWKER_MARKET, ⁸​PROX_KINDERGARTEN"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#exploratory-data-analysis-eda",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#exploratory-data-analysis-eda",
    "title": "Hands-on_Ex08",
    "section": "3 Exploratory Data Analysis (EDA)",
    "text": "3 Exploratory Data Analysis (EDA)\n\n3.1 EDA using statistical graphics\n\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\n\ncondo_resale.sf <- condo_resale.sf %>%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\n\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\n\n\n3.2 Multiple Histogram Plots distribution of variables\n\nAREA_SQM <- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE <- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD <- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET <- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN <- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT <- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK <- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH <- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-statistical-point-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-statistical-point-map",
    "title": "Hands-on_Ex08",
    "section": "4 Drawing Statistical Point Map",
    "text": "4 Drawing Statistical Point Map\n\n# tmap_mode(\"view\")\n# \n# tm_shape(mpsz_svy21)+\n#   tm_polygons() +\n# tm_shape(condo_resale.sf) +\n#   tm_dots(col = \"SELLING_PRICE\",\n#           alpha = 0.6,\n#           style=\"quantile\") +\n#   tm_view(set.zoom.limits = c(11,14))\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#hedonic-pricing-modelling-in-r",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#hedonic-pricing-modelling-in-r",
    "title": "Hands-on_Ex08",
    "section": "5 Hedonic Pricing Modelling in R",
    "text": "5 Hedonic Pricing Modelling in R\n\n5.1 Simple Linear Regression Method\n\ncondo.slr <- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\n\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: < 2.2e-16\n\n\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#multiple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#multiple-linear-regression-method",
    "title": "Hands-on_Ex08",
    "section": "6 Multiple Linear Regression Method",
    "text": "6 Multiple Linear Regression Method\n\n6.1 Visualising the relationships of the independent variables\n\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-a-hedonic-pricing-model-using-multiple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-a-hedonic-pricing-model-using-multiple-linear-regression-method",
    "title": "Hands-on_Ex08",
    "section": "7 Building a hedonic pricing model using multiple linear regression method",
    "text": "7 Building a hedonic pricing model using multiple linear regression method\n\ncondo.mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  < 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  < 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  < 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  < 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: < 2.2e-16"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#preparing-publication-quality-table-olsrr-method",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#preparing-publication-quality-table-olsrr-method",
    "title": "Hands-on_Ex08",
    "section": "8 Preparing Publication Quality Table: olsrr method",
    "text": "8 Preparing Publication Quality Table: olsrr method\n\ncondo.mlr1 <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.591 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\n8.1 Preparing Publication Quality Table: gtsummary method\n\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %>% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = <0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#checking-for-multicolinearity",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#checking-for-multicolinearity",
    "title": "Hands-on_Ex08",
    "section": "9 Checking for multicolinearity",
    "text": "9 Checking for multicolinearity\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\n\n9.1 Test for Non-Linearity\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\n\n\n9.2 Test for Normality Assumption\n\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\n\nols_test_normality(condo.mlr1)\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\n\n\n9.3 Testing for Spatial Autocorrelation\n\nmlr.output <- as.data.frame(condo.mlr1$residuals)\n\n\ncondo_resale.res.sf <- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %>%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n\n\ncondo_resale.sp <- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\n\ntmap_mode(\"view\")\n\n\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\nnb <- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\n\nnb_lw <- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\n\nlm.morantest(condo.mlr1, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-hedonic-pricing-models-using-gwmodel",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-hedonic-pricing-models-using-gwmodel",
    "title": "Hands-on_Ex08",
    "section": "10 Building Hedonic Pricing Models using GWmodel",
    "text": "10 Building Hedonic Pricing Models using GWmodel\n\n10.1 Building Fixed Bandwidth GWR Model\n\n10.1.1 Computing fixed bandwith\n\nbw.fixed <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.378294e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3408 CV score: 4.721292e+14 \nFixed bandwidth: 971.3403 CV score: 4.721292e+14 \nFixed bandwidth: 971.3406 CV score: 4.721292e+14 \nFixed bandwidth: 971.3404 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \n\n\n\n\n10.1.2 GWModel method - fixed bandwith\n\ngwr.fixed <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\n\ngwr.fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2023-03-13 09:25:28 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.3405 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3600e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7425e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5000e+06 -1.5970e+05  3.1971e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8073e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112793548\n   AREA_SQM                 21575\n   AGE                     434201\n   PROX_CBD               2704596\n   PROX_CHILDCARE         1654087\n   PROX_ELDERLYCARE      38867814\n   PROX_URA_GROWTH_AREA  78515730\n   PROX_MRT               3124316\n   PROX_PARK             18122425\n   PROX_PRIMARY_SCH       4637503\n   PROX_SHOPPING_MALL     1529952\n   PROX_BUS_STOP         11342182\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720744\n   FREEHOLD               6073636\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3804 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6196 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.53407e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430417 \n\n   ***********************************************************************\n   Program stops at: 2023-03-13 09:25:30"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-adaptive-bandwidth-gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-adaptive-bandwidth-gwr-model",
    "title": "Hands-on_Ex08",
    "section": "11 Building Adaptive Bandwidth GWR Model",
    "text": "11 Building Adaptive Bandwidth GWR Model\n\n11.1 Computing the adaptive bandwidth\n\nbw.adaptive <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\n\n11.1.1 Constructing the adaptive bandwidth gwr model\n\ngwr.adaptive <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\n\ngwr.adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2023-03-13 09:25:38 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2023-03-13 09:25:39"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-gwr-output",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-gwr-output",
    "title": "Hands-on_Ex08",
    "section": "12 Visualising GWR Output",
    "text": "12 Visualising GWR Output\n\n12.1 Converting SDF into sf data.frame\n\ncondo_resale.sf.adaptive <- st_as_sf(gwr.adaptive$SDF) %>%\n  st_transform(crs=3414)\n\n\ncondo_resale.sf.adaptive.svy21 <- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21  \n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.94        0   -0.72065800   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\n\n\ngwr.adaptive.output <- as.data.frame(gwr.adaptive$SDF)\ncondo_resale.sf.adaptive <- cbind(condo_resale.res.sf, as.matrix(gwr.adaptive.output))\n\n\nglimpse(condo_resale.sf.adaptive)\n\nRows: 1,436\nColumns: 77\n$ POSTCODE                <dbl> 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ LOG_SELLING_PRICE       <dbl> 14.91412, 15.17135, 15.01698, 15.26243, 14.151…\n$ MLR_RES                 <dbl> -1489099.55, 415494.57, 194129.69, 1088992.71,…\n$ Intercept               <dbl> 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM.1              <dbl> 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE.1                   <dbl> -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD.1              <dbl> -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE.1        <dbl> 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE.1      <dbl> -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA.1  <dbl> -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT.1              <dbl> -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK.1             <dbl> -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH.1      <dbl> 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL.1    <dbl> 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP.1         <dbl> 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS.1           <dbl> 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY.1       <dbl> -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD.1              <dbl> 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    <dbl> 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                <dbl> 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           <dbl> 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            <dbl> 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             <dbl> 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  <dbl> 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             <dbl> 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       <dbl> 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     <dbl> 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE <dbl> 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             <dbl> 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            <dbl> 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     <dbl> 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   <dbl> 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        <dbl> 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          <dbl> 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      <dbl> 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             <dbl> 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            <dbl> 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             <dbl> 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  <dbl> -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             <dbl> -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       <dbl> 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     <dbl> -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV <dbl> -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             <dbl> -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            <dbl> -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     <dbl> 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   <dbl> 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        <dbl> 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          <dbl> 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      <dbl> -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             <dbl> 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                <dbl> 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ coords.x1               <dbl> 22085.12, 25656.84, 23963.99, 27044.28, 41042.…\n$ coords.x2               <dbl> 29951.54, 34546.20, 32890.80, 32319.77, 33743.…\n$ geometry                <POINT [m]> POINT (22085.12 29951.54), POINT (25656.…\n\n\n\nsummary(gwr.adaptive$SDF$yhat)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n  171347  1102001  1385528  1751842  1982307 13887901"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-local-r2",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-local-r2",
    "title": "Hands-on_Ex08",
    "section": "13 Visualising local R2",
    "text": "13 Visualising local R2\n\ntmap_mode(\"view\")\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-coefficient-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-coefficient-estimates",
    "title": "Hands-on_Ex08",
    "section": "14 Visualising coefficient estimates",
    "text": "14 Visualising coefficient estimates\n\ntmap_mode(\"view\")\nAREA_SQM_SE <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\n14.1 By URA Planning Region\n\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "In-class Exercise 2: Geospatial Data Wrangling",
    "section": "",
    "text": "Installing and check packages (sf, tidyverse, funModeling)\n\npacman::p_load(sf, tidyverse, funModeling)\n\nImporting the geoNGA data\n\ngeoNGA = st_read(dsn = \"data/geospatial/\", \n               layer = \"geoBoundaries-NGA-ADM2\")%>%\n  \n#because the values were in decimals and hence need to transform\nst_transform(crs = 26392)\n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\nImporting the NGA data\n\nNGA <- st_read(dsn = \"data/geospatial/\", \n               layer = \"nga_admbnda_adm2_osgof_20190417\")%>%\n  \nst_transform(crs = 26392)\n\nReading layer `nga_admbnda_adm2_osgof_20190417' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\nwp_nga <- read_csv(\"data/aspatial/WPdx.csv\") %>%\n  filter(`#clean_country_name` == \"Nigeria\")\n\n##Converting water point into sf point features\n\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\nwp_nga\n\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n    <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\n\nwp_sf <- st_sf(wp_nga, crs=4326)\nwp_sf\n\nSimple feature collection with 95008 features and 70 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 2.707441 ymin: 4.301812 xmax: 14.21828 ymax: 13.86568\nGeodetic CRS:  WGS 84\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n *  <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\n\nwp_sf <- wp_sf %>%\n  st_transform(crs = 26392)\n\n##exclude redundant fields\n\nNGA <- NGA %>%\n  select(c(3:4, 8:9))\n\n##check for duplicates\n\nNGA$ADM2_EN[duplicated(NGA$ADM2_EN) == TRUE]\n\n[1] \"Bassa\"    \"Ifelodun\" \"Irepodun\" \"Nasarawa\" \"Obi\"      \"Surulere\"\n\n\n\nNGA$ADM2_EN[94] <- \"Bassa, Kogi\"\nNGA$ADM2_EN[95] <- \"Bassa, Plateau\"\nNGA$ADM2_EN[304] <- \"Ifelodun, Kwara\"\nNGA$ADM2_EN[305] <- \"Ifelodun, Osun\"\nNGA$ADM2_EN[355] <- \"Irepodun, Kwara\"\nNGA$ADM2_EN[356] <- \"Irepodun, Osun\"\nNGA$ADM2_EN[519] <- \"Nasarawa, Kano\"\nNGA$ADM2_EN[520] <- \"Nasarawa, Nasarawa\"\nNGA$ADM2_EN[546] <- \"Obi, Benue\"\nNGA$ADM2_EN[547] <- \"Obi, Nasarawa\"\nNGA$ADM2_EN[693] <- \"Surulere, Lagos\"\nNGA$ADM2_EN[694] <- \"Surulere, Oyo\"\n\n#Data wrangling\n\nfreq(data=wp_sf, \n     input='#status_clean')\n\n\n\n\n                     #status_clean frequency percentage cumulative_perc\n1                       Functional     45883      48.29           48.29\n2                   Non-Functional     29385      30.93           79.22\n3                             <NA>     10656      11.22           90.44\n4      Functional but needs repair      4579       4.82           95.26\n5 Non-Functional due to dry season      2403       2.53           97.79\n6        Functional but not in use      1686       1.77           99.56\n7         Abandoned/Decommissioned       234       0.25           99.81\n8                        Abandoned       175       0.18           99.99\n9 Non functional due to dry season         7       0.01          100.00\n\n\n\nwp_sf_nga <- wp_sf %>%\n  rename(status_clean = '#status_clean') %>%\n  select(status_clean) %>%\n  mutate(status_clean = replace_na (\n    status_clean, \"unknown\"))\n\n##extract data points\n\nwp_functional <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Functional\", \n             \"Functional but not in use\", \n             \"Functional but needs repair\"))\n\n\nwp_nonfunctional <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Abandoned/Decommissioned\",\n             \"Abandoned\",\n             \"Non-Functional due to dry season\",\n             \"Non-Functional\"))\n\n\nwp_unkown <- wp_sf_nga %>%\n  filter(status_clean == \"unknown\")\n\n\nNGA_wp <- NGA %>%\n  mutate(`total_wp` = lengths(\n    st_intersects(NGA, wp_sf_nga)\n  )) %>% \n  mutate(`wp_functional` = lengths(\n    st_intersects(NGA, wp_functional)\n  )) %>%\n  mutate(`wp_nonfunctional` = lengths(\n    st_intersects(NGA, wp_nonfunctional)\n  )) %>%\n  mutate(`wp_unknown` = lengths(\n    st_intersects(NGA, wp_unkown)\n  ))\n\n##save\n\nwrite_rds(NGA_wp, \"data/rds/NGA_wp.rds\")\n\n##ggplot2\n\nggplot(data = NGA_wp,\n       aes(x = total_wp)) + \n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(\n    total_wp, na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=0.8) +\n  ggtitle(\"Distribution of total water points by LGA\") +\n  xlab(\"No. of water points\") +\n  ylab(\"No. of\\nLGAs\") +\n  theme(axis.title.y=element_text(angle = 0))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class_Ex03",
    "section": "",
    "text": "pacman::p_load(sf, tmap, tidyverse)\n\n##Importing Data\n\nNGA_wp <- read_rds(\"data/rds/NGA_wp.rds\")\n\n\np1 <- tm_shape(NGA_wp) +\n  tm_fill(\"wp_functional\", \n          n=10,\n          style=\"equal\",\n          palette = \"Blues\") + \n  tm_borders(lwd=0.1, \n             alpha = 1) + \n  tm_layout(main.title = \"Distribution of funtional water points\",\n            legend.outside = FALSE)\np1\n\n\n\n\n\n#tmap_arrange(p2, p1, nrow=1)\n\n\nNGA_wp <- NGA_wp %>%\n  mutate(pct_functional = wp_functional/total_wp) %>%\n  mutate(pct_nonfunctional = wp_nonfunctional/total_wp)\n\n\ntm_shape(NGA_wp) +\n  tm_fill(\"wp_functional\", \n          n=10,\n          style=\"equal\",\n          palette = \"Blues\",\n          legend.hist = TRUE) + \n  tm_borders(lwd=0.1, \n             alpha = 1) + \n  tm_layout(main.title = \"Rate map of functional water point\",\n            legend.outside = TRUE)\n\n\n\n\n#Percentile Map #step 1; exclude records with NA\n\nNGA_wp <- NGA_wp %>%\n  drop_na()\n\n#step 2 creating customised classification and extracting values\n\npercent <- c(0, .01, .1, .5, .9, .99, 1)\nvar <- NGA_wp[\"pct_functional\"] %>%\n  st_set_geometry(NULL)\nquantile(var[,1], percent)\n\n       0%        1%       10%       50%       90%       99%      100% \n0.0000000 0.0000000 0.2169811 0.4791667 0.8611111 1.0000000 1.0000000 \n\n\n\nget.var <- function(vname, df){\n  v <- df[vname] %>%\n    st_set_geometry(NULL)\n  v <- unname(v[,1])\n  return(v)\n}\n\n\npercentmap <- function(vname, df, legtitle=NA, mtitle=\"Percentile Map\"){\n  percent <- c(0, .01, .1, .5, .9, .99, 1)\n  var <- get.var(vname, df)\n  bperc <- quantile(var, percent)\n  tm_shape(df) + \n  tm_polygons() + \n  tm_shape(df) + \n    tm_fill(\n      vname,\n      title = legtitle,\n      breaks = bperc,\n      palette = \"Blues\",\n      labels = c(\"< 1%\", \"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% - 99%\", \"99% - 100%\")\n    ) + \n    tm_borders()+ \n    tm_layout(main.title = mtitle,\n              title.position = c(\"right\", \"bottom\"))\n}\n\n\npercentmap(\"pct_functional\", NGA_wp)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class_Ex04",
    "section": "",
    "text": "Install and load packages\n\npacman::p_load(maptools, sf, raster, spatstat, tmap)\n\nImport data\n\nchildcare_sf <- st_read(\"data/child-care-services-geojson.geojson\") %>%\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex04\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nsg_sf <- st_read(dsn = \"data\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex04\\data' using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf <- st_read(dsn = \"data\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex04\\data' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nMapping the geospatial data sets\n\ntmap_mode('view')\n\n\ntm_shape(childcare_sf)+\n  tm_dots(alph = 0.5,\n          size = 0.01) + \n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n#c(11, 14) 11 is the max zoom out, 14 is the max zoom in\n\nData wrangling\n\nchildcare <- as_Spatial(childcare_sf)\nmpsz <- as_Spatial(mpsz_sf)\nsg <- as_Spatial(sg_sf)\n\n\nchildcare_sp <- as(childcare, \"SpatialPoints\")\nsg_sp <- as(sg, \"SpatialPolygons\")\n\njust only x and y coordinates points\n\nchildcare_ppp <- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/data/stores.html",
    "href": "In-class_Ex/In-class_Ex05/data/stores.html",
    "title": "is415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     \n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/data/study_area.html",
    "href": "In-class_Ex/In-class_Ex05/data/study_area.html",
    "title": "is415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class_Ex05",
    "section": "",
    "text": "1 Install and load packages\n\npacman::p_load(tidyverse, sf, sfdep, tmap)\n\n\n\n2 \n\nstudyArea <- st_read(dsn = \"data\", layer = \"study_area\") %>%\n  st_transform(3829)\n\nReading layer `study_area' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex05\\data' using driver `ESRI Shapefile'\nSimple feature collection with 7 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 121.4836 ymin: 25.00776 xmax: 121.592 ymax: 25.09288\nGeodetic CRS:  TWD97\n\n\n\nstores <- st_read(dsn = \"data\", layer = \"stores\") %>%\n  st_transform(3829)\n\nReading layer `stores' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex05\\data' using driver `ESRI Shapefile'\nSimple feature collection with 1409 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 121.4902 ymin: 25.01257 xmax: 121.5874 ymax: 25.08557\nGeodetic CRS:  TWD97\n\n\n\ntmap_mode(\"view\")\ntm_shape(studyArea) + \n  tm_polygons() + \ntm_shape(stores) + \n  tm_dots(col = \"Name\", \n          size = 0.01, \n          border.col = \"black\", \n          border.lwd = 0.5) + \n  tm_view(set.zoom.limits = c(12, 16))\n\n\n\n\n\n\n\n\n3 Local Colocation Quotients (LCLQ)\n\nnb <- include_self(\n  st_knn(st_geometry(stores), 6)\n)\n\nwt <- st_kernel_weights(nb, \n                        stores, \n                        \"gaussian\",\n                        adaptive = TRUE)\n\nFamilyMart <- stores %>%\n  filter(Name == \"Family Mart\")\nA <- FamilyMart$Name\nSevenEleven <- stores %>%\n  filter(Name == \"7-Eleven\")\nB<- SevenEleven$Name\n\nLCLQ <- local_colocation(A, B, nb, wt, 49)\n\nLCLQ_stores <- cbind(stores, LCLQ)\n#cannot do left-join/right-join cause no unique identifier\ntmap_mode(\"view\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html",
    "title": "In-class_Ex06",
    "section": "",
    "text": "pacman::p_load(sf, sfdep, tmap, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#import-geospatial-data",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#import-geospatial-data",
    "title": "In-class_Ex06",
    "section": "2.1 Import Geospatial Data",
    "text": "2.1 Import Geospatial Data\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#import-aspatial-data",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#import-aspatial-data",
    "title": "In-class_Ex06",
    "section": "2.2 Import Aspatial Data",
    "text": "2.2 Import Aspatial Data\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\nhunan2012\n\n# A tibble: 88 × 29\n   County    City     avg_w…¹ depos…²    FAI Gov_Rev Gov_Exp    GDP GDPPC    GIO\n   <chr>     <chr>      <dbl>   <dbl>  <dbl>   <dbl>   <dbl>  <dbl> <dbl>  <dbl>\n 1 Anhua     Yiyang     30544  10967   6832.    457.   2703  13225  14567  9277.\n 2 Anren     Chenzhou   28058   4599.  6386.    221.   1455.  4941. 12761  4189.\n 3 Anxiang   Changde    31935   5517.  3541     244.   1780. 12482  23667  5109.\n 4 Baojing   Hunan W…   30843   2250   1005.    193.   1379.  4088. 14563  3624.\n 5 Chaling   Zhuzhou    31251   8241.  6508.    620.   1947  11585  20078  9158.\n 6 Changning Hengyang   28518  10860   7920     770.   2632. 19886  24418 37392 \n 7 Changsha  Changsha   54540  24332  33624    5350    7886. 88009  88656 51361 \n 8 Chengbu   Shaoyang   28597   2581.  1922.    161.   1192.  2570. 10132  1681.\n 9 Chenxi    Huaihua    33580   4990   5818.    460.   1724.  7755. 17026  6644.\n10 Cili      Zhangji…   33099   8117.  4498.    500.   2306. 11378  18714  5843.\n# … with 78 more rows, 19 more variables: Loan <dbl>, NIPCR <dbl>, Bed <dbl>,\n#   Emp <dbl>, EmpR <dbl>, EmpRT <dbl>, Pri_Stu <dbl>, Sec_Stu <dbl>,\n#   Household <dbl>, Household_R <dbl>, NOIP <dbl>, Pop_R <dbl>, RSCG <dbl>,\n#   Pop_T <dbl>, Agri <dbl>, Service <dbl>, Disp_Inc <dbl>, RORP <dbl>,\n#   ROREmp <dbl>, and abbreviated variable names ¹​avg_wage, ²​deposite"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#combine-both-df-using-left-join",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#combine-both-df-using-left-join",
    "title": "In-class_Ex06",
    "section": "2.3 Combine both df using left-join",
    "text": "2.3 Combine both df using left-join\nAlways do left-join cause its best to put the sf df the left side then right side is the tibble\n\nhunan_GDPPC <- left_join(hunan, hunan2012) |>\n  select(1:4, 7, 15)\n\nNOTE: during joining,must have a common field (unique identifier) then another thing to take note is to make sure both columns have same number of attributes(?)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#plotting-chrorpleth-map",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#plotting-chrorpleth-map",
    "title": "In-class_Ex06",
    "section": "2.4 Plotting Chrorpleth map",
    "text": "2.4 Plotting Chrorpleth map\n\ntmap_mode(\"plot\")\ntm_shape(hunan_GDPPC)+\n  tm_fill(\"GDPPC\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"GDPPC\") +\n  tm_layout(main.title = \"Distribution of GDP per capita by district\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#contibuity-neighbours-method",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#contibuity-neighbours-method",
    "title": "In-class_Ex06",
    "section": "3.1 Contibuity neighbours method",
    "text": "3.1 Contibuity neighbours method\n.before = 1 is to put the newly created column at the first column onwards.\n\ncn_queen <- hunan_GDPPC |>\n  mutate(nb = st_contiguity(geometry), .before = 1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#neighbour-list-by-rooks-method",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#neighbour-list-by-rooks-method",
    "title": "In-class_Ex06",
    "section": "3.2 Neighbour list by Rook’s method",
    "text": "3.2 Neighbour list by Rook’s method\nqueen = false is to know that the default queen is false then its rook.\n\ncn_rook <- hunan_GDPPC |>\n  mutate(nb = st_contiguity(geometry), queen = FALSE, .before = 1)\n\n\nwm_q = hunan_GDPPC |>\n  mutate(nb = st_contiguity(geometry), \n         wt = st_weights(nb), \n         .before = 1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#contiguity-rook-method",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#contiguity-rook-method",
    "title": "In-class_Ex06",
    "section": "3.3 Contiguity rook method",
    "text": "3.3 Contiguity rook method\n\nwm_r = hunan_GDPPC |>\n  mutate(nb = st_contiguity(geometry), \n         queen = FALSE,\n         wt = st_weights(nb), \n         .before = 1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07(EHSA).html",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07(EHSA).html",
    "title": "In-class_Ex07 (EHSA)",
    "section": "",
    "text": "pacman::p_load(sf, tmap, sfdep, tidyverse, plotly)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07(EHSA).html#geospatial",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07(EHSA).html#geospatial",
    "title": "In-class_Ex07 (EHSA)",
    "section": "0.2 geospatial",
    "text": "0.2 geospatial\n\nhunan <- st_read(dsn = \"data/geospatial\",\n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07(EHSA).html#aspatial",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07(EHSA).html#aspatial",
    "title": "In-class_Ex07 (EHSA)",
    "section": "0.3 aspatial",
    "text": "0.3 aspatial\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07(EHSA).html#left-join",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07(EHSA).html#left-join",
    "title": "In-class_Ex07 (EHSA)",
    "section": "0.4 left-join",
    "text": "0.4 left-join\n\n#ensure there are same number of observations\nhunan_GDPPC <- left_join(hunan,hunan2012) %>%\n  select(1:4, 7, 15)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07(EHSA).html#create-a-time-series-cube",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07(EHSA).html#create-a-time-series-cube",
    "title": "In-class_Ex07 (EHSA)",
    "section": "1.1 create a time series cube",
    "text": "1.1 create a time series cube\n\n# GDPPC_st <- space(GDPPC, hunan,\n#                   .loc_col = \"County\",\n#                   .time_col = \"Year\")\n\n\n# GDPPC_NB <- GDPPC_st |>\n#   activate(\"geometry\") |>\n#   mutate(\n#     nb = include_self(st_contiguity(geometry)),\n#     wt = st_weights(nb)\n#   )|>\n#   set_nbs(\"nb\") |>\n#   set_wts(\"wt\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "title": "In-class_Ex07",
    "section": "",
    "text": "pacman::p_load(sf, tmap, sfdep, tidyverse)\n\n\n\n\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\n# ensure there are same number of observations\nhunan_GDPPC <- left_join(hunan,hunan2012) %>%\n  select(1:4, 7, 15)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#deriving-contiguity-weights-queens-method",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#deriving-contiguity-weights-queens-method",
    "title": "In-class_Ex07",
    "section": "2.1 Deriving contiguity weights: queen’s method",
    "text": "2.1 Deriving contiguity weights: queen’s method\n\nwm_q <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb, \n                         style = \"W\"), \n         .before = 1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#compute-global-moran-i",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#compute-global-moran-i",
    "title": "In-class_Ex07",
    "section": "2.2 Compute Global Moran I",
    "text": "2.2 Compute Global Moran I\n\nmuranI <- global_moran(wm_q$GDPPC, \n                       wm_q$nb, \n                       wm_q$wt)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#perform-moran-i",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#perform-moran-i",
    "title": "In-class_Ex07",
    "section": "2.3 perform moran I",
    "text": "2.3 perform moran I\n\nglobal_moran_test(wm_q$GDPPC, \n                  wm_q$nb, \n                  wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nCONCLUSION reject the null hypothesis, the observations have spatial dependence - if alternative hypothesis is lesser, meaning the moran I stats is negative (the 0.300749970 is positive thats why its greater)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#permutation",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#permutation",
    "title": "In-class_Ex07",
    "section": "2.4 permutation",
    "text": "2.4 permutation\nto set the value in place cause permutation will keep changing\n\nset.seed(1234)\n\n\nglobal_moran_perm(wm_q$GDPPC, \n                  wm_q$nb, \n                  wm_q$wt, \n                  nsim=99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nincrease nsim for smaller no. of observations"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#lisa",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#lisa",
    "title": "In-class_Ex07",
    "section": "2.5 LISA",
    "text": "2.5 LISA\n\nlisa <- wm_q |>\n  mutate(local_moran = local_moran(\n    GDPPC, nb, wt, nsim = 99),\n    .before = 1) |>\n  unnest(local_moran)\nlisa\n\nSimple feature collection with 88 features and 20 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 21\n         ii        eii   var_ii    z_ii    p_ii p_ii_…¹ p_fol…² skewn…³ kurtosis\n      <dbl>      <dbl>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>    <dbl>\n 1 -0.00147  0.00177    4.18e-4 -0.158  0.874      0.82    0.41  -0.812  0.652  \n 2  0.0259   0.00641    1.05e-2  0.190  0.849      0.96    0.48  -1.09   1.89   \n 3 -0.0120  -0.0374     1.02e-1  0.0796 0.937      0.76    0.38   0.824  0.0461 \n 4  0.00102 -0.0000349  4.37e-6  0.506  0.613      0.64    0.32   1.04   1.61   \n 5  0.0148  -0.00340    1.65e-3  0.449  0.654      0.5     0.25   1.64   3.96   \n 6 -0.0388  -0.00339    5.45e-3 -0.480  0.631      0.82    0.41   0.614 -0.264  \n 7  3.37    -0.198      1.41e+0  3.00   0.00266    0.08    0.04   1.46   2.74   \n 8  1.56    -0.265      8.04e-1  2.04   0.0417     0.08    0.04   0.459 -0.519  \n 9  4.42     0.0450     1.79e+0  3.27   0.00108    0.02    0.01   0.746 -0.00582\n10 -0.399   -0.0505     8.59e-2 -1.19   0.234      0.28    0.14  -0.685  0.134  \n# … with 78 more rows, 12 more variables: mean <fct>, median <fct>,\n#   pysal <fct>, nb <nb>, wt <list>, NAME_2 <chr>, ID_3 <int>, NAME_3 <chr>,\n#   ENGTYPE_3 <chr>, County <chr>, GDPPC <dbl>, geometry <POLYGON [°]>, and\n#   abbreviated variable names ¹​p_ii_sim, ²​p_folded_sim, ³​skewness\n\n\n\nuse mean for take hom ex2\nuse p_ii_sim as the use\n\n\ntmap_mode(\"plot\")\ntm_shape(lisa) + \n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) + \n  tm_view(set.zoom.limits = c(6, 8))\n\n\n\n\n\ntmap_mode(\"plot\")\ntm_shape(lisa) + \n  tm_fill(\"p_ii_sim\") + \n  tm_borders(alpha = 0.5)\n\n\n\n\n\nlisa_sig <- lisa |> filter(p_ii < 0.05)\n\ntmap_mode(\"plot\")\ntm_shape(lisa) + \n  tm_polygons() + \n  tm_borders(alpha = 0.5) + \ntm_shape(lisa_sig) + \n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\nno need lisa for take home ex 2\nuse G stats instead of local (?)\nthe above plot should have another category for Non-signifcant (ref to the chap 9/10 somewhere)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#computing-local-muran-i",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#computing-local-muran-i",
    "title": "In-class_Ex07",
    "section": "2.6 Computing local muran I",
    "text": "2.6 Computing local muran I\n\nHCSA <- wm_q |>\n  mutate(local_Gi = local_gstar_perm(\n    GDPPC, nb, wt, nsim=99\n  ), .before = 1) |>\n  unnest(local_Gi)\n\nHCSA\n\nSimple feature collection with 88 features and 16 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 17\n    gi_star   e_gi     var_gi  p_value p_sim p_fol…¹ skewn…² kurto…³ nb    wt   \n      <dbl>  <dbl>      <dbl>    <dbl> <dbl>   <dbl>   <dbl>   <dbl> <nb>  <lis>\n 1 -0.00567 0.0115 0.00000812  9.95e-1  0.82    0.41   1.03    1.23  <int> <dbl>\n 2 -0.235   0.0110 0.00000581  8.14e-1  1       0.5    0.912   1.05  <int> <dbl>\n 3  0.298   0.0114 0.00000776  7.65e-1  0.7     0.35   0.455  -0.732 <int> <dbl>\n 4  0.145   0.0121 0.0000111   8.84e-1  0.64    0.32   0.900   0.726 <int> <dbl>\n 5  0.356   0.0113 0.0000119   7.21e-1  0.64    0.32   1.08    1.31  <int> <dbl>\n 6 -0.480   0.0116 0.00000706  6.31e-1  0.82    0.41   0.364  -0.676 <int> <dbl>\n 7  3.66    0.0116 0.00000825  2.47e-4  0.02    0.01   0.909   0.664 <int> <dbl>\n 8  2.14    0.0116 0.00000714  3.26e-2  0.16    0.08   1.13    1.48  <int> <dbl>\n 9  4.55    0.0113 0.00000656  5.28e-6  0.02    0.01   1.36    4.14  <int> <dbl>\n10  1.61    0.0109 0.00000341  1.08e-1  0.18    0.09   0.269  -0.396 <int> <dbl>\n# … with 78 more rows, 7 more variables: NAME_2 <chr>, ID_3 <int>,\n#   NAME_3 <chr>, ENGTYPE_3 <chr>, County <chr>, GDPPC <dbl>,\n#   geometry <POLYGON [°]>, and abbreviated variable names ¹​p_folded_sim,\n#   ²​skewness, ³​kurtosis"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#visualising-gi",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#visualising-gi",
    "title": "In-class_Ex07",
    "section": "2.7 visualising Gi",
    "text": "2.7 visualising Gi\n\ntmap_mode(\"plot\")\ntm_shape(HCSA) + \n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) + \n  tm_view(set.zoom.limits = c(6, 8))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#visualising-p-value-of-hcsa",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#visualising-p-value-of-hcsa",
    "title": "In-class_Ex07",
    "section": "2.8 visualising p value of HCSA",
    "text": "2.8 visualising p value of HCSA\n\ntmap_mode(\"plot\")\ntm_shape(HCSA) + \n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#create-a-time-series-cube",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#create-a-time-series-cube",
    "title": "In-class_Ex07",
    "section": "3.1 create a time series cube",
    "text": "3.1 create a time series cube\n\n# GDPPC_st <- space(GDPPC, hunan, \n#                   .loc_col = \"County\", \n#                   .time_col = \"Year\")\n\n\n# GDPPC_NB <- GDPPC_st |>\n#   activate(\"geometry\") |>\n#   mutate(\n#     nb = include_self(st_contiguity(geometry)), \n#     wt = st_weights(nb)\n#   )|>\n#   set_nbs(\"nb\") |>\n#   set_wts(\"wt\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html",
    "title": "In-class_Ex09",
    "section": "",
    "text": "pacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary, readr, dplyr)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#geospatial-data-wrangling",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#geospatial-data-wrangling",
    "title": "In-class_Ex09",
    "section": "1 Geospatial Data Wrangling",
    "text": "1 Geospatial Data Wrangling\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n1.1 Updating CRS information\n\nmpsz_svy21 <- st_transform(mpsz, 3414)\n\n\nst_crs(mpsz_svy21)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#aspatial-data-wrangling",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#aspatial-data-wrangling",
    "title": "In-class_Ex09",
    "section": "2 Aspatial Data Wrangling",
    "text": "2 Aspatial Data Wrangling\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\n\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %>%\n  st_transform(crs=3414)\n\n\ncondo.mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  < 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  < 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  < 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  < 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: < 2.2e-16"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#multiple-linear-regression-method",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#multiple-linear-regression-method",
    "title": "In-class_Ex09",
    "section": "3 Multiple Linear Regression Method",
    "text": "3 Multiple Linear Regression Method\n\n3.1 Visualising the relationships of the independent variables\n\ncorrplot::corrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex/In-class_Ex09/data/geospatial/MPSZ-2019.html",
    "title": "is415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/In-class_Ex09.html",
    "href": "In-class_Ex/In-class_Ex09/In-class_Ex09.html",
    "title": "In-class_Ex09",
    "section": "",
    "text": "pacman::p_load(sf, spdep, GWmodel, SpatialML, tidyverse, tmap, ggpubr,\n               olsrr, devtools, rsample)\n\n\n\n\n\nmdata <- read_rds('data/aspatial/mdata.rds')\n\n\nset.seed(1234)\n\nresale_split <- initial_split(mdata, \n                              prop = 6.5/10,)\ntrain_data <- training(resale_split)\ntest_data <- testing(resale_split)\n\n\nwrite_rds(train_data, \"data/aspatial/train_data.rds\")\nwrite_rds(test_data, \"data/aspatial/test_data.rds\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "is415-GAA",
    "section": "",
    "text": "Welcome to IS415 Geospatial Analytics and Applications\nThis is the course website IS415 I study this term. You will find my course work on this website."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take-Home Exercise 1",
    "section": "",
    "text": "Water is an essential resource for people. The health of people depends on having access to clean water. It ensures peace and security, a clean environment, a sustainable economy, and a reduction in poverty. Yet more than 40% of the world’s population lacks access to enough clean water. According to UN-Water, 1.8 billion people will be residing in nations or areas with a severe water shortage by 2025. Water scarcity is a serious threat to several sectors, including food security. Around 70% of the world’s freshwater resources are used for agriculture.\n\n\n\nDiscover the geographical distribution of functional and non-function water points and their co-locations if any in Osun State, Nigeria.\nExploratory Spatial Data Analysis (ESDA)\n\nDerive kernel density maps of functional and non-functional water points. Using appropriate tmap functions\nDisplay the kernel density maps on openstreetmap of Osub State, Nigeria.\nDescribe the spatial patterns revealed by the kernel density maps. Highlight the advantage of kernel density map over point map.\n\nSecond-order Spatial Point Patterns Analysis\nWith reference to the spatial point patterns observed in ESDA:\n\nFormulate the null hypothesis and alternative hypothesis and select the confidence level.\nPerform the test by using appropriate Second order spatial point patterns analysis technique.\nWith reference to the analysis results, draw statistical conclusions.\n\nSpatial Correlation Analysis\n\nInvestigate if the spatial distribution of functional and non-functional water points are independent from each other.\nFormulate the null hypothesis and alternative hypothesis and select the confidence level.\nPerform the test by using appropriate Second order spatial point patterns analysis technique. With reference to the analysis results, draw statistical conclusions.\n\n\n\n\n\nTable 1: Data used\n\n\n\n\n\n\n\n\n\nType\nName\nFormat\nDescription\nSource\n\n\n\n\nAspatial\nWPdx+\ncsv\nLocations of water points\nWPdx Global Data Repositories\n\n\nGeospatial\ngeoBoundaries\nSHP\ngeoBoundaries data of Nigeria\ngeoBoundaries"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-geospatial",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-geospatial",
    "title": "Take-Home Exercise 1",
    "section": "3.1 Data Geospatial",
    "text": "3.1 Data Geospatial\n\n1. Import NGA2. Select & Filter specific fields3. Glimpse NGA\n\n\nWe will be using st_read function to read our geospatial data.\n\nNGA <- st_read(dsn = \"data/geospatial/\", \n               layer = \"nga_admbnda_adm2_osgof_20190417\")%>%\n  \nst_transform(crs = 26392)\n\nReading layer `nga_admbnda_adm2_osgof_20190417' from data source \n  `C:\\kt-x\\is415-GAA\\Take-Home_Ex\\Take-Home_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\n\nLets start by selecting specific fields that will be helpful in this exercise and select Osun state using the filter() function.\n\nNGA <- NGA %>%\n  select(c(3:4, 8:9)) %>%\n  filter(ADM1_EN == \"Osun\")\n\n\n\n\nglimpse(NGA)\n\nRows: 30\nColumns: 5\n$ ADM2_EN    <chr> \"Aiyedade\", \"Aiyedire\", \"Atakumosa East\", \"Atakumosa West\",…\n$ ADM2_PCODE <chr> \"NG030001\", \"NG030002\", \"NG030003\", \"NG030004\", \"NG030005\",…\n$ ADM1_EN    <chr> \"Osun\", \"Osun\", \"Osun\", \"Osun\", \"Osun\", \"Osun\", \"Osun\", \"Os…\n$ ADM1_PCODE <chr> \"NG030\", \"NG030\", \"NG030\", \"NG030\", \"NG030\", \"NG030\", \"NG03…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((213526.6 34..., MULTIPOLYGON (…"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#importing-wpdx",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#importing-wpdx",
    "title": "Take-Home Exercise 1",
    "section": "3.2 Importing WPdx",
    "text": "3.2 Importing WPdx\nWe will be using read_csv() function to read the WPdx file and using filter function to only show Nigeria country data and only for Osun state.\n\nwp_nga <- read_csv(\"data/aspatial/WPdx.csv\") %>%\n  filter(`#clean_country_name` == \"Nigeria\") %>%\n  filter(`#clean_adm1` == \"Osun\")\n\n\n3.2.1 Convert water point data into sf point features\n\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\nwp_nga\n\n# A tibble: 5,557 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n    <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429123 GRID3             8.02    5.06 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2  70566 Federal Minis…    7.32    4.79 05/11/… No      Protec… Well    Mechan…\n 3  70578 Federal Minis…    7.76    4.56 05/11/… No      Boreho… Well    Mechan…\n 4  66401 Federal Minis…    8.03    4.64 04/30/… No      Boreho… Well    Mechan…\n 5 422190 GRID3             7.87    4.88 08/29/… Unknown <NA>    <NA>    Tapsta…\n 6 422064 GRID3             7.7     4.89 08/29/… Unknown <NA>    <NA>    Tapsta…\n 7  65607 Federal Minis…    7.89    4.71 05/12/… No      Boreho… Well    Mechan…\n 8  68989 Federal Minis…    7.51    4.27 05/07/… No      Boreho… Well    <NA>   \n 9  67708 Federal Minis…    7.48    4.35 04/29/… Yes     Boreho… Well    Mechan…\n10  66419 Federal Minis…    7.63    4.50 05/08/… Yes     Boreho… Well    Hand P…\n# … with 5,547 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\n\n\n3.2.2 Convert this df into sf object\n\nwp_sf <- st_sf(wp_nga, crs=4326)\nwp_sf\n\nSimple feature collection with 5557 features and 70 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4.032004 ymin: 7.060309 xmax: 5.06 ymax: 8.061898\nGeodetic CRS:  WGS 84\n# A tibble: 5,557 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n *  <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429123 GRID3             8.02    5.06 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2  70566 Federal Minis…    7.32    4.79 05/11/… No      Protec… Well    Mechan…\n 3  70578 Federal Minis…    7.76    4.56 05/11/… No      Boreho… Well    Mechan…\n 4  66401 Federal Minis…    8.03    4.64 04/30/… No      Boreho… Well    Mechan…\n 5 422190 GRID3             7.87    4.88 08/29/… Unknown <NA>    <NA>    Tapsta…\n 6 422064 GRID3             7.7     4.89 08/29/… Unknown <NA>    <NA>    Tapsta…\n 7  65607 Federal Minis…    7.89    4.71 05/12/… No      Boreho… Well    Mechan…\n 8  68989 Federal Minis…    7.51    4.27 05/07/… No      Boreho… Well    <NA>   \n 9  67708 Federal Minis…    7.48    4.35 04/29/… Yes     Boreho… Well    Mechan…\n10  66419 Federal Minis…    7.63    4.50 05/08/… Yes     Boreho… Well    Hand P…\n# … with 5,547 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\n\n\n3.2.3 Transforming into Nigeria projected coordinate system\n\nwp_sf <- wp_sf %>%\n  st_transform(crs = 26392)\n\n\n\n3.2.4 EDA for Water Point Data\n\n1. Overview2. Rename to wp_sf_nga3. Functional wp4. Non-Functional wp5. Unknown wp\n\n\nNext, we want to first have a visual of the water point data by creating a frequency chart. (Reference to In-class exercise 2)\n\nfreq(data = wp_sf,\n     input = '#status_clean')\n\n\n\n\n                     #status_clean frequency percentage cumulative_perc\n1                       Functional      2319      41.73           41.73\n2                   Non-Functional      2008      36.13           77.86\n3                             <NA>       748      13.46           91.32\n4      Functional but needs repair       248       4.46           95.78\n5 Non-Functional due to dry season       151       2.72           98.50\n6        Functional but not in use        63       1.13           99.63\n7                        Abandoned        15       0.27           99.90\n8         Abandoned/Decommissioned         5       0.09          100.00\n\n\n\n\nSeems like there are several different categories of water points. With reference to Objectives, we will be focusing on Functional and Non-Functional while still taking into account of the unknown water points. But first, let’s rename this spatial frame.\n\nwp_sf_nga <- wp_sf %>% \n  rename(status_clean = '#status_clean') %>%\n  select(status_clean) %>%\n  mutate(status_clean = replace_na(\n    status_clean, \"unknown\"))\n\n\n\nAfter that, we filter and assign the wp_functional\n\nwp_functional <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Functional\",\n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\nfreq(data = wp_functional,\n     input = 'status_clean')\n\n\n\n\n                 status_clean frequency percentage cumulative_perc\n1                  Functional      2319      88.17           88.17\n2 Functional but needs repair       248       9.43           97.60\n3   Functional but not in use        63       2.40          100.00\n\n\n\n\nSames goes for the Non-Functional\n\nwp_nonfunctional <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Abandoned/Decommissioned\",\n             \"Abandoned\",\n             \"Non-Functional due to dry season\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\"))\nfreq(data = wp_nonfunctional,\n     input = 'status_clean')\n\n\n\n\n                      status_clean frequency percentage cumulative_perc\n1                   Non-Functional      2008      92.15           92.15\n2 Non-Functional due to dry season       151       6.93           99.08\n3                        Abandoned        15       0.69           99.77\n4         Abandoned/Decommissioned         5       0.23          100.00\n\n\n\n\nSames goes for the Unknown\n\nwp_unknown <- wp_sf_nga %>%\n  filter(status_clean == \"unknown\")\n\nfreq(data = wp_unknown,\n     input = 'status_clean')\n\n\n\n\n  status_clean frequency percentage cumulative_perc\n1      unknown       748        100             100\n\n\n\n\n\n\n\n3.2.5 Performing Point-in-Polygon Count\nNext, we want to find out the number of total, functional, nonfunctional and unknown water points in each LGA. First, it identifies the functional water points in each LGA by using st_intersects() of sf package. Next, length() is used to calculate the number of functional water points that fall inside each LGA.\n\nNGA_wp <- NGA %>% \n  mutate(`total_wp` = lengths(\n    st_intersects(NGA, wp_sf_nga))) %>%\n  mutate(`wp_functional` = lengths(\n    st_intersects(NGA, wp_functional))) %>%\n  mutate(`wp_nonfunctional` = lengths(\n    st_intersects(NGA, wp_nonfunctional))) %>%\n  mutate(`wp_unknown` = lengths(\n    st_intersects(NGA, wp_unknown)))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-sf-data-frames-to-sps-spatial-class",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-sf-data-frames-to-sps-spatial-class",
    "title": "Take-Home Exercise 1",
    "section": "4.1 Converting sf data frames to sp’s Spatial* class",
    "text": "4.1 Converting sf data frames to sp’s Spatial* class\n\n1. Code2. wp_sc3. NGA_sc\n\n\nConvert to sp object/class using as_Spatial(). Take a look at the following 2 tabs (wp_sc, NGA_sc), notice the properties is “SpatialPolygonsDataFrame”.\n\nwp_sc_functional <- as_Spatial(wp_functional)\nwp_sc_nonfunctional <- as_Spatial(wp_nonfunctional)\nNGA_sc <- as_Spatial(NGA)\n\n\n\n\nwp_sc_functional\n\nclass       : SpatialPointsDataFrame \nfeatures    : 2630 \nextent      : 177285.9, 290751, 343128.1, 450859.7  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \nvariables   : 1\nnames       :              status_clean \nmin values  :                Functional \nmax values  : Functional but not in use \n\nwp_sc_nonfunctional\n\nclass       : SpatialPointsDataFrame \nfeatures    : 2179 \nextent      : 180539, 290616, 340054.1, 450780.1  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \nvariables   : 1\nnames       :                     status_clean \nmin values  :                        Abandoned \nmax values  : Non-Functional due to dry season \n\n\n\n\n\nNGA_sc\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 30 \nextent      : 176503.2, 291043.8, 331434.7, 454520.1  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \nvariables   : 4\nnames       :  ADM2_EN, ADM2_PCODE, ADM1_EN, ADM1_PCODE \nmin values  : Aiyedade,   NG030001,    Osun,      NG030 \nmax values  :   Osogbo,   NG030030,    Osun,      NG030"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-the-spatial-class-into-generic-sp-format",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-the-spatial-class-into-generic-sp-format",
    "title": "Take-Home Exercise 1",
    "section": "4.2 Converting the Spatial* class into generic sp format",
    "text": "4.2 Converting the Spatial* class into generic sp format\nWHY? Because spatstat requires the analytical data in ppp object form. There is no direct way to convert a Spatial* classes into ppp object. We need to convert the Spatial classes* into Spatial object first.\n\nCodewp_spnga_sp\n\n\nStarting with Converting the Spatial* classes into generic sp objects. Take a look at the following 2 tabs (wp_sc, NGA_sc), notice the properties is “SpatialPoints” and “SpatialPolygons” respectively.\n\n#wp_sp <- as(wp_sc, \"SpatialPoints\")\nwp_sp_functional <- as(wp_sc_functional, \"SpatialPoints\")\nwp_sp_nonfunctional <- as(wp_sc_nonfunctional, \"SpatialPoints\")\nnga_sp <- as(NGA_sc, \"SpatialPolygons\")\n\n\n\n\n#wp_sp\nwp_sp_functional\n\nclass       : SpatialPoints \nfeatures    : 2630 \nextent      : 177285.9, 290751, 343128.1, 450859.7  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \n\nwp_sp_nonfunctional\n\nclass       : SpatialPoints \nfeatures    : 2179 \nextent      : 180539, 290616, 340054.1, 450780.1  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \n\n\n\n\n\nnga_sp\n\nclass       : SpatialPolygons \nfeatures    : 30 \nextent      : 176503.2, 291043.8, 331434.7, 454520.1  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "title": "Take-Home Exercise 1",
    "section": "4.3 Converting the generic sp format into spatstat’s ppp format",
    "text": "4.3 Converting the generic sp format into spatstat’s ppp format\nNext, we will use as.ppp() function of spatstat to convert the spatial data into spatstat’s ppp object format.\n\nCodePlot\n\n\n\n#wp_ppp <- as(wp_sp, \"ppp\")\nwp_ppp_functional <- as(wp_sp_functional, \"ppp\")\nwp_ppp_nonfunctional <- as(wp_sp_nonfunctional, \"ppp\")\n\n#wp_ppp\nwp_ppp_functional\n\nPlanar point pattern: 2630 points\nwindow: rectangle = [177285.9, 290750.96] x [343128.1, 450859.7] units\n\nwp_ppp_nonfunctional\n\nPlanar point pattern: 2179 points\nwindow: rectangle = [180538.96, 290616] x [340054.1, 450780.1] units\n\n\n\n\n\n#plot(wp_ppp)\n\npar(mfrow=c(1,2))\nplot(wp_ppp_functional)\nplot(wp_ppp_nonfunctional)\n\n\n\n\n\n\n\n\n4.3.1 Check for duplicates\n\nT / F valueSum of duplicatesJittery Approach\n\n\n\n#any(duplicated(wp_ppp))\n\nany(duplicated(wp_ppp_functional))\n\n[1] FALSE\n\nany(duplicated(wp_ppp_nonfunctional))\n\n[1] FALSE\n\n\n\n\nIf so, check for the number of duplicates\n\nsum(multiplicity(wp_ppp_functional) > 1)\n\n[1] 0\n\nsum(multiplicity(wp_ppp_nonfunctional) > 1)\n\n[1] 0\n\n\n\n\nTo resolve this problem, we will be using the jittering approach, which will add a small perturbation to the duplicate points so that they do not occupy the exact same space.\n\n#wp_ppp_jit <- rjitter(wp_ppp, \n#                      retry=TRUE,\n#                      nsim=1, \n#                      drop=TRUE)\n\nwp_ppp_functional_jit <- rjitter(wp_ppp_functional, \n                      retry=TRUE,\n                      nsim=1, \n                      drop=TRUE)\nwp_ppp_nonfunctional_jit <- rjitter(wp_ppp_nonfunctional, \n                      retry=TRUE,\n                      nsim=1, \n                      drop=TRUE)\n\nThen, check again for duplicates\n\nany(duplicated(wp_ppp_functional_jit))\n\n[1] FALSE\n\nany(duplicated(wp_ppp_nonfunctional_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#create-owin-object",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#create-owin-object",
    "title": "Take-Home Exercise 1",
    "section": "4.4 Create owin object",
    "text": "4.4 Create owin object\nowin object is designed to represent this polygonal region. We will be using to convert nigeria Spatial Polygon object into owin object of spatstat.\n\nCodePlotSummary\n\n\n\nnga_owin <- as(nga_sp, \"owin\")\n\n\n\n\nplot(nga_owin)\n\n\n\n\n\n\n\nsummary(nga_owin)\n\nWindow: polygonal boundary\n30 separate polygons (no holes)\n            vertices      area relative.area\npolygon 1        204 766084000       0.08870\npolygon 2         81 304399000       0.03520\npolygon 3         97 465688000       0.05390\npolygon 4        124 373051000       0.04320\npolygon 5         60 149473000       0.01730\npolygon 6         84 144820000       0.01680\npolygon 7         50 102243000       0.01180\npolygon 8         72 216002000       0.02500\npolygon 9        112 269897000       0.03130\npolygon 10       125 365142000       0.04230\npolygon 11        83 111191000       0.01290\npolygon 12       126 192557000       0.02230\npolygon 13       219 904397000       0.10500\npolygon 14       174 741131000       0.08580\npolygon 15        81 138742000       0.01610\npolygon 16        65 119452000       0.01380\npolygon 17        90 280205000       0.03240\npolygon 18        69  69814600       0.00808\npolygon 19        69  42727500       0.00495\npolygon 20        49  30458800       0.00353\npolygon 21        62 263505000       0.03050\npolygon 22        93 438930000       0.05080\npolygon 23        87 274127000       0.03170\npolygon 24       105 509979000       0.05910\npolygon 25        98 292058000       0.03380\npolygon 26        64 327765000       0.03800\npolygon 27       133 108945000       0.01260\npolygon 28       122 462169000       0.05350\npolygon 29        94 109715000       0.01270\npolygon 30        95  61239800       0.00709\nenclosing rectangle: [176503.22, 291043.82] x [331434.7, 454520.1] units\n                     (114500 x 123100 units)\nWindow area = 8635910000 square units\nFraction of frame area: 0.613\n\n\n\n\n\n\n4.4.1 Combining point events object and owin object\n\nCodePlot\n\n\n\n#wpNGA_ppp = wp_ppp[nga_owin]\n\nwpNGA_ppp_functional = wp_ppp_functional[nga_owin]\nwpNGA_ppp_nonfunctional= wp_ppp_nonfunctional[nga_owin]\n\n\n\n\n#plot(wpNGA_ppp)\n\npar(mfrow=c(1,2))\nplot(wpNGA_ppp_functional)\nplot(wpNGA_ppp_nonfunctional)\n\n\n\n\n\n\n\n\n\n4.4.2 tmap plots\nWe can further plot our water points (functional & non-functional) using tmap().\n\nOverviewwp_functionalwp_nonfunctional\n\n\nLets put both functional and non functional water points together. Also, Set the base map to be “OpenStreetMap”.\n\ntmap_mode(\"view\")\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(NGA_wp) + \n  tm_polygons() + \ntm_shape(wp_functional) + \n  tm_dots(col = \"status_clean\", \n          size = 0.01, \n          border.col = \"black\", \n          border.lwd = 0.5) +\ntm_shape(wp_nonfunctional) + \n  tm_dots(col = \"status_clean\", \n          size = 0.01, \n          border.col = \"black\", \n          border.lwd = 0.5) +\n  tm_view(set.zoom.limits = c(8, 16))\n\n\n\n\n\n\nFrom this point map, even with the different colours points, it is difficult to intrepet the clusters of the functional and non-functional water points. Lets go to the next tab to look at only functional points.\n\n\n\ntmap_mode(\"view\")\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(NGA_wp) + \n  tm_polygons() + \ntm_shape(wp_functional) + \n  tm_dots(col = \"status_clean\", \n          size = 0.01, \n          border.col = \"black\", \n          border.lwd = 0.5) +\n  tm_view(set.zoom.limits = c(8, 16))\n\n\n\n\n\n\nAt a macro view (zoom out), there are A LOT of functional water points. While zooming in, it looks like there’s some clusters of water points such as the border between Ife Central and Ife East. Lets take a look at the next tab, wp_nonfunctional.\n\n\n\ntmap_mode(\"view\")\ntm_basemap(\"OpenStreetMap\") +\ntm_shape(NGA_wp) + \n  tm_polygons() + \ntm_shape(wp_nonfunctional) + \n  tm_dots(col = \"status_clean\", \n          size = 0.01, \n          border.col = \"black\", \n          border.lwd = 0.5) +\n  tm_view(set.zoom.limits = c(8, 16))\n\n\n\n\n\n\nAgain, at a macro view (zoom out), there are A LOT of functional water points. While zooming in, it looks like there’s some clusters of water points such as the border between Ife Central and Ife East, which seems like the same cluster as shown in wp_functional. This highlights that point map might not suitable in identifying the clusters due to the overlapping points and categorisation. Thus, lets proceed onto the First-Order of Spatial Point Patterns Analysis to plot Kernel density maps which could provide more meaningful insights."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#kernel-density-estimation",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#kernel-density-estimation",
    "title": "Take-Home Exercise 1",
    "section": "5.1 Kernel Density Estimation",
    "text": "5.1 Kernel Density Estimation\nIn this section, We will be computing Functional and Non-Functional water points in Osun.\n\n5.1.1 Computing kernel density estimation using automatic bandwidth selection method\nWe will be using the bw.diggle() method than bw.ppl() because it is more suitable for this exercise to detect single tight cluster in the midst of random noise which was observed earlier section in the point maps, theres seem to be clusters, for example, along the border between Ife Central and Ife East.\n\nkde_wpNGA_functional.bw <- density(wpNGA_ppp_functional,\n                          sigma=bw.diggle,\n                          edge=TRUE,\n                          kernel=\"gaussian\") \n\nkde_wpNGA_nonfunctional.bw <- density(wpNGA_ppp_nonfunctional,\n                          sigma=bw.diggle,\n                          edge=TRUE,\n                          kernel=\"gaussian\") \n\npar(mfrow=c(1,2))\nplot(kde_wpNGA_functional.bw)\nplot(kde_wpNGA_nonfunctional.bw)\n\n\n\n\nIt looks the unit of measurement is of the default value in meter. That’s why the density values computed is in “number of points per square meter”.\nBefore moving to the next section, let’s retrieve the bandwidth used to compute the KDE layer.\n\nbw_functional\n\n\n\n#bw <- bw.diggle(wpNGA_ppp)\n#bw\nbw_functional <- bw.diggle(wpNGA_ppp_functional)\nbw_functional\n\n   sigma \n252.1687 \n\n\n\nbw_nonfunctional <- bw.diggle(wpNGA_ppp_nonfunctional)\nbw_nonfunctional\n\n   sigma \n308.2061 \n\n\n\n\n\n\n\n5.1.2 Rescalling KDE values\n\nwpNGA_ppp_functional.km <- rescale(wpNGA_ppp_functional, 1000, \"km\")\nwpNGA_ppp_nonfunctional.km <- rescale(wpNGA_ppp_nonfunctional, 1000, \"km\")\n\n\n#kde_wpNGA.bw <- density(wpNGA_ppp.km, sigma=bw.diggle, edge=TRUE, #kernel=\"gaussian\")\n#plot(kde_wpNGA.bw)\n\n\nkde_wpNGA_functional.bw <- density(wpNGA_ppp_functional.km,\n                          sigma=bw.diggle,\n                          edge=TRUE,\n                          kernel=\"gaussian\") \n\nkde_wpNGA_nonfunctional.bw <- density(wpNGA_ppp_nonfunctional.km,\n                          sigma=bw.diggle,\n                          edge=TRUE,\n                          kernel=\"gaussian\") \n\npar(mfrow=c(1,2))\nplot(kde_wpNGA_functional.bw)\nplot(kde_wpNGA_nonfunctional.bw)\n\n\n\n\nUnlike the point map, from the above KDE maps, it highlight the signifcant clusters and much easier to identify the clusters of functional and non-functional water points clusters."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#adaptive-kde",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#adaptive-kde",
    "title": "Take-Home Exercise 1",
    "section": "5.2 Adaptive KDE",
    "text": "5.2 Adaptive KDE\n\n5.2.1 Computing KDE by using adaptive bandwidth\nFixed bandwidth method is very sensitive to highly skew distribution of spatial point patterns over geographical units for example urban versus rural. Hence, for this exercise, we will be using adaptive bandwidth instead.\n\nkde_wpNGA_functional_adaptivekde_wpNGA_nonfunctional_adaptive\n\n\nLets look at functional wp in adaptive bandwidth then move on the next tab for the non-functional.\n\n#kde_wpNGA_adaptive <- adaptive.density(wpNGA_ppp.km, method=\"kernel\")\n#plot(kde_wpNGA_adaptive)\n\npar(mfrow=c(1,2))\n\nkde_wpNGA_functional_adaptive <- adaptive.density(wpNGA_ppp_functional.km, method=\"kernel\")\nplot(kde_wpNGA_functional_adaptive)\nplot(kde_wpNGA_functional.bw)\n\n\n\n\n\n\n\nkde_wpNGA_nonfunctional_adaptive <- adaptive.density(wpNGA_ppp_nonfunctional.km, method=\"kernel\")\nplot(kde_wpNGA_nonfunctional_adaptive)\n\n\n\nplot(kde_wpNGA_nonfunctional.bw)\n\n\n\n\nOBSERVATION Well it seems like theres isnt signficant changes to the functional BUT if u take a closer look at the non-functional map, some points are now lower in density with this adaptive bandwidth.\n\n\n\n\n\n5.2.2 Converting KDE output into grid object\nTo make the KDE output is suitable for mapping purposes.\n\nFunctional2. Non-Functional\n\n\n\n#gridded_kde_wpNGA_bw <- as.SpatialGridDataFrame.im(kde_wpNGA.bw)\n#spplot(gridded_kde_wpNGA_bw)\n\ngridded_kde_wpNGA_func_bw <- as.SpatialGridDataFrame.im(kde_wpNGA_functional.bw)\nspplot(gridded_kde_wpNGA_func_bw)\n\n\n\n\n\n\n\ngridded_kde_wpNGA_nfunc_bw <- as.SpatialGridDataFrame.im(kde_wpNGA_nonfunctional.bw)\nspplot(gridded_kde_wpNGA_nfunc_bw)\n\n\n\n\n\n\n\n\n5.2.2.1 Converting gridded output into raster\nNext, we will convert the gridded kernal density objects into RasterLayer object by using raster() of raster package.\n\n1. Convert2. Assigning projection systems3. tmap (functional)4. tmap (non-functional)\n\n\n\n#kde_wpNGA_bw_raster <- raster(gridded_kde_wpNGA_bw)\n#kde_wpNGA_bw_raster\n\nkde_wpNGA_func_bw_raster <- raster(gridded_kde_wpNGA_func_bw)\nkde_wpNGA_func_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -5.092436e-15, 25.49435  (min, max)\n\nkde_wpNGA_nfunc_bw_raster <- raster(gridded_kde_wpNGA_nfunc_bw)\nkde_wpNGA_nfunc_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -3.925434e-15, 20.49412  (min, max)\n\n\n\n\nWHY? - crs property is NA during the convert\n\n#projection(kde_wpNGA_bw_raster) <- CRS(\"+init=EPSG:3414\")\n#kde_wpNGA_bw_raster\n\nprojection(kde_wpNGA_func_bw_raster) <- CRS(\"+init=EPSG:3414\")\nkde_wpNGA_func_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -5.092436e-15, 25.49435  (min, max)\n\nprojection(kde_wpNGA_nfunc_bw_raster) <- CRS(\"+init=EPSG:3414\")\nkde_wpNGA_nfunc_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -3.925434e-15, 20.49412  (min, max)\n\n\n\n\nLets display the raster in cartographic quality map using tmap package.\n\ntm_shape(kde_wpNGA_func_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\n\n\ntm_shape(kde_wpNGA_nfunc_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n5.2.3 Spatial Point Patterns using KDE\n\n5.2.3.1 Extract Osun\nIn this section, we will be comparing KDE of water points at Osun as the study area.\n\n#osun = NGA_sc[wp_sc$clean_adm1 == \"Osun\",]\nosun = NGA_sc\n\nplot(osun, main = \"Osun\")\n\n\n\n\n\n\n5.2.3.2 Converting the spatial point data frame into generic sp format\n\nosun_sp = as(osun, \"SpatialPolygons\")\n\n\n\n5.2.3.3 Creating owin object\n\nosun_owin = as(osun_sp, \"owin\")\n\n\n\n5.2.3.4 Combining wp points and Osun (Study Area)\n\nwp_osun_ppp_func = wp_ppp_functional_jit[osun_owin]\nwp_osun_ppp_nfunc = wp_ppp_nonfunctional_jit[osun_owin]\n\nNext, rescale() function is used to trasnform the unit of measurement from metre to kilometre.\n\nwp_osun_ppp_func.km = rescale(wp_osun_ppp_func, 1000, \"km\")\nwp_osun_ppp_nfunc.km = rescale(wp_osun_ppp_nfunc, 1000, \"km\")\n\nAfter that, we do the plotting\n\npar(mfrow=c(1,2))\nplot(wp_osun_ppp_func.km, main=\"Osun Functional\")\nplot(wp_osun_ppp_nfunc.km, main=\"Osun Non-Functional\")\n\n\n\n\n\n\n5.2.3.5 Computing KDE\nThe code chunk below will be used to compute the KDE of these four planning area. bw.diggle method is used to derive the bandwidth of each\n\npar(mfrow=c(1,2))\nplot(density(wp_osun_ppp_func.km,\n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Osun Functional\")\n\nplot(density(wp_osun_ppp_nfunc.km,\n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Osun Non-Functional\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#analysing-spatial-point-process-using-g-function",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#analysing-spatial-point-process-using-g-function",
    "title": "Take-Home Exercise 1",
    "section": "6.1 Analysing Spatial Point Process Using G-Function",
    "text": "6.1 Analysing Spatial Point Process Using G-Function\nIn this section, the G function measures the distances between any two events and their respective nearest neighbours. Using spatstat package’s Gest() and envelope() to run a Monte Carlo simulation test, which is used to predict the probability of a range of outcomes when the possibility of random variables is present.\n\nFunctionalNon-Functional\n\n\n\n6.1.1 1. Computing G-function estimation (Functional)\nLets start with the functional.\n\nG_func_osun = Gest(wp_osun_ppp_func, correction = \"border\")\nplot(G_func_osun, xlim=c(0,500))\n\n\n\n\n\n\n6.1.2 2. Performing Complete Spatial Randomness Test (Functional)\nNext, we will be conducting a hypothesis test to confirm the observed spatial patterns above. The hypothesis and test are as follows:\nHo = The distribution of non-functional water points in Osun, Nigeria are randomly distributed.\nH1= The distribution of non-functional water points in Osun, Nigeria are NOT randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.05.\nMonte Carlo test with G-function\n\nG_func_osun.csr <- envelope(wp_osun_ppp_func, Gest, nsim = 39)\n\nGenerating 39 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,  39.\n\nDone.\n\n\n\nplot(G_func_osun.csr)\n\n\n\n\nConclusion From func_osun.csr, it is observed that at 95% confidence interval, the G(r) far above the G(theo) and the envelope. This implies that the functional water points in Osun, Nigeria are clustered. Thus, we can reject the null hypothesis that the distribution of functional water points are randomly distributed.\n\n\n\n\n6.1.3 3. Computing G-function estimation (Non-Functional)\nNext, Non-functional\n\nG_nfunc_osun = Gest(wp_osun_ppp_nfunc, correction = \"border\")\nplot(G_nfunc_osun, xlim=c(0,500))\n\n\n\n\n\n\n6.1.4 4. Performing Complete Spatial Randomness Test (Non-Functional)\nNext, we will be conducting a hypothesis test to confirm the observed spatial patterns above. The hypothesis and test are as follows:\nHo = The distribution of non-functional water points in Osun, Nigeria are randomly distributed.\nH1= The distribution of non-functional water points in Osun, Nigeria are NOT randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.05.\nMonte Carlo test with G-function\n\nG_nfunc_osun.csr <- envelope(wp_osun_ppp_nfunc, Gest, nsim = 39)\n\nGenerating 39 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,  39.\n\nDone.\n\n\n\nplot(G_nfunc_osun.csr)\n\n\n\n\nConclusion From nfunc_osun.csr, it is observed that at 95% confidence interval, the G(r) far above the G(theo) and the envelope. This implies that the non-functional water points in Osun, Nigeria are clustered. Thus, we can reject the null hypothesis that the distribution of non-functional water points are randomly distributed."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "title": "Take-Home_Ex02",
    "section": "",
    "text": "As a result of the COVID-19 outbreak in Indonesia, a widespread immunization campaign is currently being conducted there. The program was launched on January 13, 2021, when President Joko Widodo had his vaccination at the presidential palace. Indonesia is ranked third in Asia and fifth overall for total dosages administered.\nWikipedia states that as of February 5, 2023, at 18:00 WIB (UTC+7), 204,266,655 individuals had received the first dose of the vaccine and 175,131,893 individuals had received the full course of vaccination; 69,597,474 of these individuals had received the booster dose or third dose, and 1,585,164 had received the fourth dose. With 103.46% of the population fully immunized, Jakarta has the highest rate, followed by Bali and the Special Region of Yogyakarta with 85.45% and 83.02%, respectively.\n\n\n\nExploratory Spatial Data Analysis (ESDA) hold tremendous potential to address complex problems facing society. In this study, you are tasked to apply appropriate Local Indicators of Spatial Association (LISA) and Emerging Hot Spot Analysis (EHSA) to undercover the spatio-temporal trends of COVID-19 vaccination in DKI Jakarta.\n\n\n\nChoropleth Mapping and Analysis\n\nCompute the monthly vaccination rate from July 2021 to June 2022 at sub-district (also known as kelurahan in Bahasa Indonesia) level,\nPrepare the monthly vaccination rate maps by using appropriate tmap functions,\nDescribe the spatial patterns revealed by the choropleth maps (not more than 200 words).\n\nLocal Gi* Analysis\nWith reference to the vaccination rate maps prepared in ESDA:\nCompute local Gi* values of the monthly vaccination rate,\n\nDisplay the Gi* maps of the monthly vaccination rate. The maps should only display the significant (i.e. p-value < 0.05)\nWith reference to the analysis results, draw statistical conclusions (not more than 250 words).\n\nEmerging Hot Spot Analysis(EHSA)\nWith reference to the local Gi* values of the vaccination rate maps prepared in the previous section:\n\nPerform Mann-Kendall Test by using the spatio-temporal local Gi* values,\nSelect three sub-districts and describe the temporal trends revealed (not more than 250 words), and\nPrepared a EHSA map of the Gi* values of vaccination rate. The maps should only display the significant (i.e. p-value < 0.05).\nWith reference to the EHSA map prepared, describe the spatial patterns revelaed. (not more than 250 words).\n\n\n\n\n\nTable 1: Data used\n\n\n\n\n\n\n\n\n\nType\nName\nFormat\nDescription\nSource\n\n\n\n\nAspatial\nRiwayat File Vaksinasi DKI Jakarta\ncsv\nDaily vaccination data\nOpen Data Vaksinasi Provinsi DKI Jakarta\n\n\nGeospatial\nDKI Jakarta administration boundary 2019\nSHP\ngeoBoundaries data of Jakarta\nIndonesia Geospatial\n\n\n\nFor the Aspatial Data, We will be using dataset available on 1st day of the set time period (from july 2021 to jun 2022)\n\n\n\nFor this exercise, we’ll be using the following packages:\n\nsf: Manage and process vector-based geospatial data in R\nsfdep: Creates an sf and tidyverse friendly interface to the package as well as introduces new functionality that is not present in spdep.\nmaptools: Convert Spatial objects into ppp format of spatstat\ntmap: Plotting cartographic quality static point patterns maps or interactive maps by using leaflet API\ntidyverse: a collection of functions, data, and documentation that extends the capabilities of base R.\nknitr: A General-Purpose Package for Dynamic Report Generation in R\nkableExtra: an extension of kable, used for table customisation\ndplyr: for wrangling and transforming data\nreadxl: The readxl package makes it easy to get data out of Excel and into R\nplyr: used for splitting data, applying functions and combining results\nzoo: An S3 class with methods for totally ordered indexed observations, used for the time series.\n\nWe will be using p_load function of pacman package to install and load required packages.\n\npacman::p_load(sf, sfdep, tmap, maptools, tidyverse, knitr, readxl, kableExtra, dplyr, plyr, zoo)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#importing-geospatial",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#importing-geospatial",
    "title": "Take-Home_Ex02",
    "section": "2.1 Importing Geospatial",
    "text": "2.1 Importing Geospatial\n\nImportGlimpse\n\n\n\njkt <- st_read(dsn = \"data/geospatial/BATAS DESA DESEMBER 2019 DUKCAPIL DKI JAKARTA\", \n                layer = \"BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA\")\n\nReading layer `BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA' from data source \n  `C:\\kt-x\\is415-GAA\\Take-Home_Ex\\Take-Home_Ex02\\data\\geospatial\\BATAS DESA DESEMBER 2019 DUKCAPIL DKI JAKARTA' \n  using driver `ESRI Shapefile'\nSimple feature collection with 269 features and 161 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 106.3831 ymin: -6.370815 xmax: 106.9728 ymax: -5.184322\nGeodetic CRS:  WGS 84\n\n\n\n\n\nglimpse(jkt)\n\nRows: 269\nColumns: 162\n$ OBJECT_ID  <dbl> 25477, 25478, 25397, 25400, 25378, 25379, 25390, 25382, 253…\n$ KODE_DESA  <chr> \"3173031006\", \"3173031007\", \"3171031003\", \"3171031006\", \"31…\n$ DESA       <chr> \"KEAGUNGAN\", \"GLODOK\", \"HARAPAN MULIA\", \"CEMPAKA BARU\", \"PU…\n$ KODE       <dbl> 317303, 317303, 317103, 317103, 310101, 310101, 317102, 310…\n$ PROVINSI   <chr> \"DKI JAKARTA\", \"DKI JAKARTA\", \"DKI JAKARTA\", \"DKI JAKARTA\",…\n$ KAB_KOTA   <chr> \"JAKARTA BARAT\", \"JAKARTA BARAT\", \"JAKARTA PUSAT\", \"JAKARTA…\n$ KECAMATAN  <chr> \"TAMAN SARI\", \"TAMAN SARI\", \"KEMAYORAN\", \"KEMAYORAN\", \"KEPU…\n$ DESA_KELUR <chr> \"KEAGUNGAN\", \"GLODOK\", \"HARAPAN MULIA\", \"CEMPAKA BARU\", \"PU…\n$ JUMLAH_PEN <dbl> 21609, 9069, 29085, 41913, 6947, 7059, 15793, 5891, 33383, …\n$ JUMLAH_KK  <dbl> 7255, 3273, 9217, 13766, 2026, 2056, 5599, 1658, 11276, 128…\n$ LUAS_WILAY <dbl> 0.36, 0.37, 0.53, 0.97, 0.93, 0.95, 1.76, 1.14, 0.47, 1.31,…\n$ KEPADATAN  <dbl> 60504, 24527, 54465, 42993, 7497, 7401, 8971, 5156, 71628, …\n$ PERPINDAHA <dbl> 102, 25, 131, 170, 17, 26, 58, 13, 113, 178, 13, 87, 56, 12…\n$ JUMLAH_MEN <dbl> 68, 52, 104, 151, 14, 32, 36, 10, 60, 92, 5, 83, 21, 70, 93…\n$ PERUBAHAN  <dbl> 20464, 8724, 27497, 38323, 6853, 6993, 15006, 5807, 31014, …\n$ WAJIB_KTP  <dbl> 16027, 7375, 20926, 30264, 4775, 4812, 12559, 3989, 24784, …\n$ SILAM      <dbl> 15735, 1842, 26328, 36813, 6941, 7057, 7401, 5891, 23057, 2…\n$ KRISTEN    <dbl> 2042, 2041, 1710, 3392, 6, 0, 3696, 0, 4058, 5130, 1, 3061,…\n$ KHATOLIK   <dbl> 927, 1460, 531, 1082, 0, 0, 1602, 0, 2100, 2575, 0, 1838, 7…\n$ HINDU      <dbl> 15, 9, 42, 127, 0, 0, 622, 0, 25, 27, 0, 9, 115, 47, 382, 7…\n$ BUDHA      <dbl> 2888, 3716, 469, 495, 0, 2, 2462, 0, 4134, 4740, 5, 1559, 3…\n$ KONGHUCU   <dbl> 2, 1, 5, 1, 0, 0, 10, 0, 9, 10, 0, 4, 1, 1, 4, 0, 2, 0, 0, …\n$ KEPERCAYAA <dbl> 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 2, 0, 22, 0, 3, 3, 0, 0, 0…\n$ PRIA       <dbl> 11049, 4404, 14696, 21063, 3547, 3551, 7833, 2954, 16887, 1…\n$ WANITA     <dbl> 10560, 4665, 14389, 20850, 3400, 3508, 7960, 2937, 16496, 1…\n$ BELUM_KAWI <dbl> 10193, 4240, 14022, 20336, 3366, 3334, 7578, 2836, 15860, 1…\n$ KAWIN      <dbl> 10652, 4364, 13450, 19487, 3224, 3404, 7321, 2791, 15945, 1…\n$ CERAI_HIDU <dbl> 255, 136, 430, 523, 101, 80, 217, 44, 381, 476, 39, 305, 10…\n$ CERAI_MATI <dbl> 509, 329, 1183, 1567, 256, 241, 677, 220, 1197, 993, 79, 90…\n$ U0         <dbl> 1572, 438, 2232, 3092, 640, 648, 802, 585, 2220, 2399, 376,…\n$ U5         <dbl> 1751, 545, 2515, 3657, 645, 684, 995, 588, 2687, 2953, 331,…\n$ U10        <dbl> 1703, 524, 2461, 3501, 620, 630, 1016, 513, 2653, 2754, 309…\n$ U15        <dbl> 1493, 521, 2318, 3486, 669, 671, 1106, 548, 2549, 2666, 328…\n$ U20        <dbl> 1542, 543, 2113, 3098, 619, 609, 1081, 491, 2313, 2515, 290…\n$ U25        <dbl> 1665, 628, 2170, 3024, 639, 582, 1002, 523, 2446, 2725, 325…\n$ U30        <dbl> 1819, 691, 2363, 3188, 564, 592, 1236, 478, 2735, 3122, 329…\n$ U35        <dbl> 1932, 782, 2595, 3662, 590, 572, 1422, 504, 3034, 3385, 317…\n$ U40        <dbl> 1828, 675, 2371, 3507, 480, 486, 1200, 397, 2689, 3037, 250…\n$ U45        <dbl> 1600, 607, 2250, 3391, 421, 457, 1163, 365, 2470, 2597, 206…\n$ U50        <dbl> 1408, 619, 1779, 2696, 346, 369, 1099, 288, 2129, 2282, 134…\n$ U55        <dbl> 1146, 602, 1379, 1909, 252, 318, 979, 235, 1843, 1930, 129,…\n$ U60        <dbl> 836, 614, 1054, 1397, 197, 211, 880, 162, 1386, 1394, 75, 9…\n$ U65        <dbl> 587, 555, 654, 970, 122, 114, 747, 111, 958, 932, 50, 706, …\n$ U70        <dbl> 312, 311, 411, 631, 69, 55, 488, 65, 554, 573, 38, 412, 129…\n$ U75        <dbl> 415, 414, 420, 704, 74, 61, 577, 38, 717, 642, 37, 528, 125…\n$ TIDAK_BELU <dbl> 3426, 1200, 4935, 7328, 1306, 1318, 2121, 973, 5075, 6089, …\n$ BELUM_TAMA <dbl> 1964, 481, 2610, 3763, 730, 676, 1278, 732, 3241, 3184, 383…\n$ TAMAT_SD   <dbl> 2265, 655, 2346, 2950, 1518, 2054, 1169, 1266, 4424, 3620, …\n$ SLTP       <dbl> 3660, 1414, 3167, 5138, 906, 1357, 2236, 852, 5858, 6159, 5…\n$ SLTA       <dbl> 8463, 3734, 12172, 16320, 2040, 1380, 5993, 1570, 12448, 14…\n$ DIPLOMA_I  <dbl> 81, 23, 84, 179, 22, 15, 43, 36, 85, 83, 4, 63, 27, 79, 110…\n$ DIPLOMA_II <dbl> 428, 273, 1121, 1718, 101, 59, 573, 97, 604, 740, 25, 734, …\n$ DIPLOMA_IV <dbl> 1244, 1241, 2477, 4181, 314, 191, 2199, 357, 1582, 1850, 83…\n$ STRATA_II  <dbl> 74, 46, 166, 315, 10, 8, 168, 8, 63, 92, 5, 174, 125, 122, …\n$ STRATA_III <dbl> 4, 2, 7, 21, 0, 1, 13, 0, 3, 9, 0, 16, 8, 7, 75, 49, 65, 14…\n$ BELUM_TIDA <dbl> 3927, 1388, 5335, 8105, 1788, 1627, 2676, 1129, 5985, 6820,…\n$ APARATUR_P <dbl> 81, 10, 513, 931, 246, 75, 156, 160, 132, 79, 23, 145, 369,…\n$ TENAGA_PEN <dbl> 70, 43, 288, 402, 130, 93, 81, 123, 123, 73, 45, 109, 30, 1…\n$ WIRASWASTA <dbl> 8974, 3832, 10662, 14925, 788, 728, 6145, 819, 12968, 14714…\n$ PERTANIAN  <dbl> 1, 0, 1, 3, 2, 2, 1, 3, 2, 5, 1, 1, 0, 0, 2, 5, 2, 1, 13, 4…\n$ NELAYAN    <dbl> 0, 0, 2, 0, 960, 1126, 1, 761, 1, 2, 673, 0, 0, 0, 0, 0, 2,…\n$ AGAMA_DAN  <dbl> 6, 6, 5, 40, 0, 0, 49, 2, 10, 11, 0, 54, 15, 16, 21, 14, 17…\n$ PELAJAR_MA <dbl> 4018, 1701, 6214, 9068, 1342, 1576, 3135, 1501, 6823, 6866,…\n$ TENAGA_KES <dbl> 28, 29, 80, 142, 34, 26, 60, 11, 48, 55, 16, 68, 89, 93, 28…\n$ PENSIUNAN  <dbl> 57, 50, 276, 498, 20, 7, 59, 14, 56, 75, 2, 97, 53, 146, 57…\n$ LAINNYA    <dbl> 4447, 2010, 5709, 7799, 1637, 1799, 3430, 1368, 7235, 7206,…\n$ GENERATED  <chr> \"30 Juni 2019\", \"30 Juni 2019\", \"30 Juni 2019\", \"30 Juni 20…\n$ KODE_DES_1 <chr> \"3173031006\", \"3173031007\", \"3171031003\", \"3171031006\", \"31…\n$ BELUM_     <dbl> 3099, 1032, 4830, 7355, 1663, 1704, 2390, 1213, 5330, 5605,…\n$ MENGUR_    <dbl> 4447, 2026, 5692, 7692, 1576, 1731, 3500, 1323, 7306, 7042,…\n$ PELAJAR_   <dbl> 3254, 1506, 6429, 8957, 1476, 1469, 3185, 1223, 6993, 6858,…\n$ PENSIUNA_1 <dbl> 80, 65, 322, 603, 24, 8, 70, 20, 75, 97, 2, 132, 67, 165, 6…\n$ PEGAWAI_   <dbl> 48, 5, 366, 612, 223, 72, 65, 143, 73, 48, 15, 89, 91, 174,…\n$ TENTARA    <dbl> 4, 0, 41, 57, 3, 0, 74, 1, 20, 12, 2, 11, 90, 340, 41, 52, …\n$ KEPOLISIAN <dbl> 10, 1, 16, 42, 11, 8, 2, 9, 17, 7, 3, 9, 165, 15, 17, 28, 1…\n$ PERDAG_    <dbl> 31, 5, 1, 3, 6, 1, 2, 4, 3, 1, 4, 0, 1, 2, 9, 2, 8, 2, 5, 9…\n$ PETANI     <dbl> 0, 0, 1, 2, 0, 1, 1, 0, 1, 1, 1, 2, 0, 0, 1, 2, 0, 1, 6, 1,…\n$ PETERN_    <dbl> 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ NELAYAN_1  <dbl> 1, 0, 1, 0, 914, 1071, 0, 794, 0, 1, 663, 0, 0, 0, 0, 0, 2,…\n$ INDUSTR_   <dbl> 7, 3, 4, 3, 1, 3, 0, 0, 1, 7, 0, 0, 2, 2, 1, 3, 12, 1, 8, 4…\n$ KONSTR_    <dbl> 3, 0, 2, 6, 3, 8, 1, 6, 1, 5, 10, 0, 2, 5, 7, 4, 7, 1, 6, 2…\n$ TRANSP_    <dbl> 2, 0, 7, 4, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 6, 3, 2, 1, 2, 5,…\n$ KARYAW_    <dbl> 6735, 3034, 7347, 10185, 237, 264, 4319, 184, 9405, 10844, …\n$ KARYAW1    <dbl> 9, 2, 74, 231, 4, 0, 16, 1, 13, 10, 1, 24, 17, 29, 187, 246…\n$ KARYAW1_1  <dbl> 0, 0, 5, 15, 0, 0, 0, 1, 0, 1, 0, 0, 2, 4, 7, 9, 3, 1, 6, 5…\n$ KARYAW1_12 <dbl> 23, 4, 25, 35, 141, 50, 16, 157, 6, 9, 40, 11, 11, 15, 22, …\n$ BURUH      <dbl> 515, 155, 971, 636, 63, 218, 265, 55, 1085, 652, 17, 357, 2…\n$ BURUH_     <dbl> 1, 0, 0, 0, 2, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 2, 1, 0, 1, 1,…\n$ BURUH1     <dbl> 0, 0, 1, 0, 1, 25, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ BURUH1_1   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,…\n$ PEMBANT_   <dbl> 1, 1, 4, 1, 1, 0, 7, 0, 5, 1, 0, 6, 1, 10, 11, 9, 8, 3, 4, …\n$ TUKANG     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,…\n$ TUKANG_1   <dbl> 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ TUKANG_12  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ TUKANG__13 <dbl> 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0,…\n$ TUKANG__14 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ TUKANG__15 <dbl> 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,…\n$ TUKANG__16 <dbl> 7, 4, 10, 14, 0, 0, 2, 0, 7, 8, 0, 8, 1, 0, 3, 2, 2, 0, 17,…\n$ TUKANG__17 <dbl> 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ PENATA     <dbl> 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,…\n$ PENATA_    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ PENATA1_1  <dbl> 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0,…\n$ MEKANIK    <dbl> 11, 1, 10, 8, 0, 0, 4, 0, 7, 8, 0, 9, 0, 15, 10, 10, 3, 0, …\n$ SENIMAN_   <dbl> 4, 0, 12, 28, 0, 0, 2, 0, 3, 4, 0, 9, 6, 7, 14, 13, 17, 22,…\n$ TABIB      <dbl> 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,…\n$ PARAJI_    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ PERANCA_   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 2, 0, 0,…\n$ PENTER_    <dbl> 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0,…\n$ IMAM_M     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ PENDETA    <dbl> 2, 4, 5, 33, 0, 0, 20, 0, 10, 8, 0, 30, 14, 14, 18, 12, 1, …\n$ PASTOR     <dbl> 0, 1, 0, 1, 0, 0, 8, 0, 0, 0, 0, 23, 0, 0, 0, 0, 2, 0, 0, 0…\n$ WARTAWAN   <dbl> 7, 1, 16, 27, 0, 0, 4, 0, 8, 6, 0, 9, 5, 9, 26, 30, 11, 7, …\n$ USTADZ     <dbl> 6, 1, 1, 5, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,…\n$ JURU_M     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0,…\n$ PROMOT     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ ANGGOTA_   <dbl> 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 2, 1, 2, 1, 0, 0,…\n$ ANGGOTA1   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,…\n$ ANGGOTA1_1 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ PRESIDEN   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ WAKIL_PRES <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,…\n$ ANGGOTA1_2 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,…\n$ ANGGOTA1_3 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,…\n$ DUTA_B     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,…\n$ GUBERNUR   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,…\n$ WAKIL_GUBE <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ BUPATI     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ WAKIL_BUPA <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ WALIKOTA   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ WAKIL_WALI <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ ANGGOTA1_4 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 0, 1,…\n$ ANGGOTA1_5 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,…\n$ DOSEN      <dbl> 3, 2, 23, 36, 1, 2, 11, 0, 3, 5, 0, 14, 6, 28, 69, 73, 58, …\n$ GURU       <dbl> 72, 40, 272, 378, 118, 72, 69, 116, 126, 71, 36, 97, 23, 10…\n$ PILOT      <dbl> 1, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0,…\n$ PENGACARA_ <dbl> 4, 1, 8, 22, 0, 0, 5, 0, 5, 4, 0, 4, 3, 12, 24, 26, 40, 13,…\n$ NOTARIS    <dbl> 0, 0, 3, 5, 0, 0, 4, 0, 0, 0, 0, 5, 0, 5, 10, 3, 7, 1, 0, 4…\n$ ARSITEK    <dbl> 1, 0, 2, 3, 0, 0, 2, 0, 0, 0, 0, 4, 1, 2, 7, 3, 9, 2, 0, 4,…\n$ AKUNTA_    <dbl> 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 2, 0, 3, 1,…\n$ KONSUL_    <dbl> 1, 0, 2, 11, 0, 0, 4, 0, 0, 0, 0, 6, 2, 3, 10, 8, 12, 2, 1,…\n$ DOKTER     <dbl> 16, 32, 35, 68, 0, 1, 63, 0, 27, 32, 1, 63, 48, 60, 236, 12…\n$ BIDAN      <dbl> 3, 1, 9, 18, 12, 8, 1, 3, 3, 3, 7, 3, 10, 10, 7, 2, 3, 2, 1…\n$ PERAWAT    <dbl> 7, 0, 25, 44, 12, 10, 3, 6, 12, 20, 6, 7, 26, 16, 21, 20, 9…\n$ APOTEK_    <dbl> 0, 0, 2, 3, 1, 0, 0, 0, 1, 2, 0, 1, 2, 3, 3, 3, 3, 1, 0, 1,…\n$ PSIKIATER  <dbl> 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 2, 1, 0, 0, 0,…\n$ PENYIA_    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0,…\n$ PENYIA1    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,…\n$ PELAUT     <dbl> 0, 0, 6, 16, 1, 1, 0, 14, 2, 4, 1, 2, 4, 2, 10, 13, 2, 0, 3…\n$ PENELITI   <dbl> 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 2, 0,…\n$ SOPIR      <dbl> 65, 3, 94, 123, 0, 1, 61, 0, 76, 79, 0, 63, 44, 101, 71, 59…\n$ PIALAN     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ PARANORMAL <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,…\n$ PEDAGA_    <dbl> 379, 126, 321, 562, 11, 10, 412, 15, 202, 225, 0, 271, 212,…\n$ PERANG_    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,…\n$ KEPALA_    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ BIARAW_    <dbl> 0, 1, 0, 0, 0, 0, 22, 0, 3, 0, 0, 2, 1, 0, 4, 0, 17, 1, 0, …\n$ WIRASWAST_ <dbl> 1370, 611, 1723, 3099, 131, 119, 1128, 259, 2321, 2677, 79,…\n$ LAINNYA_12 <dbl> 94, 57, 82, 122, 12, 10, 41, 6, 89, 158, 24, 37, 15, 94, 12…\n$ LUAS_DESA  <dbl> 25476, 25477, 25396, 25399, 25377, 25378, 25389, 25381, 253…\n$ KODE_DES_3 <chr> \"3173031006\", \"3173031007\", \"3171031003\", \"3171031006\", \"31…\n$ DESA_KEL_1 <chr> \"KEAGUNGAN\", \"GLODOK\", \"HARAPAN MULIA\", \"CEMPAKA BARU\", \"PU…\n$ KODE_12    <dbl> 317303, 317303, 317103, 317103, 310101, 310101, 317102, 310…\n$ geometry   <MULTIPOLYGON [°]> MULTIPOLYGON (((106.8164 -6..., MULTIPOLYGON (…"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-pre-processing",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-pre-processing",
    "title": "Take-Home_Ex02",
    "section": "2.2 Data Pre-processing",
    "text": "2.2 Data Pre-processing\nWe got to first ensure 2 things: validity of geomeetries and if there are missing values that could affect the later section of calculations and visualisations.\nReference for this section of Choropleth Mapping was taken from the senior sample submissions for the code for this section, with credit to Take-Home Exercise 1: Analysing and Visualising Spatio-temporal Patterns of COVID-19 in DKI Jakarta, Indonesia by MEGAN SIM TZE YEN.\n\n2.2.1 Validity of geometry\nUsing st_is_valid function to check\n\nlength(which(st_is_valid(jkt) == FALSE))\n\n[1] 0\n\n\nSince theres no invalids geometrics, we move to missing values\n\n\n2.2.2 Missing values\n\n1. Check of missing values2. Remove missing values3. Check again for missing value\n\n\n\njkt[rowSums(is.na(jkt))!=0,]\n\nSimple feature collection with 2 features and 161 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 106.8412 ymin: -6.154036 xmax: 106.8612 ymax: -6.144973\nGeodetic CRS:  WGS 84\n    OBJECT_ID KODE_DESA             DESA   KODE    PROVINSI KAB_KOTA KECAMATAN\n243     25645  31888888     DANAU SUNTER 318888 DKI JAKARTA     <NA>      <NA>\n244     25646  31888888 DANAU SUNTER DLL 318888 DKI JAKARTA     <NA>      <NA>\n    DESA_KELUR JUMLAH_PEN JUMLAH_KK LUAS_WILAY KEPADATAN PERPINDAHA JUMLAH_MEN\n243       <NA>          0         0          0         0          0          0\n244       <NA>          0         0          0         0          0          0\n    PERUBAHAN WAJIB_KTP SILAM KRISTEN KHATOLIK HINDU BUDHA KONGHUCU KEPERCAYAA\n243         0         0     0       0        0     0     0        0          0\n244         0         0     0       0        0     0     0        0          0\n    PRIA WANITA BELUM_KAWI KAWIN CERAI_HIDU CERAI_MATI U0 U5 U10 U15 U20 U25\n243    0      0          0     0          0          0  0  0   0   0   0   0\n244    0      0          0     0          0          0  0  0   0   0   0   0\n    U30 U35 U40 U45 U50 U55 U60 U65 U70 U75 TIDAK_BELU BELUM_TAMA TAMAT_SD SLTP\n243   0   0   0   0   0   0   0   0   0   0          0          0        0    0\n244   0   0   0   0   0   0   0   0   0   0          0          0        0    0\n    SLTA DIPLOMA_I DIPLOMA_II DIPLOMA_IV STRATA_II STRATA_III BELUM_TIDA\n243    0         0          0          0         0          0          0\n244    0         0          0          0         0          0          0\n    APARATUR_P TENAGA_PEN WIRASWASTA PERTANIAN NELAYAN AGAMA_DAN PELAJAR_MA\n243          0          0          0         0       0         0          0\n244          0          0          0         0       0         0          0\n    TENAGA_KES PENSIUNAN LAINNYA GENERATED KODE_DES_1 BELUM_ MENGUR_ PELAJAR_\n243          0         0       0      <NA>       <NA>      0       0        0\n244          0         0       0      <NA>       <NA>      0       0        0\n    PENSIUNA_1 PEGAWAI_ TENTARA KEPOLISIAN PERDAG_ PETANI PETERN_ NELAYAN_1\n243          0        0       0          0       0      0       0         0\n244          0        0       0          0       0      0       0         0\n    INDUSTR_ KONSTR_ TRANSP_ KARYAW_ KARYAW1 KARYAW1_1 KARYAW1_12 BURUH BURUH_\n243        0       0       0       0       0         0          0     0      0\n244        0       0       0       0       0         0          0     0      0\n    BURUH1 BURUH1_1 PEMBANT_ TUKANG TUKANG_1 TUKANG_12 TUKANG__13 TUKANG__14\n243      0        0        0      0        0         0          0          0\n244      0        0        0      0        0         0          0          0\n    TUKANG__15 TUKANG__16 TUKANG__17 PENATA PENATA_ PENATA1_1 MEKANIK SENIMAN_\n243          0          0          0      0       0         0       0        0\n244          0          0          0      0       0         0       0        0\n    TABIB PARAJI_ PERANCA_ PENTER_ IMAM_M PENDETA PASTOR WARTAWAN USTADZ JURU_M\n243     0       0        0       0      0       0      0        0      0      0\n244     0       0        0       0      0       0      0        0      0      0\n    PROMOT ANGGOTA_ ANGGOTA1 ANGGOTA1_1 PRESIDEN WAKIL_PRES ANGGOTA1_2\n243      0        0        0          0        0          0          0\n244      0        0        0          0        0          0          0\n    ANGGOTA1_3 DUTA_B GUBERNUR WAKIL_GUBE BUPATI WAKIL_BUPA WALIKOTA WAKIL_WALI\n243          0      0        0          0      0          0        0          0\n244          0      0        0          0      0          0        0          0\n    ANGGOTA1_4 ANGGOTA1_5 DOSEN GURU PILOT PENGACARA_ NOTARIS ARSITEK AKUNTA_\n243          0          0     0    0     0          0       0       0       0\n244          0          0     0    0     0          0       0       0       0\n    KONSUL_ DOKTER BIDAN PERAWAT APOTEK_ PSIKIATER PENYIA_ PENYIA1 PELAUT\n243       0      0     0       0       0         0       0       0      0\n244       0      0     0       0       0         0       0       0      0\n    PENELITI SOPIR PIALAN PARANORMAL PEDAGA_ PERANG_ KEPALA_ BIARAW_ WIRASWAST_\n243        0     0      0          0       0       0       0       0          0\n244        0     0      0          0       0       0       0       0          0\n    LAINNYA_12 LUAS_DESA KODE_DES_3 DESA_KEL_1 KODE_12\n243          0         0       <NA>       <NA>       0\n244          0         0       <NA>       <NA>       0\n                          geometry\n243 MULTIPOLYGON (((106.8612 -6...\n244 MULTIPOLYGON (((106.8504 -6...\n\n\nFrom the output, Columns with missing values (KAB_KOTA (City), KECAMATAN (District) and DESA_KELUR (Sub-District)) as well as other fields since its from the same 2 rows (243 & 244), we can just remove these.\n\n\n\njkt <- na.omit(jkt,c(\"DESA_KELUR\"))\n\n\n\n\njkt[rowSums(is.na(jkt))!=0,]\n\nSimple feature collection with 0 features and 161 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nGeodetic CRS:  WGS 84\n  [1] OBJECT_ID  KODE_DESA  DESA       KODE       PROVINSI   KAB_KOTA  \n  [7] KECAMATAN  DESA_KELUR JUMLAH_PEN JUMLAH_KK  LUAS_WILAY KEPADATAN \n [13] PERPINDAHA JUMLAH_MEN PERUBAHAN  WAJIB_KTP  SILAM      KRISTEN   \n [19] KHATOLIK   HINDU      BUDHA      KONGHUCU   KEPERCAYAA PRIA      \n [25] WANITA     BELUM_KAWI KAWIN      CERAI_HIDU CERAI_MATI U0        \n [31] U5         U10        U15        U20        U25        U30       \n [37] U35        U40        U45        U50        U55        U60       \n [43] U65        U70        U75        TIDAK_BELU BELUM_TAMA TAMAT_SD  \n [49] SLTP       SLTA       DIPLOMA_I  DIPLOMA_II DIPLOMA_IV STRATA_II \n [55] STRATA_III BELUM_TIDA APARATUR_P TENAGA_PEN WIRASWASTA PERTANIAN \n [61] NELAYAN    AGAMA_DAN  PELAJAR_MA TENAGA_KES PENSIUNAN  LAINNYA   \n [67] GENERATED  KODE_DES_1 BELUM_     MENGUR_    PELAJAR_   PENSIUNA_1\n [73] PEGAWAI_   TENTARA    KEPOLISIAN PERDAG_    PETANI     PETERN_   \n [79] NELAYAN_1  INDUSTR_   KONSTR_    TRANSP_    KARYAW_    KARYAW1   \n [85] KARYAW1_1  KARYAW1_12 BURUH      BURUH_     BURUH1     BURUH1_1  \n [91] PEMBANT_   TUKANG     TUKANG_1   TUKANG_12  TUKANG__13 TUKANG__14\n [97] TUKANG__15 TUKANG__16 TUKANG__17 PENATA     PENATA_    PENATA1_1 \n[103] MEKANIK    SENIMAN_   TABIB      PARAJI_    PERANCA_   PENTER_   \n[109] IMAM_M     PENDETA    PASTOR     WARTAWAN   USTADZ     JURU_M    \n[115] PROMOT     ANGGOTA_   ANGGOTA1   ANGGOTA1_1 PRESIDEN   WAKIL_PRES\n[121] ANGGOTA1_2 ANGGOTA1_3 DUTA_B     GUBERNUR   WAKIL_GUBE BUPATI    \n[127] WAKIL_BUPA WALIKOTA   WAKIL_WALI ANGGOTA1_4 ANGGOTA1_5 DOSEN     \n[133] GURU       PILOT      PENGACARA_ NOTARIS    ARSITEK    AKUNTA_   \n[139] KONSUL_    DOKTER     BIDAN      PERAWAT    APOTEK_    PSIKIATER \n[145] PENYIA_    PENYIA1    PELAUT     PENELITI   SOPIR      PIALAN    \n[151] PARANORMAL PEDAGA_    PERANG_    KEPALA_    BIARAW_    WIRASWAST_\n[157] LAINNYA_12 LUAS_DESA  KODE_DES_3 DESA_KEL_1 KODE_12    geometry  \n<0 rows> (or 0-length row.names)\n\n\n\n\n\n\n\n2.2.3 Validate & Transform jkt CRS\nMoving on, we gotta to validate the CRS of jarkarta\n\n1. Check the current crs2. Transform crs3. Check crs again\n\n\n\n# retrieves the crs\nst_crs(jkt)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nSo the assigned coordinates system is WGS 84 (aka World Geodetic System 1984) therefore, we got to change it to crs of Indonesia, DGN95 using the code of 23845.\n\n\n\njkt <- st_transform(jkt, 23845)\n\n\n\n\nst_crs(jkt)\n\nCoordinate Reference System:\n  User input: EPSG:23845 \n  wkt:\nPROJCRS[\"DGN95 / Indonesia TM-3 zone 54.1\",\n    BASEGEOGCRS[\"DGN95\",\n        DATUM[\"Datum Geodesi Nasional 1995\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4755]],\n    CONVERSION[\"Indonesia TM-3 zone 54.1\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",139.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9999,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",200000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",1500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"easting (X)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"northing (Y)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre.\"],\n        AREA[\"Indonesia - onshore east of 138°E.\"],\n        BBOX[-9.19,138,-1.49,141.01]],\n    ID[\"EPSG\",23845]]\n\n\nIt changed."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualise-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualise-data",
    "title": "Take-Home_Ex02",
    "section": "2.3 Visualise data",
    "text": "2.3 Visualise data\n\nplot(st_geometry(jkt))\n\n\n\n\nFrom the plot, jkt has both the mainland and outer islands but since outer islands are not within the objectives and tasks, so we can remove those.\nUsing google translate, 3 location-based relevant fields are KAB_KOTA (City), KECAMATAN (District) and DESA_KELUR (Village). Let’s to the macro lens to city level since district would be too much of unique values.\n\nunique(jkt$\"KAB_KOTA\")\n\n[1] \"JAKARTA BARAT\"    \"JAKARTA PUSAT\"    \"KEPULAUAN SERIBU\" \"JAKARTA UTARA\"   \n[5] \"JAKARTA TIMUR\"    \"JAKARTA SELATAN\" \n\n\n\ntm_shape(jkt) + \n  tm_polygons(\"KAB_KOTA\")\n\n\n\n\n\n2.3.1 Remove outer islands\n\njkt <- filter(jkt, KAB_KOTA != \"KEPULAUAN SERIBU\")\n\n\n\n2.3.2 Select & Filter\n\njkt <- jkt[, 0:9]\n\n\n\n2.3.3 Rename the fields\nFor easier and faster progress of assignment, lets rename the columns names\n\n# with reference to: https://www.codegrepper.com/code-examples/r/rename+column+name+in+r\n\njkt <- jkt %>% \n  dplyr::rename(\n    Object_ID=OBJECT_ID,\n    Province=PROVINSI, \n    City=KAB_KOTA, \n    District=KECAMATAN, \n    Village_Code=KODE_DESA, \n    Village=DESA, \n    Sub_District=DESA_KELUR,\n    Code=KODE, \n    Total_Population=JUMLAH_PEN\n    )"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#eda",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#eda",
    "title": "Take-Home_Ex02",
    "section": "2.4 EDA",
    "text": "2.4 EDA\n\n\nShow the code\ntm_shape(jkt) + \n  tm_polygons(\"City\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#inspect-aspatial-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#inspect-aspatial-data",
    "title": "Take-Home_Ex02",
    "section": "3.1 Inspect Aspatial Data",
    "text": "3.1 Inspect Aspatial Data\nFor the Choropleth mapping, the time frame to plot the map is from July 2021 to June 2022, i will be using the first day of the month of each month.\nBefore we import, lets see one of the data first.\n\n#July 2021\njkt_jul2021 <- read_excel(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (01 Juli 2021) vac.xlsx\")\n\nglimpse(jkt_jul2021)\n\nRows: 268\nColumns: 21\n$ `KODE KELURAHAN`                             <chr> NA, \"3172051003\", \"317304…\n$ `WILAYAH KOTA`                               <chr> NA, \"JAKARTA UTARA\", \"JAK…\n$ KECAMATAN                                    <chr> NA, \"PADEMANGAN\", \"TAMBOR…\n$ KELURAHAN                                    <chr> \"TOTAL\", \"ANCOL\", \"ANGKE\"…\n$ SASARAN                                      <dbl> 7739060, 20393, 25785, 25…\n$ `BELUM VAKSIN`                               <dbl> 5041111, 13272, 16477, 18…\n$ `JUMLAH\\r\\nDOSIS 1`                          <dbl> 2696017, 7114, 9299, 6301…\n$ `JUMLAH\\r\\nDOSIS 2`                          <dbl> 1181740, 3287, 3221, 2644…\n$ `TOTAL VAKSIN\\r\\nDIBERIKAN`                  <dbl> 3877757, 10401, 12520, 89…\n$ `LANSIA\\r\\nDOSIS 1`                          <dbl> 502873, 1297, 2003, 820, …\n$ `LANSIA\\r\\nDOSIS 2`                          <dbl> 449073, 1128, 1746, 703, …\n$ `LANSIA TOTAL \\r\\nVAKSIN DIBERIKAN`          <dbl> 951946, 2425, 3749, 1523,…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 1`                  <dbl> 2084559, 5672, 7121, 5170…\n$ `PELAYAN PUBLIK\\r\\nDOSIS 2`                  <dbl> 655641, 2053, 1364, 1731,…\n$ `PELAYAN PUBLIK TOTAL\\r\\nVAKSIN DIBERIKAN`   <dbl> 2740200, 7725, 8485, 6901…\n$ `GOTONG ROYONG\\r\\nDOSIS 1`                   <dbl> 35263, 44, 84, 103, 58, 7…\n$ `GOTONG ROYONG\\r\\nDOSIS 2`                   <dbl> 11624, 13, 31, 24, 18, 25…\n$ `GOTONG ROYONG TOTAL\\r\\nVAKSIN DIBERIKAN`    <dbl> 46887, 57, 115, 127, 76, …\n$ `TENAGA KESEHATAN\\r\\nDOSIS 1`                <dbl> 73322, 101, 91, 208, 70, …\n$ `TENAGA KESEHATAN\\r\\nDOSIS 2`                <dbl> 65402, 93, 80, 186, 63, 3…\n$ `TENAGA KESEHATAN TOTAL\\r\\nVAKSIN DIBERIKAN` <dbl> 138724, 194, 171, 394, 13…\n\n\nTheres isnt duplicates columns so lets select the relevant columns to our exercise.\nWhat to do for pre-processing (Aspatial Data):\n\nselect relevant columns only\nRename those columns names\n\n\n\n\nOriginal ver\nTranslated ver\n\n\n\n\nWILAYAH KOTA\nCity\n\n\nKECAMATAN\nDistrict\n\n\nKELURAHAN\nSub_District\n\n\nSASARAN\nTarget\n\n\nBELUM VAKSIN\nYet to be Vaccinated"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#a-function-to-take-in-the-aspatial-files-in-the-specific-path",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#a-function-to-take-in-the-aspatial-files-in-the-specific-path",
    "title": "Take-Home_Ex02",
    "section": "3.2 A function to take in the Aspatial files in the specific path",
    "text": "3.2 A function to take in the Aspatial files in the specific path\n\n# takes in an aspatial data filepath and returns a processed output\naspatial_preprocess <- function(filepath){\n  # the .name_repair=\"minimal\" is to indicate not to replace duplicate column names with 'NAME...n' like we saw above!\n  # reference: https://readxl.tidyverse.org/articles/articles/column-names.html\n  result_file <- read_xlsx(filepath, .name_repair=\"minimal\")\n  \n  # Remove Duplicate Columns\n  # essentially, it's saying \"take the columns that aren't duplicated, and if there are duplicates, take the last duplicate\"\n  # we use fromLast = TRUE to ensure that we keep the last duplicated column\n  # reference: https://www.marsja.se/how-to-remove-duplicates-in-r-rows-columns-dplyr/\n  # reference: https://stackoverflow.com/questions/16905425/find-duplicate-values-in-r\n  result_file <- result_file[, !duplicated(colnames(result_file), fromLast = TRUE)] \n  \n  # Create the Date Column\n  # the format of our files is: Standar Kelurahan Data Corona (DD Month YYYY Pukul Ti.me)\n  # while the start is technically \"(\", \"(\" is part of a regular expression and leads to a warning message, so we'll use \"Corona\" instead. The [[1]] refers to the first element in the list.\n  # we're loading it as DD-Month-YYYY format\n  # the end is 1 space before \"Pukul\", which means we have to -2 spaces (one for P, one for space)\n  # as such, the most relevant functions are substr (returns a substring) and either str_locate (returns location of substring as an integer matrix) or gregexpr (returns a list of locations of substring)\n  # reference https://stackoverflow.com/questions/14249562/find-the-location-of-a-character-in-string\n  startpoint <- gregexpr(pattern=\"Kelurahan\", filepath)[[1]] + 11\n  endpoint <- gregexpr(pattern=\"vac\", filepath)[[1]] - 3\n  result_file$Date <- substr(filepath, startpoint, endpoint)\n  \n  # Retain the Relevant Columns\n  result_file <- result_file %>% \n    select(\"Date\", \n           \"KODE KELURAHAN\", \n           \"WILAYAH KOTA\", \n           \"KECAMATAN\", \n           \"KELURAHAN\", \n           \"SASARAN\",\n           \"BELUM VAKSIN\")\n  \n  return(result_file)\n}\n\nLets Test out to see if theres a date column.\n\ntest_jul2021 = aspatial_preprocess(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (01 Juli 2021) vac.xlsx\")\n\nGreat, its there. Now lets do for all the Aspatial files"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#feeding-files-into-our-aspatial_preprocess-function",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#feeding-files-into-our-aspatial_preprocess-function",
    "title": "Take-Home_Ex02",
    "section": "3.3 Feeding Files into our aspatial_preprocess function",
    "text": "3.3 Feeding Files into our aspatial_preprocess function\n\n# in the folder 'data/aspatial', find files with the extension '.xlsx' and add it to our fileslist \n# the full.names=TRUE prepends the directory path to the file names, giving a relative file path - otherwise, only the file names (not the paths) would be returned \n# reference: https://stat.ethz.ch/R-manual/R-devel/library/base/html/list.files.html\nfileslist <-list.files(path = \"data/aspatial\", pattern = \"*.xlsx\", full.names=TRUE)\n\n# afterwards, for every element in fileslist, apply aspatial_process function\ndflist <- lapply(seq_along(fileslist), function(x) aspatial_preprocess(fileslist[x]))\n\nwe’ll need to convert the dflist into an actual dataframe with ldply()\n\nvaccine_jkt <- ldply(dflist, data.frame)\n\nLet’s check what vaccine_jkt looks like, and make sure the columns are correct.\n\nglimpse(vaccine_jkt)\n\nRows: 3,216\nColumns: 7\n$ Date           <chr> \"01 April 2022\", \"01 April 2022\", \"01 April 2022\", \"01 …\n$ KODE.KELURAHAN <chr> NA, \"3172051003\", \"3173041007\", \"3175041005\", \"31750310…\n$ WILAYAH.KOTA   <chr> NA, \"JAKARTA UTARA\", \"JAKARTA BARAT\", \"JAKARTA TIMUR\", …\n$ KECAMATAN      <chr> NA, \"PADEMANGAN\", \"TAMBORA\", \"KRAMAT JATI\", \"JATINEGARA…\n$ KELURAHAN      <chr> \"TOTAL\", \"ANCOL\", \"ANGKE\", \"BALE KAMBANG\", \"BALI MESTER…\n$ SASARAN        <dbl> 8941211, 23947, 29381, 29074, 9752, 26285, 21566, 23886…\n$ BELUM.VAKSIN   <dbl> 1481006, 4518, 5181, 5774, 1620, 3941, 3889, 3214, 9150…"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#format-date-column-of-the-aspatial-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#format-date-column-of-the-aspatial-data",
    "title": "Take-Home_Ex02",
    "section": "3.4 Format Date Column of the Aspatial data",
    "text": "3.4 Format Date Column of the Aspatial data\nThe dates now are in substring format, we got to convert into datetime format, with the additional consideration that the month are in Bahasa Indonesian.\n\n# parses the 'Date' column into Month(Full Name)-YYYY datetime objects\n# reference: https://stackoverflow.com/questions/53380650/b-y-date-conversion-gives-na\n\n# locale=\"ind\" means that the locale has been set as Indonesia\nSys.setlocale(locale=\"ind\")\n\n[1] \"LC_COLLATE=Indonesian_Indonesia.1252;LC_CTYPE=Indonesian_Indonesia.1252;LC_MONETARY=Indonesian_Indonesia.1252;LC_NUMERIC=C;LC_TIME=Indonesian_Indonesia.1252\"\n\n\n\nvaccine_jkt$Date <- c(vaccine_jkt$Date) %>% \n  as.Date(vaccine_jkt$Date, format =\"%d %B %Y\")\n\nglimpse(vaccine_jkt)\n\nRows: 3,216\nColumns: 7\n$ Date           <date> 2022-04-01, 2022-04-01, 2022-04-01, 2022-04-01, 2022-0~\n$ KODE.KELURAHAN <chr> NA, \"3172051003\", \"3173041007\", \"3175041005\", \"31750310~\n$ WILAYAH.KOTA   <chr> NA, \"JAKARTA UTARA\", \"JAKARTA BARAT\", \"JAKARTA TIMUR\", ~\n$ KECAMATAN      <chr> NA, \"PADEMANGAN\", \"TAMBORA\", \"KRAMAT JATI\", \"JATINEGARA~\n$ KELURAHAN      <chr> \"TOTAL\", \"ANCOL\", \"ANGKE\", \"BALE KAMBANG\", \"BALI MESTER~\n$ SASARAN        <dbl> 8941211, 23947, 29381, 29074, 9752, 26285, 21566, 23886~\n$ BELUM.VAKSIN   <dbl> 1481006, 4518, 5181, 5774, 1620, 3941, 3889, 3214, 9150~"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#renaming-columns-with-translation",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#renaming-columns-with-translation",
    "title": "Take-Home_Ex02",
    "section": "3.5 Renaming Columns with Translation",
    "text": "3.5 Renaming Columns with Translation\n\n# renames the columns in the style New_Name = OLD_NAME\nvaccine_jkt <- vaccine_jkt %>% \n  dplyr::rename(\n    Date=Date,\n    Code=KODE.KELURAHAN, \n    City=WILAYAH.KOTA, \n    District=KECAMATAN, \n    Sub_District=KELURAHAN,\n    Target=SASARAN, \n    Yet_to_be_vaccinated=BELUM.VAKSIN\n    )"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#further-data-processing",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#further-data-processing",
    "title": "Take-Home_Ex02",
    "section": "3.6 Further Data Processing",
    "text": "3.6 Further Data Processing\nNow that we have our confirmed dataframe, let’s execute any pre-processing we might have missed. Firstly, let’s check for missing values:\n\n# returns rows that contain NA values\nvaccine_jkt[rowSums(is.na(vaccine_jkt))!=0,]\n\n           Date Code City District Sub_District  Target Yet_to_be_vaccinated\n1    2022-04-01 <NA> <NA>     <NA>        TOTAL 8941211              1481006\n269  2021-12-01 <NA> <NA>     <NA>        TOTAL 8941211              1718787\n537  2022-02-01 <NA> <NA>     <NA>        TOTAL 8941211              1536737\n805  2022-01-01 <NA> <NA>     <NA>        TOTAL 8941211              1620250\n1073 2021-07-01 <NA> <NA>     <NA>        TOTAL 7739060              5041111\n1341 2022-06-01 <NA> <NA>     <NA>        TOTAL 8941211              1444901\n1609 2022-05-01 <NA> <NA>     <NA>        TOTAL 8941211              1455001\n1877 2021-11-01 <NA> <NA>     <NA>        TOTAL 8941211              1875655\n2145 2021-10-01 <NA> <NA>     <NA>        TOTAL 8941211              2221074\n2413 2021-09-01 <NA> <NA>     <NA>        TOTAL 8941211              3259430\n2681 2022-03-02 <NA> <NA>     <NA>        TOTAL 8941211              1516200\n2949 2021-08-01 <NA> <NA>     <NA>        TOTAL 8941211              4399496\n\n\nOH so these are the rows of each starting aspatial data files that has the total values. Anyways, we got to remove these then\n\n# removes rows that have an NA value in ID\nvaccine_jkt <- na.omit(vaccine_jkt,c(\"code\"))\n\nLets check again\n\n# returns rows that contain NA values\nvaccine_jkt[rowSums(is.na(vaccine_jkt))!=0,]\n\n[1] Date                 Code                 City                \n[4] District             Sub_District         Target              \n[7] Yet_to_be_vaccinated\n<0 rows> (or 0-length row.names)\n\n\nGreat. its removed."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#new-column---actual-vaccination-count",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#new-column---actual-vaccination-count",
    "title": "Take-Home_Ex02",
    "section": "3.7 New column - Actual vaccination count",
    "text": "3.7 New column - Actual vaccination count\nuse the target - the yet to vaccinated column and put into new column Actual_Vaccination_Rate\n\n#reference taken from: https://stackoverflow.com/questions/23888037/subtracting-two-columns-to-give-a-new-column-in-r\n\nvaccine_jkt$Vaccinated <- (vaccine_jkt$Target - vaccine_jkt$Yet_to_be_vaccinated)\n\nglimpse(vaccine_jkt)\n\nRows: 3,204\nColumns: 8\n$ Date                 <date> 2022-04-01, 2022-04-01, 2022-04-01, 2022-04-01, ~\n$ Code                 <chr> \"3172051003\", \"3173041007\", \"3175041005\", \"317503~\n$ City                 <chr> \"JAKARTA UTARA\", \"JAKARTA BARAT\", \"JAKARTA TIMUR\"~\n$ District             <chr> \"PADEMANGAN\", \"TAMBORA\", \"KRAMAT JATI\", \"JATINEGA~\n$ Sub_District         <chr> \"ANCOL\", \"ANGKE\", \"BALE KAMBANG\", \"BALI MESTER\", ~\n$ Target               <dbl> 23947, 29381, 29074, 9752, 26285, 21566, 23886, 4~\n$ Yet_to_be_vaccinated <dbl> 4518, 5181, 5774, 1620, 3941, 3889, 3214, 9150, 3~\n$ Vaccinated           <dbl> 19429, 24200, 23300, 8132, 22344, 17677, 20672, 3~"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#preliminary-joining-eda",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#preliminary-joining-eda",
    "title": "Take-Home_Ex02",
    "section": "4.1 Preliminary joining + EDA",
    "text": "4.1 Preliminary joining + EDA\nNow that we have both the geospatial and aspatial data frames, we’ll need to join them. A quick look at their headers tell us what their common fields are:\n\n# checks for column names of the dataframes\ncolnames(jkt)\n\n [1] \"Object_ID\"        \"Village_Code\"     \"Village\"          \"Code\"            \n [5] \"Province\"         \"City\"             \"District\"         \"Sub_District\"    \n [9] \"Total_Population\" \"geometry\"        \n\n\n\n# checks for column names of the dataframes\ncolnames(vaccine_jkt)\n\n[1] \"Date\"                 \"Code\"                 \"City\"                \n[4] \"District\"             \"Sub_District\"         \"Target\"              \n[7] \"Yet_to_be_vaccinated\" \"Vaccinated\"          \n\n\nIt seems that the City, Distict and Sub_District should match up. Let’s try doing that first:\n\n# joins cases_jakarta to bd_jakarta based on Province, Sub_District and City\ncombined_jkt <- left_join(jkt, vaccine_jkt,\n                              by=c(\n                                \"District\"=\"District\", \n                                \"Sub_District\"=\"Sub_District\",\n                                \"City\"=\"City\")\n                              )\n\nNow, let’s visualise our current combined_jkt in terms of vaccination rates:\n\n# maps the monthly vaccination rates\n\n\nvaccinated = tm_shape(combined_jkt)+\n  tm_fill(\"Vaccinated\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title=\"Vaccination Rate July2021\")\nvaccinated"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#identifying-mismatched-sub-district-records",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#identifying-mismatched-sub-district-records",
    "title": "Take-Home_Ex02",
    "section": "4.2 Identifying Mismatched Sub-District Records",
    "text": "4.2 Identifying Mismatched Sub-District Records\n\n# checks for unique values of Sub_District in cases_jakarta that aren't already present in bd_jakarta and vice versa\nvaccine_subdistrict <- c(vaccine_jkt$Sub_District)\njkt_subdistrict <- c(jkt$Sub_District)\n\nunique(vaccine_subdistrict[!(vaccine_subdistrict %in% jkt_subdistrict)])\n\n [1] \"BALE KAMBANG\"          \"HALIM PERDANA KUSUMAH\" \"JATI PULO\"            \n [4] \"KAMPUNG TENGAH\"        \"KERENDANG\"             \"KRAMAT JATI\"          \n [7] \"PAL MERIAM\"            \"PINANG RANTI\"          \"PULAU HARAPAN\"        \n[10] \"PULAU KELAPA\"          \"PULAU PANGGANG\"        \"PULAU PARI\"           \n[13] \"PULAU TIDUNG\"          \"PULAU UNTUNG JAWA\"     \"RAWA JATI\"            \n\n\n\nunique(jkt_subdistrict[!(jkt_subdistrict %in% vaccine_subdistrict)])\n\n[1] \"KRENDANG\"             \"RAWAJATI\"             \"TENGAH\"              \n[4] \"BALEKAMBANG\"          \"PINANGRANTI\"          \"JATIPULO\"            \n[7] \"PALMERIAM\"            \"KRAMATJATI\"           \"HALIM PERDANA KUSUMA\"\n\n\nInput the common data between the unique values of both df. We should have 9 mismatches. Because the aspatial data includes some of the islands in the dataset too.\n\n# initialise a dataframe of our vaccine vs jkt subdistrict spelling\nspelling <- data.frame(\n  Aspatial_Cases=c(\"BALE KAMBANG\", \"HALIM PERDANA KUSUMAH\", \"JATI PULO\", \"KAMPUNG TENGAH\", \"KRAMAT JATI\", \"KERENDANG\", \"PAL MERIAM\", \"PINANG RANTI\", \"RAWA JATI\"),\n  Geospatial_BD=c(\"BALEKAMBANG\", \"HALIM PERDANA KUSUMA\", \"JATIPULO\", \"TENGAH\", \"KRAMATJATI\", \"KRENDANG\", \"PALMERIAM\", \"PINANGRANTI\", \"RAWAJATI\")\n  )\n\n# with dataframe a input, outputs a kable\nlibrary(knitr)\nlibrary(kableExtra)\nkable(spelling, caption=\"Mismatched Records\") %>%\n  kable_material(\"hover\", latex_options=\"scale_down\")\n\n\n\nMismatched Records\n \n  \n    Aspatial_Cases \n    Geospatial_BD \n  \n \n\n  \n    BALE KAMBANG \n    BALEKAMBANG \n  \n  \n    HALIM PERDANA KUSUMAH \n    HALIM PERDANA KUSUMA \n  \n  \n    JATI PULO \n    JATIPULO \n  \n  \n    KAMPUNG TENGAH \n    TENGAH \n  \n  \n    KRAMAT JATI \n    KRAMATJATI \n  \n  \n    KERENDANG \n    KRENDANG \n  \n  \n    PAL MERIAM \n    PALMERIAM \n  \n  \n    PINANG RANTI \n    PINANGRANTI \n  \n  \n    RAWA JATI \n    RAWAJATI"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#correcting-mismatched-sub-district-records",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#correcting-mismatched-sub-district-records",
    "title": "Take-Home_Ex02",
    "section": "4.3 Correcting Mismatched Sub-District Records",
    "text": "4.3 Correcting Mismatched Sub-District Records\nNow that we know which sub-district records are mismatched, we need to rectify the mismatches by renaming them: (9 mismatches)\n\n# where jkt is a mismatched value, replace with the correct value\njkt$Sub_District[jkt$Sub_District == 'BALEKAMBANG'] <- 'BALE KAMBANG'\n\njkt$Sub_District[jkt$Sub_District == 'HALIM PERDANA KUSUMA'] <- 'HALIM PERDANA KUSUMAH'\n\njkt$Sub_District[jkt$Sub_District == 'JATIPULO'] <- 'JATI PULO'\n\njkt$Sub_District[jkt$Sub_District == 'TENGAH'] <- 'KAMPUNG TENGAH'\n\njkt$Sub_District[jkt$Sub_District == 'KRAMATJATI'] <- 'KRAMAT JATI'\n\njkt$Sub_District[jkt$Sub_District == 'KRENDANG'] <- 'KERENDANG'\n\njkt$Sub_District[jkt$Sub_District == 'PALMERIAM'] <- 'PAL MERIAM'\n\njkt$Sub_District[jkt$Sub_District == 'PINANGRANTI'] <- 'PINANG RANTI'\n\njkt$Sub_District[jkt$Sub_District == 'RAWAJATI'] <- 'RAWA JATI'"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#remove-the-islands-from-aspatial-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#remove-the-islands-from-aspatial-data",
    "title": "Take-Home_Ex02",
    "section": "4.4 Remove the islands from aspatial data",
    "text": "4.4 Remove the islands from aspatial data\n\nvaccine_jkt = filter(vaccine_jkt, !(Sub_District %in% c(\"PULAU HARAPAN\", \"PULAU KELAPA\", \"PULAU PANGGANG\", \"PULAU PARI\", \"PULAU TIDUNG\", \"PULAU UNTUNG JAWA\")))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#joining-eda",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#joining-eda",
    "title": "Take-Home_Ex02",
    "section": "4.5 Joining + EDA",
    "text": "4.5 Joining + EDA\nNow, we have a standardised common identifier among our geospatial and aspatial dataframes. Let’s join them once more:\n\n# joins vaccine_jkt to jkt based on Sub_District\ncombined_jkt<- left_join(jkt, vaccine_jkt,\n                              by=c(\"Sub_District\"=\"Sub_District\")\n                              )\n\nNow, let’s visualise our current combined_jkt in terms of vaccination rates again:\n\n# maps the monthly vaccination rates\n\n\nvaccinated = tm_shape(combined_jkt)+\n  tm_fill(\"Vaccinated\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title=\"Vaccination Rate July2021\")\nvaccinated"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#calculations",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#calculations",
    "title": "Take-Home_Ex02",
    "section": "4.6 Calculations",
    "text": "4.6 Calculations\nBefore we move into into EDA and thematic mapping, we need to calculate the cumulative vaccination cases rate ### CUMULATIVE CONFIRMED VACCINATION RATE\nThe cumulative vaccination rate can be calculated by taking the vaccinated (based on the name of the sub-district and the date), then dividing by 100.\n\n# grouping based on the sub-district and date\n# the cumulative_case_rate is based on the sum of cases over the total population\nvaccination_rate <- vaccine_jkt %>%\n  inner_join(jkt, by=c(\"Sub_District\" = \"Sub_District\")) %>%\n  group_by(Sub_District, Date) %>%\n  dplyr::summarise(`vaccination_rate` = ((sum(Vaccinated)/(Total_Population))*100)) %>%\n  \n  #afterwards, pivots the table based on the Dates, using the cumulative case rate as the values\n  ungroup() %>% pivot_wider(names_from = Date,\n              values_from = vaccination_rate)\n\n\nprint(as_tibble(vaccination_rate))\n\n# A tibble: 261 x 13\n   Sub_District  2021-~1 2021-~2 2021-~3 2021-~4 2021-~5 2021-~6 2022-~7 2022-~8\n   <chr>           <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 ANCOL            23.8    39.5    49.6    57.9    60.2    61.7    63.2    64.6\n 2 ANGKE            25.6    43.0    52.3    59.9    62.7    64.3    65.2    65.9\n 3 BALE KAMBANG     17.8    30.7    47.0    57.7    60.8    63.0    64.3    65.3\n 4 BALI MESTER      25.1    40.7    51.8    62.0    65.3    67.0    68.2    69.1\n 5 BAMBU APUS       23.2    39.6    53.3    63.7    67.0    68.3    69.0    69.9\n 6 BANGKA           24.5    43.2    50.4    60.2    64.1    65.6    66.3    66.9\n 7 BARU             30.6    47.3    55.2    64.7    67.4    68.5    69.1    69.7\n 8 BATU AMPAR       18.7    33.1    47.7    57.5    60.7    62.7    64.1    65.2\n 9 BENDUNGAN HI~    27.7    42.7    49.7    60.0    62.7    63.8    64.5    65.1\n10 BIDARA CINA      19.8    33.2    47.0    57.8    61.1    62.6    63.5    64.3\n# ... with 251 more rows, 4 more variables: `2022-03-02` <dbl>,\n#   `2022-04-01` <dbl>, `2022-05-01` <dbl>, `2022-06-01` <dbl>, and abbreviated\n#   variable names 1: `2021-07-01`, 2: `2021-08-01`, 3: `2021-09-01`,\n#   4: `2021-10-01`, 5: `2021-11-01`, 6: `2021-12-01`, 7: `2022-01-01`,\n#   8: `2022-02-01`"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#converting-dataframes-to-sf-objects",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#converting-dataframes-to-sf-objects",
    "title": "Take-Home_Ex02",
    "section": "4.7 Converting dataframes to sf objects",
    "text": "4.7 Converting dataframes to sf objects\nBefore we move on into the mapping, we should convert these dataframes into sf objects.\n\ncombined_jkt <- st_as_sf(combined_jkt)\n\n# need to join our previous dataframes with the geospatial data to ensure that geometry column is present\nvaccination_rate <- vaccination_rate%>% left_join(jkt, by=c(\"Sub_District\"=\"Sub_District\"))\nvaccination_rate <- st_as_sf(vaccination_rate)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#jenks-choropleth-map",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#jenks-choropleth-map",
    "title": "Take-Home_Ex02",
    "section": "5.1 Jenks Choropleth Map",
    "text": "5.1 Jenks Choropleth Map\nNow I will be trying to see the suitability of using Jenks Choropleth Map. It ‘seeks to minimize the average deviation from the class mean while maximizing the deviation from the means of the other groups’ (source) and tends to identify real, natural classes within the data. However, jenks will not work as well if the data has a low variance, so let’s check the variance:\n\nvar(vaccination_rate$`2021-07-01`)\n\n[1] 22.69626\n\n\n\n# var(vaccination_rate$`2021-07-01`)\n# var(vaccination_rate$`2021-08-01`)\n# var(vaccination_rate$`2021-09-01`)\n# var(vaccination_rate$`2021-10-01`)\n# var(vaccination_rate$`2021-11-01`)\n# var(vaccination_rate$`2021-12-01`)\n# var(vaccination_rate$`2022-01-01`)\n# var(vaccination_rate$`2022-02-01`)\n# var(vaccination_rate$`2022-03-02`)\n# var(vaccination_rate$`2022-04-01`)\n# var(vaccination_rate$`2022-05-01`)\n var(vaccination_rate$`2022-06-01`)\n\n[1] 5.912814\n\n\nWe can continue using the Jenks categorization since the variance is increasing overtime and appears to be significant. Following some testing, six classes appear to be the optimal: too few classes make it difficult to perceive any differentiation between the gradients, while too many classes make it difficult for us to distinguish between them.\n\n# using the jenks method, with 6 classes\ntmap_mode(\"plot\")\ntm_shape(vaccination_rate)+\n  tm_fill(\"2021-07-01\", \n          n= 6,\n          style = \"jenks\", \n          title = \"Vaccination Rate\") +\n  tm_layout(main.title = \"Vaccination Rate July 2021\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.5, \n            legend.width = 0.4,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\nWe should plot it for all the months - so let’s have a helper function for plotting this!\n\n# input: the dataframe and the variable name - in this case, the month \n# with style=\"jenks\" for the jenks classification method\njenks_plot <- function(df, varname) {\n  tm_shape(vaccination_rate) +\n    tm_polygons() +\n  tm_shape(df) +\n    tm_fill(varname, \n          n= 6,\n          style = \"jenks\", \n          title = \"Vaccination Rate\") +\n    tm_layout(main.title = varname,\n          main.title.position = \"center\",\n          main.title.size = 1.2,\n          legend.height = 0.35, \n          legend.width = 0.25,\n          frame = TRUE) +\n    tm_borders(alpha = 0.5)\n}"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#choropleth-mapping",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#choropleth-mapping",
    "title": "Take-Home_Ex02",
    "section": "5.2 Choropleth Mapping",
    "text": "5.2 Choropleth Mapping\nNow the visualisation the jenks plots for all months:\n\nYr 2021Yr 2022\n\n\nJul & Aug 2021\n\n\nShow the code\n# split it up into multiple arranges to make it easier to see\nlibrary(tmap)\ntmap_mode(\"plot\")\njul2021 = jenks_plot(vaccination_rate, \"2021-07-01\")\naug2021 = jenks_plot(vaccination_rate, \"2021-08-01\")\ntmap_arrange(jul2021, aug2021, asp=1, ncol=2)\n\n\n\n\n\nSept & Oct 2021\n\n\nShow the code\nlibrary(tmap)\ntmap_mode(\"plot\")\nsept2021 = jenks_plot(vaccination_rate, \"2021-09-01\")\noct2021 = jenks_plot(vaccination_rate, \"2021-10-01\")\ntmap_arrange(sept2021, oct2021, asp=1, ncol=2)\n\n\n\n\n\nNov & Dec 2021\n\n\nShow the code\nlibrary(tmap)\ntmap_mode(\"plot\")\nnov2021 = jenks_plot(vaccination_rate, \"2021-11-01\")\ndec2021 = jenks_plot(vaccination_rate, \"2021-12-01\")\ntmap_arrange(nov2021, dec2021, asp=1, ncol=2)\n\n\n\n\n\n\n\nJan & Feb 2022\n\n\nShow the code\nlibrary(tmap)\ntmap_mode(\"plot\")\njan2021 = jenks_plot(vaccination_rate, \"2022-01-01\")\nfeb2021 = jenks_plot(vaccination_rate, \"2022-02-01\")\ntmap_arrange(jan2021, feb2021, asp=1, ncol=2)\n\n\n\n\n\nMar & Apr 2022\n\n\nShow the code\nlibrary(tmap)\ntmap_mode(\"plot\")\nmar2021 = jenks_plot(vaccination_rate, \"2022-03-02\")\napr2021 = jenks_plot(vaccination_rate, \"2022-04-01\")\ntmap_arrange(mar2021, apr2021, asp=1, ncol=2)\n\n\n\n\n\nMay & Jun 2022\n\n\nShow the code\nlibrary(tmap)\ntmap_mode(\"plot\")\nmay2021 = jenks_plot(vaccination_rate, \"2022-05-01\")\njun2021 = jenks_plot(vaccination_rate, \"2022-06-01\")\ntmap_arrange(may2021, jun2021, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n5.2.1 View highest vaccination rate\nCheck for darkest sub-district in early stages\n\nYr 2021Yr 2022\n\n\n\nvaccination_rate$Village[which.max(vaccination_rate$`2021-07-01`)]\n\n[1] \"KELAPA GADING TIMUR\"\n\n\n\nvaccination_rate$Village[which.max(vaccination_rate$`2021-08-01`)]\n\n[1] \"KAMAL MUARA\"\n\n\n\nvaccination_rate$Village[which.max(vaccination_rate$`2021-09-01`)]\n\n[1] \"KAMAL MUARA\"\n\n\n\nvaccination_rate$Village[which.max(vaccination_rate$`2021-10-01`)]\n\n[1] \"ROA MALAKA\"\n\n\n\nvaccination_rate$Village[which.max(vaccination_rate$`2021-11-01`)]\n\n[1] \"GLODOK\"\n\n\n\nvaccination_rate$Village[which.max(vaccination_rate$`2021-12-01`)]\n\n[1] \"GLODOK\"\n\n\n\n\nTo check for darkest sub-district in the later stages\n\nvaccination_rate$Village[which.max(vaccination_rate$`2022-01-01`)]\n\n[1] \"GLODOK\"\n\n\n\nvaccination_rate$Village[which.max(vaccination_rate$`2022-06-01`)]\n\n[1] \"GLODOK\"\n\n\n\n\n\n\n\n5.2.2 Observations from Jenks Choropleth Map\nNote: The ranges will slowly grow larger over time with greater influx of cases. Some observations made from these maps:\n\n(July 2021 to Aug 2021) - there is a visible increase of vaccination rate like 2 times increase, referencing to the legend. As shown above, the highest darkest shade is in KELAPA GADING TIMUR where it is likely that more people are willing to take the vaccination.\n(Nov 2021 to Dec 2021) - the increase of vaccination rate starts to slow down slightly but still increasing. There is a noticeable darkening of gradient across majority of the map as we transition from Oct 2021 to Nov 2021, the increase is noticably significant.\n(Jan 2022 to Mar 2022) - from march 2022, the rate of vaccination rate increase even lesser which is probably due to large populations already vaccinated and hence only the minority still going for vaccination.\nThere are signs of cluster around the South region area where certain areas still remain light shade gradient, which might due to the missing sub-district vaccination data."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#computing-local-gi-statistics",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#computing-local-gi-statistics",
    "title": "Take-Home_Ex02",
    "section": "6.1 Computing local Gi* statistics",
    "text": "6.1 Computing local Gi* statistics\n\nwm_idw <- vaccination_rate %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n\nYr2021Yr2022\n\n\n\n6.1.0.1 July 2021\n\n\nShow the code\nHCSA_jul2021 <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    wm_idw$`2021-07-01`, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n\ntmap_mode(\"plot\")\nmap1 <- tm_shape(HCSA_jul2021) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Vaccination Rate\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(HCSA_jul2021) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\n\n\n\n\n\n\n6.1.0.2 Aug 2021\n\n\nShow the code\nHCSA_aug2021 <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    wm_idw$`2021-08-01`, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n\ntmap_mode(\"plot\")\nmap3 <- tm_shape(HCSA_aug2021) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Vaccination Rate\",\n            main.title.size = 0.8)\n\nmap4 <- tm_shape(HCSA_aug2021) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map3, map4, ncol = 2)\n\n\n\n\n\n\n\n6.1.0.3 Sept 2021\n\n\nShow the code\nHCSA_sept2021 <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    wm_idw$`2021-09-01`, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n\ntmap_mode(\"plot\")\nmap5 <- tm_shape(HCSA_sept2021) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Vaccination Rate\",\n            main.title.size = 0.8)\n\nmap6 <- tm_shape(HCSA_sept2021) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map5, map6, ncol = 2)\n\n\n\n\n\n\n\n6.1.0.4 Oct 2021\n\n\nShow the code\nHCSA_oct2021 <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    wm_idw$`2021-10-01`, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n\ntmap_mode(\"plot\")\nmap7 <- tm_shape(HCSA_oct2021) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Vaccination Rate\",\n            main.title.size = 0.8)\n\nmap8 <- tm_shape(HCSA_oct2021) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map7, map8, ncol = 2)\n\n\n\n\n\n\n\n6.1.0.5 Nov 2021\n\n\nShow the code\nHCSA_nov2021 <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    wm_idw$`2021-11-01`, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n\ntmap_mode(\"plot\")\nmap9 <- tm_shape(HCSA_nov2021) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Vaccination Rate\",\n            main.title.size = 0.8)\n\nmap10 <- tm_shape(HCSA_nov2021) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map9, map10, ncol = 2)\n\n\n\n\n\n\n\n6.1.0.6 Dec 2021\n\n\nShow the code\nHCSA_dec2021 <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    wm_idw$`2021-12-01`, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n\ntmap_mode(\"plot\")\nmap11 <- tm_shape(HCSA_dec2021) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Vaccination Rate\",\n            main.title.size = 0.8)\n\nmap12 <- tm_shape(HCSA_dec2021) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map11, map12, ncol = 2)\n\n\n\n\n\n\n\n\n\n6.1.0.7 Jan 2022\n\n\nShow the code\nHCSA_jan2022 <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    wm_idw$`2022-01-01`, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n\ntmap_mode(\"plot\")\nmap13 <- tm_shape(HCSA_jan2022) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Vaccination Rate\",\n            main.title.size = 0.8)\n\nmap14 <- tm_shape(HCSA_jan2022) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map13, map14, ncol = 2)\n\n\n\n\n\n\n\n6.1.0.8 Feb 2022\n\n\nShow the code\nHCSA_feb2022 <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    wm_idw$`2022-02-01`, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n\ntmap_mode(\"plot\")\nmap15 <- tm_shape(HCSA_feb2022) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Vaccination Rate\",\n            main.title.size = 0.8)\n\nmap16 <- tm_shape(HCSA_feb2022) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map15, map16, ncol = 2)\n\n\n\n\n\n\n\n6.1.0.9 Mar 2022\n\n\nShow the code\nHCSA_mar2022 <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    wm_idw$`2022-03-02`, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n\ntmap_mode(\"plot\")\nmap17 <- tm_shape(HCSA_mar2022) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Vaccination Rate\",\n            main.title.size = 0.8)\n\nmap18 <- tm_shape(HCSA_mar2022) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map17, map18, ncol = 2)\n\n\n\n\n\n\n\n6.1.0.10 Apr 2022\n\n\nShow the code\nHCSA_apr2022 <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    wm_idw$`2022-04-01`, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n\ntmap_mode(\"plot\")\nmap19 <- tm_shape(HCSA_apr2022) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Vaccination Rate\",\n            main.title.size = 0.8)\n\nmap20 <- tm_shape(HCSA_apr2022) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map19, map20, ncol = 2)\n\n\n\n\n\n\n\n6.1.0.11 May & June 2022\n\n\nShow the code\nHCSA_may2022 <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    wm_idw$`2022-05-01`, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n\ntmap_mode(\"plot\")\nmap21 <- tm_shape(HCSA_may2022) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Vaccination Rate\",\n            main.title.size = 0.8)\n\nmap22 <- tm_shape(HCSA_may2022) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map21, map22, ncol = 2)\n\n\n\n\n\n\n\n6.1.0.12 June 2022\n\n\nShow the code\nHCSA_jun2022 <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    wm_idw$`2022-06-01`, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n\ntmap_mode(\"plot\")\nmap23 <- tm_shape(HCSA_jun2022) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Vaccination Rate (Jun2022)\",\n            main.title.size = 0.8)\n\nmap24 <- tm_shape(HCSA_jun2022) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi* (Jun2022)\",\n            main.title.size = 0.8)\n\ntmap_arrange(map23, map24, ncol = 2)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#observations",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#observations",
    "title": "Take-Home_Ex02",
    "section": "6.2 Observations",
    "text": "6.2 Observations\n\nIn (Jul 2021 to Aug 2021), there are several subtle cold spot clusters in the central and south region as observed from the gi* maps. And, on the p-value maps, we can easily identified the hot spots clusters and cold spots clusters by comparing the significant clusters in both maps.\nIn (Sept 2021), the clusters starts to move to other parts including the far end of Jakarta towards the North-West area and South-East area.\nIn (Dec 2021 to June 2022), clusters in the south region is still very significant. Old clusters becomes insignificant and new clusters around the north-east region starts to arise. While the central cluster still remains as a prominent hot spot of cluster."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#creating-a-time-series-cube",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#creating-a-time-series-cube",
    "title": "Take-Home_Ex02",
    "section": "7.1 Creating a Time Series Cube",
    "text": "7.1 Creating a Time Series Cube\n\nEncountered an error ! Number of rows does not equal n time-periods x n locations [1] FALSE, have tried to re-create another df but unsure how to go abt with it hence only have the code out.\n\n\ntime_st <- spacetime(vac_rate, jkt,\n                      .loc_col = \"Sub-District\",\n                      .time_col = \"Date\")\nis_spacetime_cube(time_st)\n\n[1] FALSE"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#computing-gi",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#computing-gi",
    "title": "Take-Home_Ex02",
    "section": "7.2 Computing Gi*",
    "text": "7.2 Computing Gi*\n\n7.2.1 Deriving the spatial weights\n\n# vac_nb <- time_st %>%\n#   activate(\"geometry\") %>%\n#   mutate(nb = include_self(st_contiguity(geometry)),\n#          wt = st_inverse_distance(nb, geometry,\n#                                   scale = 1,\n#                                   alpha = 1),\n#          .before = 1) %>%\n#   set_nbs(\"nb\") %>%\n#   set_wts(\"wt\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#computing-gi-1",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#computing-gi-1",
    "title": "Take-Home_Ex02",
    "section": "7.3 Computing Gi*",
    "text": "7.3 Computing Gi*\n\n# gi_stars <- vac_nb %>% \n#   group_by(Date) %>% \n#   mutate(gi_star = local_gstar_perm(\n#     vaccination_rate, nb, wt)) %>% \n#   tidyr::unnest(gi_star)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "title": "Take-Home_Ex03",
    "section": "",
    "text": "The price of housing is affected by many factors such as the general economy of a country or inflation rate. These factors can be further divided to structural and locational factors. Structural factors are variables related to the property themselves such as the size, fitting, and tenure of the property. Locational factors are variables related to the neighbourhood of the properties such as proximity to childcare centre, public transport service and shopping centre.\nConventional, housing resale prices predictive models were built by using Ordinary Least Square (OLS) method. However, this method failed to take into consideration that spatial autocorrelation and spatial heterogeneity exist in geographic data sets such as housing transactions. With the existence of spatial autocorrelation, the OLS estimation of predictive housing resale pricing models could lead to biased, inconsistent, or inefficient results (Anselin 1998). In view of this limitation, Geographical Weighted Models were introduced for calibrating predictive model for housing resale prices.\n\n\n\n\n\nType\nName\nFormat\nSource\n\n\n\n\nAspatial\nHDB Flat Resale Prices\ncsv\ndata.gov\n\n\nGeospatial\nMaster Plan 2014 Subzone Boundary\nshp\ndata.gov\n\n\nLocational (w geo-coord)\nEldercare services\nshp\ndata.gov\n\n\nLocational (w geo-coord)\nPark facilities\ngeojson\ndata.gov\n\n\nLocational (w geo-coord)\nHawker centres\ngeojson\ndata.gov\n\n\nLocational (w geo-coord)\nSupermarkets\ngeojson\ndata.gov\n\n\nLocational (w geo-coord)\nBus Stops\nshp\nDatamall.lta.gov.sg\n\n\nLocational (w geo-coord)\nMRT\nshp\nDatamall.lta.gov.sg\n\n\nLocational (w geo-coord)\nChildcare\ncsv\ndataportal.asia\n\n\nLocational (no geo-coord)\nKindergartens\ncsv\ndataportal.asia\n\n\nLocational (no geo-coord)\nPrimary school\ncsv\ndata.gov\n\n\nLocational (no geo-coord)\nCBD\n\nGoogle search\n\n\nLocational (no geo-coord)\nShopping Malls\nlist\nWikipedia\n\n\nLocational (no geo-coord)\nGood primary school\nlist\nLocal Salary Forum\n\n\n\n\n\n\n[References taken from Take-home Exercise 3 by NOR AISYAH BINTE AJIT.]\n[References taken from Take-Home Exercise 3: Hedonic Pricing Models for Resale Prices of Public Housing in Singapore by MEGAN SIM TZE YEN.]\n\nsf: used for importing, managing, and processing geospatial data\ntidyverse: a collection of packages for data science tasks\ntmap: used for creating thematic maps, such as choropleth and bubble maps\nspdep: used to create spatial weights matrix objects, global and local spatial autocorrelation statistics and related calculations (e.g. spatially lag attributes)\nhttr: used to make API calls, such as a GET request\njsonlite: a JSON parser that can convert from JSON to the appropraite R data types\nrvest: A new package that makes it easy to scrape (or harvest) data from html web pages, inspired by libraries like beautiful soup.\n\nIn this analysis, it will be used to scrape data for Shopping malls and Good primary schools\n\n\nTidyverse packages:\n\nreadr for importing delimited files (.csv)\nreadxl for importing Excel worksheets (.xlsx) - note that it has to be loaded explicitly as it is not a core tidyverse package\ntidyr for manipulating and tidying data\ndplyr for wrangling and transforming data\nggplot2 for visualising data\n\nBuilding + visualising hedonic pricing models:\n\nolsrr: used for building least squares regression models\ncoorplot + ggpubr: both are used for multivariate data visualisation & analysis\nGWmodel: provides a collection of localised spatial statistical methods, such as summary statistics, principal components analysis, discriminant analysis and various forms of GW regression\n\nVisualisations:\n\ndevtools: used for installing any R packages which is not available in RCRAN. In this exercise, I will be installing using devtools to install the package xaringanExtra which is still under development stage.\nkableExtra: an extension of kable, used for table customisation\nplotly: used for creating interactive web graphics, and can be used in conjunction with ggplot2 with the ggplotly() function\nggthemes: an extension of ggplot2, with more advanced themes for plotting\n\n\n\n\n\npacman::p_load(sf, tidyverse, tmap, httr, rvest, spdep, readxl, jsonlite, olsrr, corrplot, ggpubr, GWmodel, kableExtra, plotly, ggthemes, broom, devtools, SpatialML, rsample, Metrics, ranger)\n\n\n#devtools::install_github(\"gadenbuie/xaringanExtra\")\nlibrary(xaringanExtra)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#filter-the-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#filter-the-data",
    "title": "Take-Home_Ex03",
    "section": "2.1 Filter the data",
    "text": "2.1 Filter the data\nThe study should focus on either three-room, four-room or five-room flat and transaction period should be from 1st January 2021 to 31st December 2022. The test data should be January and February 2023 resale prices.\nFor this project, I will be going with 4 room flats.\n\nCodeGlimpseUnique monthUnique flat_type\n\n\n\nrs_subset <-  filter(resale,flat_type == \"4 ROOM\") %>%\n                    filter(month >= \"2021-01\" & month <= \"2023-02\")\n\n\n\n\nglimpse(rs_subset)\n\nRows: 25,503\nColumns: 11\n$ month               <chr> \"2021-01\", \"2021-01\", \"2021-01\", \"2021-01\", \"2021-…\n$ town                <chr> \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO …\n$ flat_type           <chr> \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", …\n$ block               <chr> \"547\", \"414\", \"509\", \"467\", \"571\", \"134\", \"204\", \"…\n$ street_name         <chr> \"ANG MO KIO AVE 10\", \"ANG MO KIO AVE 10\", \"ANG MO …\n$ storey_range        <chr> \"04 TO 06\", \"01 TO 03\", \"01 TO 03\", \"07 TO 09\", \"0…\n$ floor_area_sqm      <dbl> 92, 92, 91, 92, 92, 98, 92, 92, 92, 92, 92, 109, 9…\n$ flat_model          <chr> \"New Generation\", \"New Generation\", \"New Generatio…\n$ lease_commence_date <dbl> 1981, 1979, 1980, 1979, 1979, 1978, 1977, 1978, 19…\n$ remaining_lease     <chr> \"59 years\", \"57 years 09 months\", \"58 years 06 mon…\n$ resale_price        <dbl> 370000, 375000, 380000, 385000, 410000, 410000, 41…\n\n\n\n\n\nunique(rs_subset$month)\n\n [1] \"2021-01\" \"2021-02\" \"2021-03\" \"2021-04\" \"2021-05\" \"2021-06\" \"2021-07\"\n [8] \"2021-08\" \"2021-09\" \"2021-10\" \"2021-11\" \"2021-12\" \"2022-01\" \"2022-02\"\n[15] \"2022-03\" \"2022-04\" \"2022-05\" \"2022-06\" \"2022-07\" \"2022-08\" \"2022-09\"\n[22] \"2022-10\" \"2022-11\" \"2022-12\" \"2023-01\" \"2023-02\"\n\n\n\n\n\nunique(rs_subset$flat_type)\n\n[1] \"4 ROOM\""
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#transform-resale-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#transform-resale-data",
    "title": "Take-Home_Ex03",
    "section": "2.2 Transform resale data",
    "text": "2.2 Transform resale data\nAfter checking the correctly filtered out data, next is transforming the data,\n\n2.2.1 New columns\n\nCodeHead\n\n\n\nrs_transform <- rs_subset %>%\n  mutate(rs_subset, address = paste(block,street_name)) %>%\n  mutate(rs_subset, remaining_lease_yr = as.integer(str_sub(remaining_lease, 0, 2))) %>%\n  mutate(rs_subset, remaining_lease_mth = as.integer(str_sub(remaining_lease, 9, 11)))\n\n\n\n\nhead(rs_transform)\n\n# A tibble: 6 × 14\n  month   town     flat_…¹ block stree…² store…³ floor…⁴ flat_…⁵ lease…⁶ remai…⁷\n  <chr>   <chr>    <chr>   <chr> <chr>   <chr>     <dbl> <chr>     <dbl> <chr>  \n1 2021-01 ANG MO … 4 ROOM  547   ANG MO… 04 TO …      92 New Ge…    1981 59 yea…\n2 2021-01 ANG MO … 4 ROOM  414   ANG MO… 01 TO …      92 New Ge…    1979 57 yea…\n3 2021-01 ANG MO … 4 ROOM  509   ANG MO… 01 TO …      91 New Ge…    1980 58 yea…\n4 2021-01 ANG MO … 4 ROOM  467   ANG MO… 07 TO …      92 New Ge…    1979 57 yea…\n5 2021-01 ANG MO … 4 ROOM  571   ANG MO… 07 TO …      92 New Ge…    1979 57 yea…\n6 2021-01 ANG MO … 4 ROOM  134   ANG MO… 07 TO …      98 New Ge…    1978 56 yea…\n# … with 4 more variables: resale_price <dbl>, address <chr>,\n#   remaining_lease_yr <int>, remaining_lease_mth <int>, and abbreviated\n#   variable names ¹​flat_type, ²​street_name, ³​storey_range, ⁴​floor_area_sqm,\n#   ⁵​flat_model, ⁶​lease_commence_date, ⁷​remaining_lease\n\n\n\n\n\n\n\n2.2.2 Add up the remaining lease in months\n\nReplace NA values in remaining_lease_mth with the value 0 using is.na() function\nMultiply remaining_lease_yr by 12 to convert it to months unit\nCreate remaining_lease_mths column using mutate function of dplyr package which contains the summation of the remaining_lease_yr and remaining_lease_mths using rowSums() function of base R package\nSelect required columns for analysis\n\n\nCodeHead\n\n\n\nrs_transform$remaining_lease_mth[is.na(rs_transform$remaining_lease_mth)] <- 0\nrs_transform$remaining_lease_yr <- rs_transform$remaining_lease_yr * 12\nrs_transform <- rs_transform %>% \n  mutate(rs_transform, remaining_lease_mths = rowSums(rs_transform[, c(\"remaining_lease_yr\", \"remaining_lease_mth\")])) %>%\n  select(month, town, address, block, street_name, flat_type, storey_range, floor_area_sqm, flat_model, \n         lease_commence_date, remaining_lease_mths, resale_price)\n\n\n\n\nhead(rs_transform)\n\n# A tibble: 6 × 12\n  month   town     address block stree…¹ flat_…² store…³ floor…⁴ flat_…⁵ lease…⁶\n  <chr>   <chr>    <chr>   <chr> <chr>   <chr>   <chr>     <dbl> <chr>     <dbl>\n1 2021-01 ANG MO … 547 AN… 547   ANG MO… 4 ROOM  04 TO …      92 New Ge…    1981\n2 2021-01 ANG MO … 414 AN… 414   ANG MO… 4 ROOM  01 TO …      92 New Ge…    1979\n3 2021-01 ANG MO … 509 AN… 509   ANG MO… 4 ROOM  01 TO …      91 New Ge…    1980\n4 2021-01 ANG MO … 467 AN… 467   ANG MO… 4 ROOM  07 TO …      92 New Ge…    1979\n5 2021-01 ANG MO … 571 AN… 571   ANG MO… 4 ROOM  07 TO …      92 New Ge…    1979\n6 2021-01 ANG MO … 134 AN… 134   ANG MO… 4 ROOM  07 TO …      98 New Ge…    1978\n# … with 2 more variables: remaining_lease_mths <dbl>, resale_price <dbl>, and\n#   abbreviated variable names ¹​street_name, ²​flat_type, ³​storey_range,\n#   ⁴​floor_area_sqm, ⁵​flat_model, ⁶​lease_commence_date"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#retrieve-postal-codes-and-coordinates-of-addresses",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#retrieve-postal-codes-and-coordinates-of-addresses",
    "title": "Take-Home_Ex03",
    "section": "2.3 Retrieve Postal Codes and Coordinates of Addresses",
    "text": "2.3 Retrieve Postal Codes and Coordinates of Addresses\nThis section aims to get the postal codes and coordinates which is needed for the locational factors without geographical coordinates.\n\n2.3.1 Create a list storing unique addresses\n\nUse unique() function to extract the unique addresses then use sort() function to sort the unique vector.\n\n\n#|eval: false\nadd_list <- sort(unique(rs_transform$address))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#create-function-to-retrieve-coordinates-from-onemap.sg-api",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#create-function-to-retrieve-coordinates-from-onemap.sg-api",
    "title": "Take-Home_Ex03",
    "section": "2.4 Create function to retrieve coordinates from OneMap.Sg API",
    "text": "2.4 Create function to retrieve coordinates from OneMap.Sg API\n\nget_coords <- function(add_list){\n  \n  # Create a data frame to store all retrieved coordinates\n  postal_coords <- data.frame()\n    \n  for (i in add_list){\n    #print(i)\n\n    r <- GET('https://developers.onemap.sg/commonapi/search?',\n           query=list(searchVal=i,\n                     returnGeom='Y',\n                     getAddrDetails='Y'))\n    data <- fromJSON(rawToChar(r$content))\n    found <- data$found\n    res <- data$results\n    \n    # Create a new data frame for each address\n    new_row <- data.frame()\n    \n    # If single result, append \n    if (found == 1){\n      postal <- res$POSTAL \n      lat <- res$LATITUDE\n      lng <- res$LONGITUDE\n      new_row <- data.frame(address= i, postal = postal, latitude = lat, longitude = lng)\n    }\n    \n    # If multiple results, drop NIL and append top 1\n    else if (found > 1){\n      # Remove those with NIL as postal\n      res_sub <- res[res$POSTAL != \"NIL\", ]\n      \n      # Set as NA first if no Postal\n      if (nrow(res_sub) == 0) {\n          new_row <- data.frame(address= i, postal = NA, latitude = NA, longitude = NA)\n      }\n      \n      else{\n        top1 <- head(res_sub, n = 1)\n        postal <- top1$POSTAL \n        lat <- top1$LATITUDE\n        lng <- top1$LONGITUDE\n        new_row <- data.frame(address= i, postal = postal, latitude = lat, longitude = lng)\n      }\n    }\n\n    else {\n      new_row <- data.frame(address= i, postal = NA, latitude = NA, longitude = NA)\n    }\n    \n    # Add the row\n    postal_coords <- rbind(postal_coords, new_row)\n  }\n  return(postal_coords)\n}\n\n\n2.4.1 Call get_coords function to retrieve resale coordinates\n\ncoords <- get_coords(add_list)\n\n\n\n2.4.2 Inspect results\n\ncoords[(is.na(coords$postal) | is.na(coords$latitude) | is.na(coords$longitude) | coords$postal==\"NIL\"), ]\n\nIt seems like there is 1 address that does not contain geographic coordinates. After further investigation, I will be input in\n\ncoords$postal[coords$postal==\"NIL\"] <- \"680215\"\n\n\ncoords[(is.na(coords$postal) | is.na(coords$latitude) | is.na(coords$longitude) | coords$postal==\"NIL\"), ]\n\ngreat, no more NIL postal codes.\n\n\n2.4.3 Combine resale and coordinates data\nNow, we need to combine the data\n\nCodeHead\n\n\n\nrs_coords <- left_join(rs_transform, coords, by = c('address' = 'address'))\n\n\n\n\nhead(rs_coords)\n\n\n\n\n\n\n2.4.4 Handle invalid addresses\nBy replacing sub string in invalid addresses in the address and extract rows with addresses containing SAINT GEORGE’S\n\nCodeGlimpse\n\n\n\nrs_coords$address <- sub(\"ST. GEORGE'S\", \"SAINT GEORGE'S\", rs_coords$address)\nrs_invalid <- rs_coords[grepl(\"SAINT GEORGE'S\", rs_coords$address), ]\n\n\n\n\nglimpse(rs_invalid)\n\n\n\n\nThere are 32 rows that contains SAINT GEORGE’S as street name but has a substring replaced in the address.\n\n2.4.4.1 Create unique list of addresses again\n\nadd_list <- sort(unique(rs_invalid$address))\n\n\n\n2.4.4.2 Call get_coords to retrieve resale coordinates again\n\nrs_invalid_coords <- get_coords(add_list)\n\n\n\n2.4.4.3 Inspect results again\n\nrs_invalid_coords[(is.na(rs_invalid_coords$postal) | is.na(rs_invalid_coords$latitude) | is.na(rs_invalid_coords$longitude)), ]\n\nSo the results shows no invalid coordinates now.\n\n\n2.4.4.4 Combine rs_invalid_coords with rs_coords data\n\nCodeHead\n\n\n\nrs_coords_final <- rs_coords %>%\n  left_join(rs_invalid_coords, by = c(\"address\")) %>%\n  mutate(latitude = ifelse(is.na(postal.x), postal.y, postal.x)) %>%\n  mutate(latitude = ifelse(is.na(latitude.x), latitude.y, latitude.x)) %>%\n  mutate(longitude = ifelse(is.na(longitude.x), longitude.y, longitude.x)) %>%\n  select(-c(postal.x, latitude.x, longitude.x, postal.y, latitude.y, longitude.y))\n\n\n\n\nhead(rs_coords_final)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#write-file-to-rds",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#write-file-to-rds",
    "title": "Take-Home_Ex03",
    "section": "2.5 Write file to rds",
    "text": "2.5 Write file to rds\n\nrs_coords_rds <- write_rds(rs_coords_final, \"data/aspatial/rds/rs_coords.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#read-rs_coords-rds-file",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#read-rs_coords-rds-file",
    "title": "Take-Home_Ex03",
    "section": "2.6 Read rs_coords RDS file",
    "text": "2.6 Read rs_coords RDS file\n\nCodeGlimpse\n\n\n\nrs_coords <- read_rds(\"data/aspatial/rds/rs_coords.rds\")\n\n\n\n\nglimpse(rs_coords)\n\nRows: 25,503\nColumns: 14\n$ month                <chr> \"2021-01\", \"2021-01\", \"2021-01\", \"2021-01\", \"2021…\n$ town                 <chr> \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO…\n$ address              <chr> \"547 ANG MO KIO AVE 10\", \"414 ANG MO KIO AVE 10\",…\n$ block                <chr> \"547\", \"414\", \"509\", \"467\", \"571\", \"134\", \"204\", …\n$ street_name          <chr> \"ANG MO KIO AVE 10\", \"ANG MO KIO AVE 10\", \"ANG MO…\n$ flat_type            <chr> \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", \"4 ROOM\",…\n$ storey_range         <chr> \"04 TO 06\", \"01 TO 03\", \"01 TO 03\", \"07 TO 09\", \"…\n$ floor_area_sqm       <dbl> 92, 92, 91, 92, 92, 98, 92, 92, 92, 92, 92, 109, …\n$ flat_model           <chr> \"New Generation\", \"New Generation\", \"New Generati…\n$ lease_commence_date  <dbl> 1981, 1979, 1980, 1979, 1979, 1978, 1977, 1978, 1…\n$ remaining_lease_mths <dbl> 708, 693, 702, 695, 689, 681, 661, 682, 692, 692,…\n$ resale_price         <dbl> 370000, 375000, 380000, 385000, 410000, 410000, 4…\n$ latitude             <chr> \"1.37420951743562\", \"1.36390466431674\", \"1.374000…\n$ longitude            <chr> \"103.858209667888\", \"103.853913839503\", \"103.8501…\n\n\n\n\n\n\n2.6.1 Assign and Transform CRS and Check\n\nCodest_crs\n\n\n\nrs_coords_sf <- st_as_sf(rs_coords,\n                    coords = c(\"longitude\", \n                               \"latitude\"),\n                    crs=4326) %>%\n  st_transform(crs = 3414)\n\n\n\n\nst_crs(rs_coords_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\n\n\n2.6.2 Check for invalid geometries\n\nlength(which(st_is_valid(rs_coords_sf) == FALSE))\n\n[1] 0\n\n\nNo invalid geometries\n\n\n2.6.3 Plot hdb resale points\n\ntmap_mode(\"view\")\ntm_shape(rs_coords_sf)+\n  tm_dots(col=\"blue\", size = 0.02)\n\n\n\n\n\n  tm_view(set.zoom.limits = c(6,8))\n\n$tm_layout\n$tm_layout$set.zoom.limits\n[1] 6 8\n\n$tm_layout$style\n[1] NA\n\n\nattr(,\"class\")\n[1] \"tm\"\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#convert-to-spatialpointdataframe",
    "href": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#convert-to-spatialpointdataframe",
    "title": "In-class_Ex09",
    "section": "3.1 convert to SpatialPointDataFrame",
    "text": "3.1 convert to SpatialPointDataFrame\n\ntrain_data_sp <- as_Spatial(train_data)\ntrain_data_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 10335 \nextent      : 11597.31, 42623.63, 28217.39, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 17\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,          PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       218000,             74,            1,                  555, 0.999393538715878, 1.98943787433087e-08, 0.0333358643817954, 0.0220407324774434, 0.0441643212802781, 0.0652540365486641,                0, 6.20621206270077e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1186888,            133,           17,                 1164,  19.6500691667807,     3.30163731686804,   2.86763031236184,   2.13060636038504,   2.41313695915468,   10.6223726149914, 2.27100643784442,    0.808332738794272,     1.57131703651196,                        7,                    20, ..."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#prepare-coordinates-data",
    "href": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#prepare-coordinates-data",
    "title": "In-class_Ex09",
    "section": "3.2 prepare coordinates data",
    "text": "3.2 prepare coordinates data\n\ncoord <- st_coordinates(mdata)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n\n\ncoords_train <- write_rds(coords_train, \"data/aspatial/coords_train.rds\")\ncoords_test <- write_rds(coords_test, \"data/aspatial/coords_test.rds\")\n\n\ntrain_data <- train_data |>\n  st_drop_geometry()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#prepare-test-data",
    "href": "In-class_Ex/In-class_Ex09/In-class_Ex09.html#prepare-test-data",
    "title": "In-class_Ex09",
    "section": "5.1 prepare test data",
    "text": "5.1 prepare test data\n\ntest_data <- cbind(test_data, coords_test) |>\n  st_drop_geometry()\n\n\n# gwRF_adaptive <-predict.grf(gwRF_adaptive,\n#                             test_data,\n#                             x.var.name = \"X\",\n#                             y.var.name = \"Y\",\n#                             local.w = 1,\n#                             global.w = 0)\n\n\n# gwRF_pred_df <- as.data.frame(gwRF_adaptive)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#read-and-check-crs-of-locational-factors",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#read-and-check-crs-of-locational-factors",
    "title": "Take-Home_Ex03",
    "section": "3.1 Read and check CRS of Locational factors",
    "text": "3.1 Read and check CRS of Locational factors\n\nelder_sfparks_sfhawker_sfsupermkt_sfchildcare_sfkind_sfmrt_sfbus_sf\n\n\n\nelder_sf <- st_read(dsn = \"data/geospatial/eldercare-services\", layer = \"ELDERCARE\")\n\nReading layer `ELDERCARE' from data source \n  `C:\\kt-x\\is415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial\\eldercare-services' \n  using driver `ESRI Shapefile'\nSimple feature collection with 133 features and 18 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21\n\n\n\n3.1.0.0.1 st_crs\n\nst_crs(elder_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\n\n\n\nparks_sf <- st_read(\"data/geospatial/park-facilities/park-facilities-geojson.geojson\") \n\nReading layer `park-facilities-geojson' from data source \n  `C:\\kt-x\\is415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial\\park-facilities\\park-facilities-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 2169 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.693 ymin: 1.217137 xmax: 104.0059 ymax: 1.463469\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\n3.1.0.0.2 st_crs\n\nst_crs(parks_sf)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\n\n\n\nhawker_sf <- st_read(\"data/geospatial/hawker-centres/hawker-centres-geojson.geojson\") \n\nReading layer `hawker-centres-geojson' from data source \n  `C:\\kt-x\\is415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial\\hawker-centres\\hawker-centres-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 125 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6974 ymin: 1.272716 xmax: 103.9882 ymax: 1.449217\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\n3.1.0.0.3 st_crs\n\nst_crs(hawker_sf)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\n\n\n\nsupermkt_sf <- st_read(\"data/geospatial/supermarkets/supermarkets-geojson.geojson\")\n\nReading layer `supermarkets-geojson' from data source \n  `C:\\kt-x\\is415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial\\supermarkets\\supermarkets-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 526 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6258 ymin: 1.24715 xmax: 104.0036 ymax: 1.461526\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\n3.1.0.0.4 st_crs\n\nst_crs(supermkt_sf)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\n\n\n\nchildcare_sf <- st_read(\"data/geospatial/childcare/childcare.geojson\")\n\nReading layer `childcare' from data source \n  `C:\\kt-x\\is415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial\\childcare\\childcare.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\n3.1.0.0.5 st_crs\n\nst_crs(childcare_sf)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\n\n\n\nkind_sf <- st_read(\"data/geospatial/kindergartens/preschools-location.geojson\")\n\nReading layer `preschools-location' from data source \n  `C:\\kt-x\\is415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial\\kindergartens\\preschools-location.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\n3.1.0.0.6 st_crs\n\nst_crs(kind_sf)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\n\n\n\nmrtlrt_sf <- st_read(dsn = \"data/geospatial/TrainStation\", layer=\"Train_Station_Exit_Layer\")\n\nReading layer `Train_Station_Exit_Layer' from data source \n  `C:\\kt-x\\is415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial\\TrainStation' \n  using driver `ESRI Shapefile'\nSimple feature collection with 562 features and 2 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6134.086 ymin: 27499.7 xmax: 45356.36 ymax: 47865.92\nProjected CRS: SVY21\n\n\n\n3.1.0.0.7 st_crs\n\nst_crs(mrtlrt_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\n\n\n\nbus_sf <- st_read(dsn = \"data/geospatial/BusStopLocation\", layer=\"BusStop\")\n\nReading layer `BusStop' from data source \n  `C:\\kt-x\\is415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial\\BusStopLocation' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5159 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\n3.1.0.0.8 st_crs\n\nst_crs(bus_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\n\n\n\n\n3.1.1 Assign EPSG code to sf dataframes and check again\n\nCodest_crs\n\n\n\nelder_sf <- st_set_crs(elder_sf, 3414)\nmrtlrt_sf <- st_set_crs(mrtlrt_sf, 3414)\nbus_sf <- st_set_crs(bus_sf, 3414)\n\nhawker_sf <- hawker_sf %>%\n  st_transform(crs = 3414)\nparks_sf <- parks_sf %>%\n  st_transform(crs = 3414)\nsupermkt_sf <- supermkt_sf %>%\n  st_transform(crs = 3414)\nchildcare_sf <- childcare_sf %>%\n  st_transform(crs = 3414)\nkind_sf <- kind_sf %>%\n  st_transform(crs = 3414)\n\n\n\n\nst_crs(elder_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(mrtlrt_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(bus_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(hawker_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(parks_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(supermkt_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(childcare_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(kind_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#check-for-invalid-geometries-1",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#check-for-invalid-geometries-1",
    "title": "Take-Home_Ex03",
    "section": "3.2 Check for invalid geometries",
    "text": "3.2 Check for invalid geometries\n\nlength(which(st_is_valid(elder_sf) == FALSE))\n\n[1] 0\n\nlength(which(st_is_valid(mrtlrt_sf) == FALSE))\n\n[1] 0\n\nlength(which(st_is_valid(hawker_sf) == FALSE))\n\n[1] 0\n\nlength(which(st_is_valid(parks_sf) == FALSE))\n\n[1] 0\n\nlength(which(st_is_valid(supermkt_sf) == FALSE))\n\n[1] 0\n\nlength(which(st_is_valid(childcare_sf) == FALSE))\n\n[1] 0\n\nlength(which(st_is_valid(kind_sf) == FALSE))\n\n[1] 0\n\nlength(which(st_is_valid(bus_sf) == FALSE))\n\n[1] 0\n\n\nNO invalid geometries."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calculate-proximity",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calculate-proximity",
    "title": "Take-Home_Ex03",
    "section": "3.3 Calculate Proximity",
    "text": "3.3 Calculate Proximity\n\nget_prox <- function(origin_df, dest_df, col_name){\n  \n  # creates a matrix of distances\n  dist_matrix <- st_distance(origin_df, dest_df)           \n  \n  # find the nearest location_factor and create new data frame\n  near <- origin_df %>% \n    mutate(PROX = apply(dist_matrix, 1, function(x) min(x)) / 1000) \n  \n  # rename column name according to input parameter\n  names(near)[names(near) == 'PROX'] <- col_name\n\n  # Return df\n  return(near)\n}\n\n\n3.3.0.1 CALL GET_PROX FUNCTION\n\nrs_coords_sf <- get_prox(rs_coords_sf, elder_sf, \"PROX_ELDERLYCARE\")\nrs_coords_sf <- get_prox(rs_coords_sf, mrtlrt_sf, \"PROX_MRT\")\nrs_coords_sf <- get_prox(rs_coords_sf, hawker_sf, \"PROX_HAWKER\")\nrs_coords_sf <- get_prox(rs_coords_sf, parks_sf, \"PROX_PARK\")\nrs_coords_sf <- get_prox(rs_coords_sf, supermkt_sf, \"PROX_SUPERMARKET\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#create-get_within-function-to-calculate-no.-of-factors-within-dist",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#create-get_within-function-to-calculate-no.-of-factors-within-dist",
    "title": "Take-Home_Ex03",
    "section": "3.4 Create get_within function to calculate no. of factors within dist",
    "text": "3.4 Create get_within function to calculate no. of factors within dist\n\nget_within <- function(origin_df, dest_df, threshold_dist, col_name){\n\n  # creates a matrix of distances\n  dist_matrix <- st_distance(origin_df, dest_df)\n\n  # count the number of location_factors within threshold_dist and create new data frame\n  wdist <- origin_df %>%\n    mutate(WITHIN_DT = apply(dist_matrix, 1, function(x) sum(x <= threshold_dist)))\n\n  # rename column name according to input parameter\n  names(wdist)[names(wdist) == 'WITHIN_DT'] <- col_name\n\n  # Return df\n  return(wdist)\n}\n\n\n3.4.0.1 CALL GET_WITHIN FUNCTION\nThe threshold will be set to 350m for locational factors such as, Kindergartens, Childcare centres and Bus stops.\n\n3.4.0.1.1 kindergarten\n\nCodeHead\n\n\n\nrs_coords_sf <- get_within(rs_coords_sf, kind_sf, 350, \"WITHIN_350M_KINDERGARTEN\")\n\n\n\n\nhead(rs_coords_sf)\n\n\n\n\n\n\n3.4.0.1.2 Childcare centres\n\nCodeHead\n\n\n\nrs_coords_sf <- get_within(rs_coords_sf, childcare_sf, 350, \"WITHIN_350M_CHILDCARE\")\n\n\n\n\nhead(rs_coords_sf)\n\n\n\n\n\n\n3.4.0.1.3 Bus stops\n\nCodeHead\n\n\n\nrs_coords_sf <- get_within(rs_coords_sf, bus_sf, 350, \"WITHIN_350M_BUS\")\n\n\n\n\nhead(rs_coords_sf)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#cbd",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#cbd",
    "title": "Take-Home_Ex03",
    "section": "4.1 CBD",
    "text": "4.1 CBD\naccording to google, the latitude and longitude of Downtown Core (aka CBD), are 1.287953 and 103.851784 respectively.\n\n4.1.0.1 STORE CBD COORDINATES IN DATAFRAME\n\nname <- c('CBD Area')\nlatitude= c(1.287953)\nlongitude= c(103.851784)\ncbd_coords <- data.frame(name, latitude, longitude)\n\n\n\n4.1.0.2 ASSIGN AND TRANSFORM CRS\nTo convert the data frame into sf object then, transform the coordinates of the sf object\n\ncodest_crs\n\n\n\ncbd_coords_sf <- st_as_sf(cbd_coords,\n                    coords = c(\"longitude\", \n                               \"latitude\"),\n                    crs=4326) |>\n  st_transform(crs = 3414)\n\n\n\n\nst_crs(cbd_coords_sf)\n\n\n\n\nThe coordinates for CBD area is in EPSG 3414 (SVY21) format is c(30055.05, 30040.83).\n\n\n4.1.0.3 CALL GET_PROX FUNCTION\nGet the proximity of HDB and CBD area.\n\nrs_coords_sf <- get_prox(rs_coords_sf, cbd_coords_sf, \"PROX_CBD\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#shopping-mall",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#shopping-mall",
    "title": "Take-Home_Ex03",
    "section": "4.2 Shopping mall",
    "text": "4.2 Shopping mall\nIn a nutshell, the following code chunk will perform 3 steps: - Read the Wikipedia html page containing the Shopping Malls in Singapore - Read the text portion (html_text()) of the Unordered - - List element selected by html_nodes() - Append it to the empty mall_list created #### EXTRACT SHOPPING MALLS FROM WIKIPEDIA\n\nCodest_crs\n\n\n\nurl <- \"https://en.wikipedia.org/wiki/List_of_shopping_malls_in_Singapore\"\nmalls_list <- list()\n\nfor (i in 2:7){\n  malls <- read_html(url) %>%\n    html_nodes(xpath = paste('//*[@id=\"mw-content-text\"]/div[1]/div[',as.character(i),']/ul/li',sep=\"\") ) %>%\n    html_text()\n  malls_list <- append(malls_list, malls)\n}\n\n\n\n\nst_crs(malls_list)\n\n\n\n\n\n4.2.0.1 CALL GET_COORDS FUNCTION\nTo retrieve coordinates of Shopping Malls and rename the address to mall_name for easier reference\n\nmalls_list_coords <- get_coords(malls_list) %>% \n  rename(\"mall_name\" = \"address\")\n\n\n\n4.2.0.2 REMOVE INVALID SHOPPING MALL NAME\n\nmalls_list_coords <- subset(malls_list_coords, mall_name!= \"Yew Tee Shopping Centre\")\n\n\n\n4.2.0.3 CORRECT INVALID MALL NAMES THAT CAN BE FOUND\n\ninvalid_malls<- subset(malls_list_coords, is.na(malls_list_coords$postal))\ninvalid_malls_list <- unique(invalid_malls$mall_name)\ncorrected_malls <- c(\"Clarke Quay\", \"City Gate\", \"Raffles Holland V\", \"Knightsbridge\", \"Mustafa Centre\", \"GR.ID\", \"Shaw House\",\n                     \"The Poiz Centre\", \"Velocity @ Novena Square\", \"Singapore Post Centre\", \"PLQ Mall\", \"KINEX\", \"The Grandstand\")\n\nfor (i in 1:length(invalid_malls_list)) {\n  malls_list_coords <- malls_list_coords %>% \n    mutate(mall_name = ifelse(as.character(mall_name) == invalid_malls_list[i], corrected_malls[i], as.character(mall_name)))\n}\n\n\n\n4.2.0.4 CREATE A LIST STORING UNIQUE MALL NAMES\n\nmalls_list <- sort(unique(malls_list_coords$mall_name))\n\n\n\n4.2.0.5 CALL GET_COORDS TO RETRIEVE COORDINATES OF SHOPPING MALLS AGAIN\n\nmalls_coords <- get_coords(malls_list)\n\n\n\n4.2.0.6 INSPECT RESULTS\n\nmalls_coords[(is.na(malls_coords$postal) | is.na(malls_coords$latitude) | is.na(malls_coords$longitude)), ]\n\n\n\n4.2.0.7 CONVERT DATA FRAME INTO SF OBJECT, ASSIGN AND TRANSFORM CRS\n\nmalls_sf <- st_as_sf(malls_coords,\n                    coords = c(\"longitude\", \n                               \"latitude\"),\n                    crs=4326) %>%\n  st_transform(crs = 3414)\n\n\n\n4.2.0.8 CALL GET_PROX FUNCTION\n\nrs_coords_sf <- get_prox(rs_coords_sf, malls_sf, \"PROX_MALL\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#primary-schools",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#primary-schools",
    "title": "Take-Home_Ex03",
    "section": "4.3 Primary Schools",
    "text": "4.3 Primary Schools\n\n4.3.1 READ IN CSV FILE\n\ncodeglimpse\n\n\n\npri_sch <- read_csv(\"data/geospatial/prisch/general-information-of-schools.csv\")\n\n\n\n\nglimpse(pri_sch)\n\nRows: 346\nColumns: 31\n$ school_name        <chr> \"ADMIRALTY PRIMARY SCHOOL\", \"ADMIRALTY SECONDARY SC…\n$ url_address        <chr> \"https://admiraltypri.moe.edu.sg/\", \"http://www.adm…\n$ address            <chr> \"11   WOODLANDS CIRCLE\", \"31   WOODLANDS CRESCENT\",…\n$ postal_code        <chr> \"738907\", \"737916\", \"768643\", \"768928\", \"579646\", \"…\n$ telephone_no       <chr> \"63620598\", \"63651733\", \"67592906\", \"67585384\", \"64…\n$ telephone_no_2     <chr> \"na\", \"63654596\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na…\n$ fax_no             <chr> \"63627512\", \"63652774\", \"67592927\", \"67557778\", \"64…\n$ fax_no_2           <chr> \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na…\n$ email_address      <chr> \"ADMIRALTY_PS@MOE.EDU.SG\", \"Admiralty_SS@moe.edu.sg…\n$ mrt_desc           <chr> \"Admiralty Station\", \"ADMIRALTY MRT\", \"Yishun\", \"CA…\n$ bus_desc           <chr> \"TIBS 965, 964, 913\", \"904\", \"Yishun Ring Road - 81…\n$ principal_name     <chr> \"MR PEK WEE HAUR\", \"MR LAM YUI- P'NG\", \"MISS ONG LE…\n$ first_vp_name      <chr> \"MDM CHUA MUI LING\", \"MR NG SONG LIM STEVEN\", \"MADA…\n$ second_vp_name     <chr> \"MDM NUR SABARIAH BTE MOHD IBRAHIM\", \"MR SHEIK ALAU…\n$ third_vp_name      <chr> \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ fourth_vp_name     <chr> \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ fifth_vp_name      <chr> \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ sixth_vp_name      <chr> \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ dgp_code           <chr> \"WOODLANDS\", \"WOODLANDS\", \"YISHUN\", \"YISHUN\", \"BISH…\n$ zone_code          <chr> \"NORTH\", \"NORTH\", \"NORTH\", \"NORTH\", \"SOUTH\", \"SOUTH…\n$ type_code          <chr> \"GOVERNMENT SCHOOL\", \"GOVERNMENT SCHOOL\", \"GOVERNME…\n$ nature_code        <chr> \"CO-ED SCHOOL\", \"CO-ED SCHOOL\", \"CO-ED SCHOOL\", \"CO…\n$ session_code       <chr> \"FULL DAY\", \"SINGLE SESSION\", \"SINGLE SESSION\", \"SI…\n$ mainlevel_code     <chr> \"PRIMARY\", \"SECONDARY\", \"PRIMARY\", \"SECONDARY\", \"PR…\n$ sap_ind            <chr> \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"N…\n$ autonomous_ind     <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Ye…\n$ gifted_ind         <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ ip_ind             <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ mothertongue1_code <chr> \"Chinese\", \"Chinese\", \"Chinese\", \"Chinese\", \"Chines…\n$ mothertongue2_code <chr> \"Malay\", \"Malay\", \"Malay\", \"Malay\", \"na\", \"Malay\", …\n$ mothertongue3_code <chr> \"Tamil\", \"Tamil\", \"Tamil\", \"Tamil\", \"na\", \"Tamil\", …\n\n\n\n\n\n\n\n4.3.2 EXTRACT PRIMARY SCHOOLS AND REQUIRED COLUMNS ONLY\n\ncodeglimpse\n\n\n\npri_sch <- pri_sch %>%\n  filter(mainlevel_code == \"PRIMARY\") %>%\n  select(school_name, address, postal_code, mainlevel_code)\n\n\n\n\nglimpse(pri_sch)\n\n\n\n\n\n4.3.2.1 CREATE LIST STORING UNIQUE POSTAL CODES OF PRIMARY SCHOOLS\n\nprisch_list <- sort(unique(pri_sch$postal_code))\n\n\n\n4.3.2.2 CALL GET_COORDS FUNCTION TO RETRIEVE COORDINATES OF PRIMARY SCHOOLS\n\nprisch_coords <- get_coords(prisch_list)\n\n\n\n4.3.2.3 INSPECT RESULTS\n\nprisch_coords[(is.na(prisch_coords$postal) | is.na(prisch_coords$latitude) | is.na(prisch_coords$longitude)), ]\n\nNo NA values.\n\n\n4.3.2.4 COMBINE COORDINATES WITH PRIMARY SCHOOL NAMES\nTo verify whether we have extracted it correctly.\n\ncodehead\n\n\n\nprisch_coords = prisch_coords[c(\"postal\",\"latitude\", \"longitude\")]\npri_sch <- left_join(pri_sch, prisch_coords, by = c('postal_code' = 'postal'))\n\n\n\n\nhead(pri_sch)\n\n\n\n\n\n\n4.3.2.5 CONVERT PRI_SCH DATA FRAME INTO SF OBJECT, ASSIGN AND TRANSFORM CRS\n\ncodest_crs\n\n\n\nprisch_sf <- st_as_sf(pri_sch,\n                    coords = c(\"longitude\", \n                               \"latitude\"),\n                    crs=4326) %>%\n  st_transform(crs = 3414)\n\n\n\n\nst_crs(prisch_sf)\n\n\n\n\n\n\n4.3.2.6 CALL GET_WITHIN FUNCTION\n\ncodehead\n\n\n\nrs_coords_sf <- get_within(rs_coords_sf, prisch_sf, 1000, \"WITHIN_1KM_PRISCH\")\n\n\n\n\nhead(rs_coords_sf)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#good-primary-school",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#good-primary-school",
    "title": "Take-Home_Ex03",
    "section": "4.4 Good primary school",
    "text": "4.4 Good primary school\n\n4.4.1 EXTRACT RANKING LIST OF PRIMARY SCHOOLS\n\ncodehead\n\n\n\nurl <- \"https://www.salary.sg/2021/best-primary-schools-2021-by-popularity/\"\n\ngood_pri <- data.frame()\n\nschools <- read_html(url) %>%\n  html_nodes(xpath = paste('//*[@id=\"post-3068\"]/div[3]/div/div/ol/li') ) %>%\n  html_text() \n\nfor (i in (schools)){\n  sch_name <- toupper(gsub(\" – .*\",\"\",i))\n  sch_name <- gsub(\"\\\\(PRIMARY SECTION)\",\"\",sch_name)\n  sch_name <- trimws(sch_name)\n  new_row <- data.frame(pri_sch_name=sch_name)\n  # Add the row\n  good_pri <- rbind(good_pri, new_row)\n}\n\ntop_good_pri <- head(good_pri, 10)\n\n\n\n\nhead(top_good_pri)\n\n\n\n\n\n4.4.1.1 CHECK FOR GOOD PRIMARY SCHOOLS IN PRIMARY SCHOOL DF\nTo check whether the names of the good primary schools is similar to the names in primary school dataframe\n\ntop_good_pri$pri_sch_name[!top_good_pri$pri_sch_name %in% prisch_sf$school_name]\n\n\n\n4.4.1.2 CREATE A LIST STORING UNIQUE GOOD PRIMARY SCHOOL NAMES\n\ngood_pri_list <- unique(top_good_pri$pri_sch_name)\n\n\n\n4.4.1.3 CALL GET_COORDS FUNCTION TO RETRIEVE COORDINATES OF GOOD PRIMARY SCHOOLS\n\ngoodprisch_coords <- get_coords(good_pri_list)\n\n\n\n4.4.1.4 INSPECT RESULTS\n\ngoodprisch_coords[(is.na(goodprisch_coords$postal) | is.na(goodprisch_coords$latitude) | is.na(goodprisch_coords$longitude)), ]\n\n\n\n4.4.1.5 REPLACE INVALID GOOD PRIMARY SCHOOL NAMES\n\ntop_good_pri$pri_sch_name[top_good_pri$pri_sch_name == \"CHIJ ST. NICHOLAS GIRLS’ SCHOOL\"] <- \"CHIJ SAINT NICHOLAS GIRLS' SCHOOL\"\ntop_good_pri$pri_sch_name[top_good_pri$pri_sch_name == \"ST. HILDA’S PRIMARY SCHOOL\"] <- \"SAINT HILDA'S PRIMARY SCHOOL\"\n\n\n\n4.4.1.6 CREATE A LIST STORING UNIQUE GOOD PRIMARY SCHOOL NAMES AGAIN\n\ngood_pri_list <- unique(top_good_pri$pri_sch_name)\n\n\n\n4.4.1.7 CALL GET_COORDS FUNCTION TO RETRIEVE COORDINATES OF GOOD PRIMARY SCHOOLS AGAIN\n\ngoodprisch_coords <- get_coords(good_pri_list)\n\n\n\n4.4.1.8 INSPECT RESULTS AGAIN\n\ngoodprisch_coords[(is.na(goodprisch_coords$postal) | is.na(goodprisch_coords$latitude) | is.na(goodprisch_coords$longitude)), ]\n\n\n\n4.4.1.9 CONVERT DATA FRAME INTO SF OBJECTS, ASSIGN AND TRANSFORM CRS\n\ncodest_crs\n\n\n\ngoodpri_sf <- st_as_sf(goodprisch_coords,\n                    coords = c(\"longitude\", \n                               \"latitude\"),\n                    crs=4326) %>%\n  st_transform(crs = 3414)\n\n\n\n\nst_crs(goodpri_sf)\n\n\n\n\n\n\n4.4.1.10 CALL GET_PROX FUNCTION\n\nrs_coords_sf <- get_prox(rs_coords_sf, goodpri_sf, \"PROX_GOOD_PRISCH\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#write-to-rds-file",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#write-to-rds-file",
    "title": "Take-Home_Ex03",
    "section": "4.5 Write to RDS file",
    "text": "4.5 Write to RDS file\nTo prevent running of the codes\n\nrs_factors_rds <- write_rds(rs_coords_sf, \"data/aspatial/rds/rs_factors.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#geospatial-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#geospatial-data",
    "title": "Take-Home_Ex03",
    "section": "5.1 Geospatial data",
    "text": "5.1 Geospatial data\n\n5.1.1 MP2019\n\nCodest_crs()\n\n\n\nmpsz_sf <- st_read(dsn = \"data/geospatial/mpsz\", layer=\"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\kt-x\\is415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial\\mpsz' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\n\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\n\n\n\n\n5.1.2 Transform CRS\n\nCodest_crs()\n\n\n\nmpsz_sf <- st_transform(mpsz_sf, 3414)\n\n\n\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\n\n\n5.1.3 Remove invalid geometries (if any)\n\n5.1.3.1 CHECK FOR INVALID GEOMETRIES\n\nlength(which(st_is_valid(mpsz_sf) == FALSE))\n\n[1] 6\n\n\n\n\n5.1.3.2 HANDLE INVALID GEOMETRIES AND CHECK\n\nmpsz_sf <- st_make_valid(mpsz_sf)\nlength(which(st_is_valid(mpsz_sf) == FALSE))\n\n[1] 0\n\n\n\n\n\n5.1.4 Reveal the extent of mpsz_sf\n\nst_bbox(mpsz_sf)\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#read-rds-file",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#read-rds-file",
    "title": "Take-Home_Ex03",
    "section": "6.1 Read RDS file",
    "text": "6.1 Read RDS file\n\nCodeGlimpse\n\n\n\nrs_sf <- read_rds(\"data/aspatial/rds/rs_factors.rds\")\n\n\n\n\nglimpse(rs_sf)\n\nRows: 25,503\nColumns: 25\n$ month                    <chr> \"2021-01\", \"2021-01\", \"2021-01\", \"2021-01\", \"…\n$ town                     <chr> \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"AN…\n$ address                  <chr> \"547 ANG MO KIO AVE 10\", \"414 ANG MO KIO AVE …\n$ block                    <chr> \"547\", \"414\", \"509\", \"467\", \"571\", \"134\", \"20…\n$ street_name              <chr> \"ANG MO KIO AVE 10\", \"ANG MO KIO AVE 10\", \"AN…\n$ flat_type                <chr> \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", \"4 RO…\n$ storey_range             <chr> \"04 TO 06\", \"01 TO 03\", \"01 TO 03\", \"07 TO 09…\n$ floor_area_sqm           <dbl> 92, 92, 91, 92, 92, 98, 92, 92, 92, 92, 92, 1…\n$ flat_model               <chr> \"New Generation\", \"New Generation\", \"New Gene…\n$ lease_commence_date      <dbl> 1981, 1979, 1980, 1979, 1979, 1978, 1977, 197…\n$ remaining_lease_mths     <dbl> 708, 693, 702, 695, 689, 681, 661, 682, 692, …\n$ resale_price             <dbl> 370000, 375000, 380000, 385000, 410000, 41000…\n$ geometry                 <POINT [m]> POINT (30770.07 39578.64), POINT (30292…\n$ PROX_ELDERLYCARE         <dbl> 1.08567795, 0.15039052, 0.72242472, 0.0981628…\n$ PROX_MRT                 <dbl> 1.0486764, 0.7574007, 0.4567509, 0.8868553, 0…\n$ PROX_HAWKER              <dbl> 0.4442515, 0.2050009, 0.4495734, 0.3190679, 0…\n$ PROX_PARK                <dbl> 0.28335601, 0.52464489, 0.24182604, 0.8378272…\n$ PROX_SUPERMARKET         <dbl> 0.4184204, 0.1946009, 0.4435109, 0.4269715, 0…\n$ WITHIN_350M_KINDERGARTEN <int> 3, 3, 4, 4, 4, 2, 7, 4, 3, 3, 4, 4, 6, 3, 4, …\n$ WITHIN_350M_CHILDCARE    <int> 2, 3, 3, 3, 3, 2, 6, 3, 3, 3, 3, 3, 5, 2, 3, …\n$ WITHIN_350M_BUS          <int> 4, 7, 10, 4, 8, 2, 8, 7, 6, 7, 7, 7, 8, 8, 11…\n$ PROX_CBD                 <dbl> 9.564575, 8.401690, 9.516492, 8.580908, 9.084…\n$ PROX_MALL                <dbl> 1.1849973, 0.8565918, 0.3544669, 0.9304150, 0…\n$ WITHIN_1KM_PRISCH        <int> 1, 3, 2, 3, 2, 2, 3, 2, 3, 3, 1, 2, 3, 2, 2, …\n$ PROX_GOOD_PRISCH         <dbl> 1.8744120, 1.4292244, 1.7689255, 1.7759141, 2…\n\n\n\n\n\n\n6.1.1 Extract unique storey_range and sort\n\nstoreys <- sort(unique(rs_sf$storey_range))\n\n\n\n6.1.2 Create dataframe storey_range_order to store order of storey_range\n\nCodeHead\n\n\n\nstorey_order <- 1:length(storeys)\nstorey_range_order <- data.frame(storeys, storey_order)\n\n\n\n\nhead(storey_range_order)\n\n   storeys storey_order\n1 01 TO 03            1\n2 04 TO 06            2\n3 07 TO 09            3\n4 10 TO 12            4\n5 13 TO 15            5\n6 16 TO 18            6\n\n\n\n\n\n\n\n6.1.3 Combine storey_order with resale dataframe\n\nCodeGlimpse\n\n\n\nrs_sf <- left_join(rs_sf, storey_range_order, by= c(\"storey_range\" = \"storeys\"))\n\n\n\n\nglimpse(rs_sf)\n\nRows: 25,503\nColumns: 26\n$ month                    <chr> \"2021-01\", \"2021-01\", \"2021-01\", \"2021-01\", \"…\n$ town                     <chr> \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"AN…\n$ address                  <chr> \"547 ANG MO KIO AVE 10\", \"414 ANG MO KIO AVE …\n$ block                    <chr> \"547\", \"414\", \"509\", \"467\", \"571\", \"134\", \"20…\n$ street_name              <chr> \"ANG MO KIO AVE 10\", \"ANG MO KIO AVE 10\", \"AN…\n$ flat_type                <chr> \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", \"4 RO…\n$ storey_range             <chr> \"04 TO 06\", \"01 TO 03\", \"01 TO 03\", \"07 TO 09…\n$ floor_area_sqm           <dbl> 92, 92, 91, 92, 92, 98, 92, 92, 92, 92, 92, 1…\n$ flat_model               <chr> \"New Generation\", \"New Generation\", \"New Gene…\n$ lease_commence_date      <dbl> 1981, 1979, 1980, 1979, 1979, 1978, 1977, 197…\n$ remaining_lease_mths     <dbl> 708, 693, 702, 695, 689, 681, 661, 682, 692, …\n$ resale_price             <dbl> 370000, 375000, 380000, 385000, 410000, 41000…\n$ geometry                 <POINT [m]> POINT (30770.07 39578.64), POINT (30292…\n$ PROX_ELDERLYCARE         <dbl> 1.08567795, 0.15039052, 0.72242472, 0.0981628…\n$ PROX_MRT                 <dbl> 1.0486764, 0.7574007, 0.4567509, 0.8868553, 0…\n$ PROX_HAWKER              <dbl> 0.4442515, 0.2050009, 0.4495734, 0.3190679, 0…\n$ PROX_PARK                <dbl> 0.28335601, 0.52464489, 0.24182604, 0.8378272…\n$ PROX_SUPERMARKET         <dbl> 0.4184204, 0.1946009, 0.4435109, 0.4269715, 0…\n$ WITHIN_350M_KINDERGARTEN <int> 3, 3, 4, 4, 4, 2, 7, 4, 3, 3, 4, 4, 6, 3, 4, …\n$ WITHIN_350M_CHILDCARE    <int> 2, 3, 3, 3, 3, 2, 6, 3, 3, 3, 3, 3, 5, 2, 3, …\n$ WITHIN_350M_BUS          <int> 4, 7, 10, 4, 8, 2, 8, 7, 6, 7, 7, 7, 8, 8, 11…\n$ PROX_CBD                 <dbl> 9.564575, 8.401690, 9.516492, 8.580908, 9.084…\n$ PROX_MALL                <dbl> 1.1849973, 0.8565918, 0.3544669, 0.9304150, 0…\n$ WITHIN_1KM_PRISCH        <int> 1, 3, 2, 3, 2, 2, 3, 2, 3, 3, 1, 2, 3, 2, 2, …\n$ PROX_GOOD_PRISCH         <dbl> 1.8744120, 1.4292244, 1.7689255, 1.7759141, 2…\n$ storey_order             <int> 2, 1, 1, 3, 3, 3, 3, 2, 4, 3, 5, 1, 3, 4, 2, …\n\n\n\n\n\n\n\n6.1.4 Select required columns for analysis\n\nCodeGlimpse\n\n\n\nrs_req <- rs_sf %>%\n  select(month, resale_price, floor_area_sqm, storey_order, remaining_lease_mths,\n         PROX_CBD, PROX_ELDERLYCARE, PROX_HAWKER, PROX_MRT, PROX_PARK, PROX_GOOD_PRISCH, PROX_MALL,\n         PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, WITHIN_350M_BUS, WITHIN_1KM_PRISCH)\n\n\n\n\nglimpse(rs_req)\n\nRows: 25,503\nColumns: 18\n$ month                    <chr> \"2021-01\", \"2021-01\", \"2021-01\", \"2021-01\", \"…\n$ resale_price             <dbl> 370000, 375000, 380000, 385000, 410000, 41000…\n$ floor_area_sqm           <dbl> 92, 92, 91, 92, 92, 98, 92, 92, 92, 92, 92, 1…\n$ storey_order             <int> 2, 1, 1, 3, 3, 3, 3, 2, 4, 3, 5, 1, 3, 4, 2, …\n$ remaining_lease_mths     <dbl> 708, 693, 702, 695, 689, 681, 661, 682, 692, …\n$ PROX_CBD                 <dbl> 9.564575, 8.401690, 9.516492, 8.580908, 9.084…\n$ PROX_ELDERLYCARE         <dbl> 1.08567795, 0.15039052, 0.72242472, 0.0981628…\n$ PROX_HAWKER              <dbl> 0.4442515, 0.2050009, 0.4495734, 0.3190679, 0…\n$ PROX_MRT                 <dbl> 1.0486764, 0.7574007, 0.4567509, 0.8868553, 0…\n$ PROX_PARK                <dbl> 0.28335601, 0.52464489, 0.24182604, 0.8378272…\n$ PROX_GOOD_PRISCH         <dbl> 1.8744120, 1.4292244, 1.7689255, 1.7759141, 2…\n$ PROX_MALL                <dbl> 1.1849973, 0.8565918, 0.3544669, 0.9304150, 0…\n$ PROX_SUPERMARKET         <dbl> 0.4184204, 0.1946009, 0.4435109, 0.4269715, 0…\n$ WITHIN_350M_KINDERGARTEN <int> 3, 3, 4, 4, 4, 2, 7, 4, 3, 3, 4, 4, 6, 3, 4, …\n$ WITHIN_350M_CHILDCARE    <int> 2, 3, 3, 3, 3, 2, 6, 3, 3, 3, 3, 3, 5, 2, 3, …\n$ WITHIN_350M_BUS          <int> 4, 7, 10, 4, 8, 2, 8, 7, 6, 7, 7, 7, 8, 8, 11…\n$ WITHIN_1KM_PRISCH        <int> 1, 3, 2, 3, 2, 2, 3, 2, 3, 3, 1, 2, 3, 2, 2, …\n$ geometry                 <POINT [m]> POINT (30770.07 39578.64), POINT (30292…\n\n\n\n\n\n\n\n6.1.5 View summary\n\nsummary(rs_req)\n\n    month            resale_price     floor_area_sqm    storey_order   \n Length:25503       Min.   : 250000   Min.   : 70.00   Min.   : 1.000  \n Class :character   1st Qu.: 445000   1st Qu.: 91.00   1st Qu.: 2.000  \n Mode  :character   Median : 495000   Median : 93.00   Median : 3.000  \n                    Mean   : 529142   Mean   : 94.69   Mean   : 3.468  \n                    3rd Qu.: 570000   3rd Qu.:100.00   3rd Qu.: 4.000  \n                    Max.   :1370000   Max.   :145.00   Max.   :17.000  \n remaining_lease_mths    PROX_CBD       PROX_ELDERLYCARE  PROX_HAWKER    \n Min.   : 517         Min.   : 0.9994   Min.   :0.0000   Min.   :0.0306  \n 1st Qu.: 784         1st Qu.: 9.7436   1st Qu.:0.3219   1st Qu.:0.3948  \n Median : 946         Median :13.1520   Median :0.6029   Median :0.6832  \n Mean   : 944         Mean   :12.1558   Mean   :0.7812   Mean   :0.7952  \n 3rd Qu.:1115         3rd Qu.:14.9145   3rd Qu.:1.0836   3rd Qu.:1.0251  \n Max.   :1168         Max.   :19.6501   Max.   :3.3016   Max.   :2.8676  \n    PROX_MRT         PROX_PARK        PROX_GOOD_PRISCH     PROX_MALL     \n Min.   :0.02179   Min.   :0.005403   Min.   : 0.06525   Min.   :0.0000  \n 1st Qu.:0.26812   1st Qu.:0.204463   1st Qu.: 2.29536   1st Qu.:0.3946  \n Median :0.46748   Median :0.361550   Median : 3.65359   Median :0.6002  \n Mean   :0.54827   Mean   :0.425082   Mean   : 4.00920   Mean   :0.7081  \n 3rd Qu.:0.74610   3rd Qu.:0.584951   3rd Qu.: 5.43111   3rd Qu.:0.9153  \n Max.   :2.12909   Max.   :1.517477   Max.   :10.62237   Max.   :2.6686  \n PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN WITHIN_350M_CHILDCARE\n Min.   :0.0000   Min.   : 0.0             Min.   : 0.000       \n 1st Qu.:0.1623   1st Qu.: 3.0             1st Qu.: 3.000       \n Median :0.2517   Median : 4.0             Median : 4.000       \n Mean   :0.2744   Mean   : 4.8             Mean   : 3.889       \n 3rd Qu.:0.3619   3rd Qu.: 6.0             3rd Qu.: 5.000       \n Max.   :1.5713   Max.   :23.0             Max.   :20.000       \n WITHIN_350M_BUS  WITHIN_1KM_PRISCH          geometry    \n Min.   : 0.000   Min.   :0.000     POINT        :25503  \n 1st Qu.: 6.000   1st Qu.:2.000     epsg:3414    :    0  \n Median : 8.000   Median :3.000     +proj=tmer...:    0  \n Mean   : 7.956   Mean   :3.207                          \n 3rd Qu.:10.000   3rd Qu.:4.000                          \n Max.   :19.000   Max.   :9.000"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#statistical-graphics",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#statistical-graphics",
    "title": "Take-Home_Ex03",
    "section": "6.2 statistical graphics",
    "text": "6.2 statistical graphics\n\n6.2.1 Plot Histogram of resale_price\n\nggplot(data=rs_req, aes(x=`resale_price`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light coral\")\n\n\n\n\n\n\n6.2.2 Normalise using Log Transformation\n\nrs_req <- rs_req %>%\n  mutate(`LOG_SELLING_PRICE` = log(resale_price))\n\n\n\n6.2.3 Plot Histogram of LOG_RESALE_PRICE\n\nggplot(data=rs_req, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light green\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#multiple-histogram-plots-distribution-of-variables",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#multiple-histogram-plots-distribution-of-variables",
    "title": "Take-Home_Ex03",
    "section": "7.1 Multiple Histogram Plots distribution of variables",
    "text": "7.1 Multiple Histogram Plots distribution of variables\n\n7.1.1 Stuctural Factors\n\n7.1.1.1 EXTRACT COLUMN NAMES TO PLOT\n\ns_factor <- c(\"floor_area_sqm\", \"storey_order\", \"remaining_lease_mths\")\n\n\n\n7.1.1.2 CREATE A LIST TO STORE HISTOGRAMS OF STUCTURAL FACTORS\n\ns_factor_hist_list <- vector(mode = \"list\", length = length(s_factor))\nfor (i in 1:length(s_factor)) {\n  hist_plot <- ggplot(rs_req, aes_string(x = s_factor[[i]])) +\n    geom_histogram(color=\"firebrick\", fill = \"light coral\") +\n    labs(title = s_factor[[i]]) +\n    theme(plot.title = element_text(size = 10),\n          axis.title = element_blank())\n  \n  s_factor_hist_list[[i]] <- hist_plot\n}\n\n\n\n7.1.1.3 PLOT HISTOGRAMS TO EXAMINE DISTRIBUTION OF STUCTURAL FACTORS\n\nggarrange(plotlist = s_factor_hist_list,\n          ncol = 2,\n          nrow = 2)\n\n\n\n\n\n\n\n7.1.2 Locational Factors\n\n7.1.2.1 EXTRACT COLUMN NAMES TO PLOT\n\nl_factor <- c(\"PROX_CBD\", \"PROX_ELDERLYCARE\", \"PROX_HAWKER\", \"PROX_MRT\", \"PROX_PARK\", \"PROX_GOOD_PRISCH\", \"PROX_MALL\",\n              \"PROX_SUPERMARKET\", \"WITHIN_350M_KINDERGARTEN\", \"WITHIN_350M_CHILDCARE\", \"WITHIN_350M_BUS\", \"WITHIN_1KM_PRISCH\")\n\n\n\n7.1.2.2 CREATE A LIST TO STORE HISTOGRAMS OF LOCATIONAL FACTORS\n\nl_factor_hist_list <- vector(mode = \"list\", length = length(l_factor))\nfor (i in 1:length(l_factor)) {\n  hist_plot <- ggplot(rs_req, aes_string(x = l_factor[[i]])) +\n    geom_histogram(color=\"midnight blue\", fill = \"light sky blue\") +\n    labs(title = l_factor[[i]]) +\n    theme(plot.title = element_text(size = 10),\n          axis.title = element_blank())\n  \n  l_factor_hist_list[[i]] <- hist_plot\n}\n\n\n\n7.1.2.3 PLOT HISTOGRAMS TO EXAMINE DISTRIBUTION OF LOCATIONAL FACTORS\n\nggarrange(plotlist = l_factor_hist_list,\n          ncol = 4,\n          nrow = 4)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#statistical-point-map",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#statistical-point-map",
    "title": "Take-Home_Ex03",
    "section": "7.2 Statistical Point Map",
    "text": "7.2 Statistical Point Map\n\ntmap_mode(\"view\")\ntm_shape(rs_sf) +  \n  tm_dots(col = \"resale_price\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14)) +\ntm_basemap(\"OpenStreetMap\")\n\n\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/data/geospatial/mpsz/MPSZ-2019.html",
    "href": "Take-Home_Ex/Take-Home_Ex03/data/geospatial/mpsz/MPSZ-2019.html",
    "title": "is415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/data/In-class_Ex09/In-class_Ex09/data/geospatial/MPSZ-2019.html",
    "href": "Take-Home_Ex/Take-Home_Ex03/data/In-class_Ex09/In-class_Ex09/data/geospatial/MPSZ-2019.html",
    "title": "is415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html",
    "title": "In-class_Ex10",
    "section": "",
    "text": "pacman::p_load(tmap, SpatialAcc, sf, \n               ggstatsplot, reshape2,\n               tidyverse)\n\npackage 'dplyr' successfully unpacked and MD5 sums checked\npackage 'ggstatsplot' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\kathy\\AppData\\Local\\Temp\\RtmpK6Rxod\\downloaded_packages"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#geospatial-data-wrangling",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#geospatial-data-wrangling",
    "title": "In-class_Ex10",
    "section": "2 Geospatial data wrangling",
    "text": "2 Geospatial data wrangling\n\nmpsz <- st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_NO_SEA_PL\")\n\nReading layer `MP14_SUBZONE_NO_SEA_PL' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nhexagons <- st_read(dsn = \"data/geospatial\", layer = \"hexagons\") \n\nReading layer `hexagons' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3125 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 21506.33 xmax: 50010.26 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n\n\n\neldercare <- st_read(dsn = \"data/geospatial\", layer = \"ELDERCARE\") \n\nReading layer `ELDERCARE' from data source \n  `C:\\kt-x\\is415-GAA\\In-class_Ex\\In-class_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 120 features and 19 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21 / Singapore TM\n\n\n\n2.1 Updating CRS information\n\nmpsz <- st_transform(mpsz, 3414)\neldercare <- st_transform(eldercare, 3414)\nhexagons <- st_transform(hexagons, 3414)\n\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n2.2 Cleaning and updating attribute fields of the geospatial data\n\neldercare <- eldercare %>%\n  select(fid, ADDRESSPOS) %>%\n  rename(destionation_id = fid)|>\n  mutate(capacity = 100)\n\n\nhexagons <- hexagons %>%\n  select(fid) %>%\n  rename(origin_id = fid) |>\n  mutate(demand = 100)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#apsaital-data-handling-and-wrangling",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#apsaital-data-handling-and-wrangling",
    "title": "In-class_Ex10",
    "section": "3 Apsaital Data Handling and Wrangling",
    "text": "3 Apsaital Data Handling and Wrangling\n\nODMatrix <- read_csv(\"data/aspatial/OD_Matrix.csv\", skip = 0)\n\n\ndistmat <- ODMatrix %>%\n  select(origin_id, destination_id, total_cost) %>%\n  spread(destination_id, total_cost)%>%\n  select(c(-c('origin_id')))\n\n\ndistmat_km <- as.matrix(distmat/1000)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#computing-the-distance-matrix",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#computing-the-distance-matrix",
    "title": "In-class_Ex10",
    "section": "4 Computing the distance matrix",
    "text": "4 Computing the distance matrix\n\neldercare_coords <- st_coordinates(eldercare)\nhexagon_coords <- st_coordinates(hexagons)\n\n\nEucMatrix <- SpatialAcc::distance(hexagon_coords,\n                                  eldercare_coords,\n                                  type = \"euclidean\")\n\n\nEucMatrix_km <- as.matrix(EucMatrix/1000)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#modelling-and-visualising-accessibility-using-hansen-method",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#modelling-and-visualising-accessibility-using-hansen-method",
    "title": "In-class_Ex10",
    "section": "5 Modelling and Visualising Accessibility using Hansen Method",
    "text": "5 Modelling and Visualising Accessibility using Hansen Method\n\n5.1 Computing Hansen’s accessibility\n\nacc_Hansen <- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_km, \n                            d0 = 50,\n                            power = 2, \n                            family = \"Hansen\"))\n\n\ncolnames(acc_Hansen) <- \"accHansen\"\n\n\nacc_Hansen <- tbl_df(acc_Hansen)\n\n\nhexagon_Hansen <- bind_cols(hexagons, acc_Hansen)\n\n\nacc_Hansen <- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_km, \n                            #d0 = 50,\n                            power = 0.5, \n                            family = \"Hansen\"))\n\ncolnames(acc_Hansen) <- \"accHansen\"\nacc_Hansen <- tbl_df(acc_Hansen)\nhexagon_Hansen <- bind_cols(hexagons, acc_Hansen)\n\n\n\n5.2 Visualising Hansen’s accessibility\n\n5.2.1 Extracting map extend\n\nmapex <- st_bbox(hexagons)\n\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_Hansen,\n         bbox = mapex) + \n  tm_fill(col = \"accHansen\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: Hansen method\",\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\n\n\n5.3 Statistical graphic visualisation\n\nhexagon_Hansen <- st_join(hexagon_Hansen, mpsz, \n                          join = st_intersects)\n\n\nggplot(data=hexagon_Hansen, \n       aes(y = log(accHansen), \n           x= REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\", \n             fun.y=\"mean\", \n             colour =\"red\", \n             size=2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#modelling-and-visualising-accessibility-using-kd2sfca-method",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#modelling-and-visualising-accessibility-using-kd2sfca-method",
    "title": "In-class_Ex10",
    "section": "6 Modelling and Visualising Accessibility using KD2SFCA Method",
    "text": "6 Modelling and Visualising Accessibility using KD2SFCA Method\n\n6.1 Computing KD2SFCA’s accessibility\n\nacc_KD2SFCA <- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_km, \n                            d0 = 50,\n                            power = 2, \n                            family = \"KD2SFCA\"))\n\ncolnames(acc_KD2SFCA) <- \"accKD2SFCA\"\nacc_KD2SFCA <- tbl_df(acc_KD2SFCA)\nhexagon_KD2SFCA <- bind_cols(hexagons, acc_KD2SFCA)\n\n\n\n6.2 Visualising KD2SFCA’s accessibility\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_KD2SFCA,\n         bbox = mapex) + \n  tm_fill(col = \"accKD2SFCA\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: KD2SFCA method\",\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\n\n6.3 Statistical graphic visualisation\n\nhexagon_KD2SFCA <- st_join(hexagon_KD2SFCA, mpsz, \n                          join = st_intersects)\n\n\nggplot(data=hexagon_KD2SFCA, \n       aes(y = accKD2SFCA, \n           x= REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\", \n             fun.y=\"mean\", \n             colour =\"red\", \n             size=2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#modelling-and-visualising-accessibility-using-spatial-accessibility-measure-sam-method",
    "href": "In-class_Ex/In-class_Ex10/In-class_Ex10.html#modelling-and-visualising-accessibility-using-spatial-accessibility-measure-sam-method",
    "title": "In-class_Ex10",
    "section": "7 Modelling and Visualising Accessibility using Spatial Accessibility Measure (SAM) Method",
    "text": "7 Modelling and Visualising Accessibility using Spatial Accessibility Measure (SAM) Method\n\n7.1 Computing SAM accessibility\n\nacc_SAM <- data.frame(ac(hexagons$demand,\n                         eldercare$capacity,\n                         distmat_km, \n                         d0 = 50,\n                         power = 2, \n                         family = \"SAM\"))\n\ncolnames(acc_SAM) <- \"accSAM\"\nacc_SAM <- tbl_df(acc_SAM)\nhexagon_SAM <- bind_cols(hexagons, acc_SAM)\n\n\n\n7.2 Visualising SAM’s accessibility\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_SAM,\n         bbox = mapex) + \n  tm_fill(col = \"accSAM\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: SAM method\",\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 3),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n\n\n\n\n\n\n7.3 Statistical graphic visualisation\n\nhexagon_SAM <- st_join(hexagon_SAM, mpsz, \n                       join = st_intersects)\n\n\nggplot(data=hexagon_SAM, \n       aes(y = accSAM, \n           x= REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\", \n             fun.y=\"mean\", \n             colour =\"red\", \n             size=2)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#computing-correlation-matrix",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#computing-correlation-matrix",
    "title": "Take-Home_Ex03",
    "section": "8.1 Computing Correlation Matrix",
    "text": "8.1 Computing Correlation Matrix\n\nrs_req_nogeo <- rs_req %>%\n  st_drop_geometry()\ncorrplot::corrplot(cor(rs_req_nogeo[, 2:17]), \n                   diag = FALSE, \n                   order = \"AOE\",\n                   tl.pos = \"td\", \n                   tl.cex = 0.8, \n                   method = \"number\", \n                   type = \"upper\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#retriving-the-stored-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#retriving-the-stored-data",
    "title": "Take-Home_Ex03",
    "section": "8.2 Retriving the Stored Data",
    "text": "8.2 Retriving the Stored Data\n\ntrain_data <- read_rds(\"data/aspatial/rds/train_data.rds\")\ntest_data <- read_rds(\"data/aspatial/rds/test_data.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#building-a-non-spatial-multiple-linear-regression",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#building-a-non-spatial-multiple-linear-regression",
    "title": "Take-Home_Ex03",
    "section": "8.3 Building a non-spatial multiple linear regression",
    "text": "8.3 Building a non-spatial multiple linear regression\n\nprice_mlr <- lm(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data=train_data)\nsummary(price_mlr)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#write-price_mlr-to-rds-file",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#write-price_mlr-to-rds-file",
    "title": "Take-Home_Ex03",
    "section": "8.4 write price_mlr to rds file",
    "text": "8.4 write price_mlr to rds file\n\nwrite_rds(price_mlr, \"data/aspatial/rds/price_mlr.rds\" )"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#converting-the-sf-data.frame-to-spatialpointdataframe",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#converting-the-sf-data.frame-to-spatialpointdataframe",
    "title": "Take-Home_Ex03",
    "section": "9.1 Converting the sf data.frame to SpatialPointDataFrame",
    "text": "9.1 Converting the sf data.frame to SpatialPointDataFrame\n\ntrain_data_sp <- as_Spatial(train_data)\ntrain_data_sp"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#computing-adaptive-bandwidth",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#computing-adaptive-bandwidth",
    "title": "Take-Home_Ex03",
    "section": "9.2 Computing adaptive bandwidth",
    "text": "9.2 Computing adaptive bandwidth\nNext, bw.gwr() of GWmodel package will be used to determine the optimal bandwidth to be used.\n\nTo determine adaptive bandwidth and CV method is used to determine the optimal bandwidth.\n\n\nbw_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\n\nResults above show that: - 118 is the recommended data points to be used"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#write-bw_adpative-to-rds-file",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#write-bw_adpative-to-rds-file",
    "title": "Take-Home_Ex03",
    "section": "9.3 write bw_adpative to rds file",
    "text": "9.3 write bw_adpative to rds file\n\nwrite_rds(bw_adaptive, \"data/aspatial/rds/bw_adaptive.rds\")\n\n\nbw_adaptive <- read_rds(\"data/aspatial/rds/bw_adaptive.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calibrate-the-gwr-based-hedonic-pricing-model-by-using-adaptive-bandwidth-and-gaussian-kernel",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calibrate-the-gwr-based-hedonic-pricing-model-by-using-adaptive-bandwidth-and-gaussian-kernel",
    "title": "Take-Home_Ex03",
    "section": "9.4 Calibrate the gwr-based hedonic pricing model by using adaptive bandwidth and Gaussian kernel",
    "text": "9.4 Calibrate the gwr-based hedonic pricing model by using adaptive bandwidth and Gaussian kernel\n\ngwr_adaptive <- gwr.basic(formula = resale_price ~\n                            floor_area_sqm + storey_order +\n                            remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                          data=train_data_sp,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE,\n                          longlat = FALSE)\n\n\n\n\n\n\n\n\nOverall the values between the dependent and independent variables are similar in range.\n\n9.4.1 save to rds\n\nwrite_rds(gwr_adaptive, \"data/aspatial/rds/gwr_adaptive.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#output",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#output",
    "title": "Take-Home_Ex03",
    "section": "9.5 Output",
    "text": "9.5 Output\n\ngwr_adaptive <- read_rds(\"data/aspatial/rds/gwr_adaptive.rds\")\ngwr_adaptive"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#extracting-coordinates-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#extracting-coordinates-data",
    "title": "Take-Home_Ex03",
    "section": "10.1 Extracting coordinates data",
    "text": "10.1 Extracting coordinates data\nextract the x,y coordinates of the full, training and test data sets.\n\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n\n\n10.1.1 write all the output into rds for future used\n\ncoords_train <- write_rds(coords_train, \"data/aspatial/rds/coords_train.rds\" )\ncoords_test <- write_rds(coords_test, \"data/aspatial/rds/coords_test.rds\" )"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#droping-geometry-field",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#droping-geometry-field",
    "title": "Take-Home_Ex03",
    "section": "10.2 Droping geometry field",
    "text": "10.2 Droping geometry field\n\ntrain_data <- train_data %>% \n  st_drop_geometry()"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calibrating-geographical-random-forest-model",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calibrating-geographical-random-forest-model",
    "title": "Take-Home_Ex03",
    "section": "11.1 Calibrating Geographical Random Forest Model",
    "text": "11.1 Calibrating Geographical Random Forest Model\nIn this section, we will be calibrating a model to predict HDB resale price by using grf() of SpatialML package.\n\n11.1.1 Calibrating using training data\nCalibrate a geographic ranform forest model by using grf() of SpatialML package.\n\nset.seed(1234)\ngwRF_adaptive <- grf(formula = resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,\n                     dframe=train_data, \n                     bw=55,\n                     kernel=\"adaptive\",\n                     coords=coords_train)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#write-to-rds-file-1",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#write-to-rds-file-1",
    "title": "Take-Home_Ex03",
    "section": "11.2 write to rds file",
    "text": "11.2 write to rds file\n\nwrite_rds(gwRF_adaptive, \"data/aspatial/gwRF_adaptive.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#retrieve-for-future-use",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#retrieve-for-future-use",
    "title": "Take-Home_Ex03",
    "section": "11.3 retrieve for future use",
    "text": "11.3 retrieve for future use\n\ngwRF_adaptive <- read_rds(\"data/aspatial/gwRF_adaptive.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#predicting-by-using-test-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#predicting-by-using-test-data",
    "title": "Take-Home_Ex03",
    "section": "11.4 Predicting by using test data",
    "text": "11.4 Predicting by using test data\n\n11.4.0.1 prepare data\n\ntest_data <- cbind(test_data, coords_test) %>%\n  st_drop_geometry()\n\nNext, predict.grf() of spatialML package will be used to predict the resale value by using the test data and gwRF_adaptive model calibrated earlier.\n\ngwRF_pred <- predict.grf(gwRF_adaptive, \n                           test_data, \n                           x.var.name=\"X\",\n                           y.var.name=\"Y\", \n                           local.w=1,\n                           global.w=0)\n\n\n\n11.4.1 write to rds file\n\nGRF_pred <- write_rds(gwRF_pred, \"data/model/GRF_pred.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#converting-the-predicting-output-into-a-data-frame",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#converting-the-predicting-output-into-a-data-frame",
    "title": "Take-Home_Ex03",
    "section": "11.5 Converting the predicting output into a data frame",
    "text": "11.5 Converting the predicting output into a data frame\nThe output of the predict.grf() is a vector of predicted values. It is wiser to convert it into a data frame for further visualisation and analysis.\n\nGRF_pred <- read_rds(\"data/model/GRF_pred.rds\")\nGRF_pred_df <- as.data.frame(GRF_pred)\n\ncbind() is used to append the predicted values onto test_data\n\ntest_data_p <- cbind(test_data, GRF_pred_df)\n\n\nwrite_rds(test_data_p, \"data/model/test_data_p.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#visualising-the-predicted-values",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#visualising-the-predicted-values",
    "title": "Take-Home_Ex03",
    "section": "12.1 Visualising the predicted values",
    "text": "12.1 Visualising the predicted values\nA better predictive model should have the scatter point close to the diagonal line. The scatter plot can be also used to detect if any outliers in the model.\n\nggplot(data = test_data_p,\n       aes(x = GRF_pred,\n           y = resale_price)) +\n  geom_point()"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#simple-linear-regression-slr-model",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#simple-linear-regression-slr-model",
    "title": "Take-Home_Ex03",
    "section": "14.1 Simple Linear Regression (SLR) Model",
    "text": "14.1 Simple Linear Regression (SLR) Model\n\n14.1.1 Combine structural and locational factors list\n\nfactors <- c(s_factor, l_factor)\nfactors\n\n\n\n14.1.2 Build Simple Linear Regression model\n\nCodeInterceptr-sq\n\n\n\nintercept_df <- data.frame()\nrsq_fstat_df <- data.frame()\n\nfor (i in factors){\n  rs_slr <- lm(as.formula(paste(\"resale_price\", \"~\", i)), data = rs_req)\n  intercept <- tidy(summary(rs_slr))\n  intercept$var_name <- i\n  rsq_fstat <- glance(rs_slr)[1:5]\n  rsq_fstat$var_name <- i\n  # Append\n  intercept_df <- bind_rows(intercept_df, intercept)\n  rsq_fstat_df <- bind_rows(rsq_fstat_df, rsq_fstat)\n}\n\n\n\n\nintercept_df\n\n\n\n\nrsq_fstat_df\n\n\n\n\nFrom the result,…\n\n\n14.1.3 Visualise best fit curve\n\nscatterplot_list <- vector(mode = \"list\", length = length(factors))\n\nfor (i in factors){\n  scatterplot <- ggplot(data=rs_req,\n                        aes_string(x=i, y=\"resale_price\")) + \n    geom_point() + geom_smooth(method = lm)\n  scatterplot_list[[i]] <- scatterplot\n}\n\n\nggarrange(plotlist = scatterplot_list, ncol = 4, nrow = 4)\n\nOverall…"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#multiple-linear-regression-model",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#multiple-linear-regression-model",
    "title": "Take-Home_Ex03",
    "section": "14.2 Multiple Linear Regression Model",
    "text": "14.2 Multiple Linear Regression Model\n\n14.2.1 Visualise relationships of independent variables\n\n14.2.1.1 SET GEOMETRY AS NULL FIRST\n\ncodeGlimpse\n\n\n\nrs_req_nogeom <- st_set_geometry(rs_req, NULL) \n\n\n\n\nglimpse(rs_req_nogeom)\n\n\n\n\n\n\n14.2.1.2 PLOT A SCATTERPLOT MATRIX\n\ncorrplot(cor(rs_req_nogeom[, 2:17]), diag = FALSE, order = \"AOE\",\n          tl.pos = \"td\", tl.cex = 0.8, method = \"number\", type = \"upper\")\n\n\n\n\n14.2.2 Hedonic Pricing Model Using Multiple Linear Regression Method\n\n14.2.2.1 CALIBRATE THE MULTIPLE LINEAR REGRESSION MODEL\nTo calibrate the multiple linear regression model. And PROX_GOOD_PRISCH is excluded in this model.\n\nrs_mlr1 <- lm(formula = resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, data=rs_req)\n\nsummary(rs_mlr1)\n\nResults shows that\n\n\n14.2.2.2 CALIBRATE THE REVISED MULTIPLE LINEAR REGRESSION MODEL\n\nTo calibrate the revised model\nUsing ols_regress() function to perform the Ordinary least squares regression (OLS)\n\n\nrs_mlr1 <- lm(formula = resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL  + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, data=rs_req)\n\nols_regress(rs_mlr1)\n\nSO…\n\n\n\n14.2.3 Check for multicolinearity\n\nols_vif_tol() function is used to check if there are any strong signs of multicollinearity.\n\n\nols_vif_tol(rs_mlr1)\n\nIt seems like…\n\n\n14.2.4 Test for Non-Linearity\n\nols_plot_resid_fit(rs_mlr1)\n\nFrom the graph, …\n\n\n14.2.5 Test for Normality Assumption\n\nSince our sample size is more than 5000, we will not be using ols_test_normality() function for this analysis.\nInstead, we will be using ols_plot_resid_hist() of olsrr package to perform normality assumption test.\n\n\nols_plot_resid_hist(rs_mlr1)\n\n(must change accordingly) Results above reveals that the residual of the multiple linear regression model (i.e. rs_mlr1) resembles a normal distribution.\n\n\n14.2.6 Test for Spatial Autocorrelation\n\nIt is important to visualise the residual of the hedonic pricing model since the model is using geographically referenced attributes.\n\nConvert rs_req into a SpatialPointsDataFrame.\n\n\nExport the residual of the hedonic pricing model and save it as a data frame.\n\n\nJoin the newly created data frame with rs_req object.\n\n\nConvert rs.res.sf simple feature object into a SpatialPointsDataFrame because spdep package can only process sp conformed spatial data objects\n\n\n\n14.2.6.1 EXPORT RESIDUAL OF HEDONIC PRICING MODEL\n\nmlr.output <- as.data.frame(rs_mlr1$residuals)\n\n\n\n14.2.6.2 JOIN WITH CONDO_RESALE.SF OBJECT\n\ncodeGlimpse\n\n\n\nrs.res.sf <- cbind(rs_req,\n                   rs_mlr1$residuals) %>%\nrename(`MLR_RES` = `rs_mlr1.residuals`)\n\n\n\n\nglimpse(rs.res.sf)\n\n\n\n\n\n\n14.2.6.3 CONVERT TO SPATIALPOINTSDATAFRAME\n\nrs.sp <- as_Spatial(rs.res.sf)\nrs.sp\n\n\n\n14.2.6.4 DISPLAY INTERACTIVE POINT SYMBOL MAP\nTo display the distribution of the residuals.\n\ntmap_mode(\"view\")\ntm_basemap(\"OpenStreetMap\")+\ntm_shape(mpsz_sf)+\n  tm_polygons(alpha = 0.4) +\ntm_shape(rs.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n(need to change accordingly) From the plot above, we can see that there is somewhat spatial autocorrelation where similar values tend to be in similar location. However, to confirm that there truly is spatial autocorrelation, we will perform Moran’s I test to validate our claims.\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#morans-i-test",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#morans-i-test",
    "title": "Take-Home_Ex03",
    "section": "14.3 Moran’s I test",
    "text": "14.3 Moran’s I test\n\n14.3.1 Obtaining upper distance band\n\ncoords <- coordinates(rs.sp)\nk <- knn2nb(knearneigh(coords))\nkdists <- unlist(nbdists(k, coords, longlat=FALSE))\nsummary(kdists) \n\n\n\n14.3.2 Compute the distance-based weight matrix\n\nnb <- dnearneigh(coordinates(rs.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\n\n\n14.3.3 Convert to a spatial weights\n\nnb2listw() of spdep package will be used to convert the output neighbours lists (i.e. nb) into a spatial weights\n\n\nnb_lw <- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\n\n\n14.3.4 Perform Moran’s I test for residual spatial autocorrelation\n\nUse lm.morantest() of spdep package will be used to perform Moran’s I test for residual spatial autocorrelation\n\n\nlm.morantest(rs_mlr1, nb_lw)\n\n(need to change) The Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than 0.00000000000000022 which is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed. Since the Observed Global Moran I = 0.4111541 which is greater than 0, we can infer than the residuals resemble cluster distribution."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#build-fixed-bandwidth-gwr-model",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#build-fixed-bandwidth-gwr-model",
    "title": "Take-Home_Ex03",
    "section": "15.1 Build Fixed Bandwidth GWR Model",
    "text": "15.1 Build Fixed Bandwidth GWR Model\n\n15.1.1 Compute fixed bandwidth\n\nbw.gwr() of GWModel package is used to determine the optimal fixed bandwidth to use in the model. Notice that the argument adaptive is set to FALSE indicates that we are interested to compute the fixed bandwidth.\n\nThere are 2 possible approaches to determine the stopping rule, they are: - CV cross-validation approach and - AIC corrected (AICc) approach.\nWe define the stopping rule using approach argument. For our analysis, since our sample size is quite huge, 15901 rows, we will not be using AIC as it works better for lower sample sizes.\n\n# bw.fixed <- bw.gwr(formula = resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL  + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, data=rs.sp, approach=\"CV\", kernel=\"gaussian\", adaptive=FALSE, longlat=FALSE)\n\nDue to the long run time, the output of the above computation will be shown in the following screenshot:\n(insert img of result)\nResults above show that:\n(need to change accordingly) The CV score is becoming smaller and smaller. The recommended bandwidth is 570.6638 metres as it converged and stabilised here with the CV score of 1.068985e+13.\n\n\n15.1.2 GWModel method - fixed bandwidth\n\n# gwr.fixed <- gwr.basic(formula = resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL  + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, data=rs.sp, bw=bw.fixed, kernel = 'gaussian', longlat = FALSE)\n# gwr.fixed\n\nDue to the long run time, the output of the above computation will be shown in the following screenshot:\n(insert img of result)\nResults above show that:\n(need to change accordingly) The adjusted r-square of the GWR is 0.9572575 which is significantly better than the global multiple linear regression model of 0.7386."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#build-adaptive-bandwidth-gwr-model",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#build-adaptive-bandwidth-gwr-model",
    "title": "Take-Home_Ex03",
    "section": "15.2 Build Adaptive Bandwidth GWR Model",
    "text": "15.2 Build Adaptive Bandwidth GWR Model\nIn this section, we will calibrate the gwr-based hedonic pricing model by using adaptive bandwidth approach.\n10.2.1 Compute the adaptive bandwidth Similar to the earlier section, we will first use bw.ger() to determine the recommended data point to use. The code chunk used look very similar to the one used to compute the fixed bandwidth except the adaptive argument has changed to TRUE.\n\n# bw.adaptive <- bw.gwr(formula = resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths + PROX_CBD + \n#                         PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL  + PROX_SUPERMARKET  +\n#                         WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n#                       data=rs.sp, approach=\"CV\", kernel=\"gaussian\", adaptive=TRUE, longlat=FALSE)\n\nDue to the long run time, the output of the above computation will be shown in the following screenshot:\n(img)\nResults above show that:\n\n15.2.1 Construct the adaptive bandwidth GWR model\nCalibrate the GWR-based hedonic pricing model by using adaptive bandwidth and gaussian kernel\n\n# gwr.adaptive <- gwr.basic(formula = resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths + PROX_CBD +\n#                             PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + \n#                             WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n#                           data=rs.sp, bw=bw.adaptive, kernel = 'gaussian', adaptive=TRUE, longlat = FALSE)\n# gwr.adaptive\n\nDue to the long run time, the output of the above computation will be shown in the following screenshot:\n(img of result)\nResults above show that:\n(need to change accordingly) The adjusted r-square of the GWR is 0.9627267 which is significantly better than the global multiple linear regression model of 0.7386 Overall, we can see that the adaptive bandwidth GWR model has the best adjusted R-square value of 0.9627267 as compared to Multiple Linear Regression Model and Fixed Bandwidth GWR model. Hence, we will be using it to visualise GWR output in the next section."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/data/geospatial/ELDERCARE.html",
    "href": "In-class_Ex/In-class_Ex10/data/geospatial/ELDERCARE.html",
    "title": "is415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>  ELDERCARE  ENG dataset\n\nELDERCARE\n\n                 0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex10/data/geospatial/hexagons.html",
    "href": "In-class_Ex/In-class_Ex10/data/geospatial/hexagons.html",
    "title": "is415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n                 0 0     false"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/data/Trial.html",
    "href": "Hands-on_Ex/Hands-on_Ex09/data/Trial.html",
    "title": "Trial",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse, tmap, httr, rvest, spdep, readxl)\n\n\nproduct <- read_excel(\"data/Product.xlsx\")\n\nglimpse(product)\n\nRows: 520\nColumns: 7\n$ Product         <chr> \"A001\", \"A001\", \"A001\", \"A001\", \"A001\", \"A001\", \"A001\"…\n$ Brand           <chr> \"HON\", \"HON\", \"HON\", \"HON\", \"HON\", \"HON\", \"HON\", \"HON\"…\n$ Model           <chr> \"Brio\", \"Amaze\", \"Mobilio\", \"City\", \"City ZX\", \"City\",…\n$ Production_Year <chr> NA, NA, NA, \"Y02-05)\", \"Y05-07)\", \"Y08-15)\", \"Y03-15)\"…\n$ Vehicle_Type    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ SOP             <dbl> NA, NA, NA, 2002, 2005, 2008, 2003, 2006, NA, NA, NA, …\n$ EOP             <dbl> NA, NA, NA, 2005, 2007, 2015, 2015, 2011, NA, NA, NA, …\n\n\n\nvehicle <- read_excel(\"data/vehicle.xlsx\")\n\nWarning: Expecting logical in I11141 / R11141C9: got 'VB'\n\n\nWarning: Expecting logical in I11740 / R11740C9: got 'VB'\n\n\nWarning: Expecting logical in I12236 / R12236C9: got 'VB'\n\n\nWarning: Expecting logical in I12445 / R12445C9: got 'VB'\n\n\nWarning: Expecting logical in I13099 / R13099C9: got 'VB'\n\n\nWarning: Expecting logical in I13791 / R13791C9: got 'VB'\n\n\nWarning: Expecting logical in I14609 / R14609C9: got 'VB'\n\n\nWarning: Expecting logical in I14679 / R14679C9: got 'VB'\n\n\nWarning: Expecting logical in I15376 / R15376C9: got 'VB'\n\n\nWarning: Expecting logical in I15394 / R15394C9: got 'VB'\n\n\nWarning: Expecting logical in I15897 / R15897C9: got 'W4'\n\n\nWarning: Expecting logical in I16539 / R16539C9: got 'VB'\n\n\nWarning: Expecting logical in I20335 / R20335C9: got 'VB'\n\n\nWarning: Expecting logical in I23766 / R23766C9: got 'DR'\n\n\nWarning: Expecting logical in I24092 / R24092C9: got 'DR'\n\n\nWarning: Expecting logical in I27902 / R27902C9: got 'VB'\n\n\nWarning: Expecting logical in I27957 / R27957C9: got 'VB'\n\n\nWarning: Expecting logical in I27967 / R27967C9: got 'VB'\n\n\nWarning: Expecting logical in I28141 / R28141C9: got 'VB'\n\n\nWarning: Expecting logical in I28182 / R28182C9: got 'VB'\n\n\nWarning: Expecting logical in I28241 / R28241C9: got 'P4'\n\n\nWarning: Expecting logical in I28706 / R28706C9: got 'VB'\n\n\nWarning: Expecting logical in I28806 / R28806C9: got 'VB'\n\n\nWarning: Expecting logical in I28881 / R28881C9: got 'VB'\n\n\nWarning: Expecting logical in I29348 / R29348C9: got 'VB'\n\n\nWarning: Expecting logical in I29375 / R29375C9: got 'VB'\n\n\nWarning: Expecting logical in I29636 / R29636C9: got 'VB'\n\n\nWarning: Expecting logical in I29852 / R29852C9: got 'VB'\n\n\nWarning: Expecting logical in I30052 / R30052C9: got 'VB'\n\n\nWarning: Expecting logical in I30134 / R30134C9: got 'VB'\n\n\nWarning: Expecting logical in I30449 / R30449C9: got 'VB'\n\n\nWarning: Expecting logical in I30701 / R30701C9: got 'VB'\n\n\nWarning: Expecting logical in I31064 / R31064C9: got 'VB'\n\n\nWarning: Expecting logical in I31212 / R31212C9: got 'VB'\n\n\nWarning: Expecting logical in I31308 / R31308C9: got 'VB'\n\n\nWarning: Expecting logical in I31910 / R31910C9: got 'VB'\n\n\nWarning: Expecting logical in I31935 / R31935C9: got 'VB'\n\n\nWarning: Expecting logical in I32039 / R32039C9: got 'VB'\n\n\nWarning: Expecting logical in I32120 / R32120C9: got 'VB'\n\n\nWarning: Expecting logical in I32135 / R32135C9: got 'VB'\n\n\nWarning: Expecting logical in I32147 / R32147C9: got 'VB'\n\n\nWarning: Expecting logical in I32271 / R32271C9: got 'VB'\n\n\nWarning: Expecting logical in I32278 / R32278C9: got 'VB'\n\n\nWarning: Expecting logical in I32528 / R32528C9: got 'VB'\n\n\nWarning: Expecting logical in I32910 / R32910C9: got 'VB'\n\n\nWarning: Expecting logical in I33010 / R33010C9: got 'VB'\n\n\nWarning: Expecting logical in I33262 / R33262C9: got 'VB'\n\n\nWarning: Expecting logical in I33277 / R33277C9: got 'VB'\n\n\nWarning: Expecting logical in I33369 / R33369C9: got 'VB'\n\n\nWarning: Expecting logical in I33488 / R33488C9: got 'VB'\n\n\nWarning: Expecting logical in I33756 / R33756C9: got 'P4'\n\n\nWarning: Expecting logical in I33827 / R33827C9: got 'VB'\n\n\nWarning: Expecting logical in I34060 / R34060C9: got 'VB'\n\n\nWarning: Expecting logical in I34308 / R34308C9: got 'W1'\n\n\nWarning: Expecting logical in I34425 / R34425C9: got 'VB'\n\n\nWarning: Expecting logical in I37703 / R37703C9: got 'DR'\n\n\nWarning: Expecting logical in I37726 / R37726C9: got 'DR'\n\n\nWarning: Expecting logical in I37772 / R37772C9: got 'DF'\n\n\nWarning: Expecting logical in I37983 / R37983C9: got 'DF'\n\n\nWarning: Expecting logical in I38015 / R38015C9: got 'DF'\n\n\nWarning: Expecting logical in I38070 / R38070C9: got 'DF'\n\n\nWarning: Expecting logical in I38142 / R38142C9: got 'DR'\n\n\nWarning: Expecting logical in I38171 / R38171C9: got 'DR'\n\n\nWarning: Expecting logical in I38305 / R38305C9: got 'DF'\n\n\nWarning: Expecting logical in I38383 / R38383C9: got 'DR'\n\n\nWarning: Expecting logical in I38448 / R38448C9: got 'DF'\n\n\nWarning: Expecting logical in I38648 / R38648C9: got 'DR'\n\n\nWarning: Expecting logical in I38651 / R38651C9: got 'DR'\n\n\nWarning: Expecting logical in I38722 / R38722C9: got 'DR'\n\n\nWarning: Expecting logical in I38865 / R38865C9: got 'DF'\n\n\nWarning: Expecting logical in I38907 / R38907C9: got 'DR'\n\n\nWarning: Expecting logical in I39017 / R39017C9: got 'DF'\n\n\nWarning: Expecting logical in I39054 / R39054C9: got 'DR'\n\n\nWarning: Expecting logical in I39098 / R39098C9: got 'DF'\n\n\nWarning: Expecting logical in I39574 / R39574C9: got 'DF'\n\n\nWarning: Expecting logical in I39624 / R39624C9: got 'DF'\n\n\nWarning: Expecting logical in I39791 / R39791C9: got 'DF'\n\n\nWarning: Expecting logical in I39809 / R39809C9: got 'DF'\n\n\nWarning: Expecting logical in I39845 / R39845C9: got 'DR'\n\n\nWarning: Expecting logical in I40170 / R40170C9: got 'DR'\n\n\nWarning: Expecting logical in I40207 / R40207C9: got 'DF'\n\n\nWarning: Expecting logical in I40242 / R40242C9: got 'DR'\n\n\nWarning: Expecting logical in I51048 / R51048C9: got 'VB'\n\n\nWarning: Expecting logical in I51210 / R51210C9: got 'VB'\n\n\nWarning: Expecting logical in I51530 / R51530C9: got 'VB'\n\n\nWarning: Expecting logical in I51547 / R51547C9: got 'DR'\n\n\nWarning: Expecting logical in I51590 / R51590C9: got 'VB'\n\n\nWarning: Expecting logical in I51628 / R51628C9: got 'VB'\n\n\nWarning: Expecting logical in I51669 / R51669C9: got 'DF'\n\n\nWarning: Expecting logical in I51685 / R51685C9: got 'VB'\n\n\nWarning: Expecting logical in I51703 / R51703C9: got 'VB'\n\n\nWarning: Expecting logical in I51711 / R51711C9: got 'VB'\n\n\nWarning: Expecting logical in I51759 / R51759C9: got 'VB'\n\n\nWarning: Expecting logical in I51822 / R51822C9: got 'VB'\n\n\nWarning: Expecting logical in I51908 / R51908C9: got 'VB'\n\n\nWarning: Expecting logical in I51983 / R51983C9: got 'DF'\n\n\nWarning: Expecting logical in I51987 / R51987C9: got 'DF'\n\n\nWarning: Expecting logical in I52047 / R52047C9: got 'DF'\n\n\nWarning: Expecting logical in I52064 / R52064C9: got 'VB'\n\n\nWarning: Expecting logical in I52080 / R52080C9: got 'DF'\n\n\nWarning: Expecting logical in I52200 / R52200C9: got 'VB'\n\n\nWarning: Expecting logical in I52214 / R52214C9: got 'VB'\n\n\nWarning: Expecting logical in I52222 / R52222C9: got 'DF'\n\n\nWarning: Expecting logical in I52266 / R52266C9: got 'DR'\n\n\nWarning: Expecting logical in I52420 / R52420C9: got 'VB'\n\n\nWarning: Expecting logical in I52429 / R52429C9: got 'VB'\n\n\nWarning: Expecting logical in I52515 / R52515C9: got 'DF'\n\n\nWarning: Expecting logical in I52650 / R52650C9: got 'VB'\n\n\nWarning: Expecting logical in I52714 / R52714C9: got 'VB'\n\n\nWarning: Expecting logical in I52716 / R52716C9: got 'VB'\n\n\nWarning: Expecting logical in I52787 / R52787C9: got 'VB'\n\n\nWarning: Expecting logical in I52817 / R52817C9: got 'VB'\n\n\nWarning: Expecting logical in I52827 / R52827C9: got 'VB'\n\n\nWarning: Expecting logical in I52947 / R52947C9: got 'VB'\n\n\nWarning: Expecting logical in I53156 / R53156C9: got 'DF'\n\n\nWarning: Expecting logical in I53249 / R53249C9: got 'DR'\n\n\nWarning: Expecting logical in I53305 / R53305C9: got 'VB'\n\n\nWarning: Expecting logical in I53357 / R53357C9: got 'DR'\n\n\nWarning: Expecting logical in I53367 / R53367C9: got 'VB'\n\n\nWarning: Expecting logical in I53407 / R53407C9: got 'DR'\n\n\nWarning: Expecting logical in I53529 / R53529C9: got 'DF'\n\n\nWarning: Expecting logical in I53563 / R53563C9: got 'VB'\n\n\nWarning: Expecting logical in I53611 / R53611C9: got 'VB'\n\n\nWarning: Expecting logical in I53689 / R53689C9: got 'VB'\n\n\nWarning: Expecting logical in I53868 / R53868C9: got 'VB'\n\n\nWarning: Expecting logical in I53963 / R53963C9: got 'VB'\n\n\nWarning: Expecting logical in I53988 / R53988C9: got 'VB'\n\n\nWarning: Expecting logical in I54046 / R54046C9: got 'VB'\n\n\nWarning: Expecting logical in I54082 / R54082C9: got 'DF'\n\n\nWarning: Expecting logical in I54200 / R54200C9: got 'VB'\n\n\nWarning: Expecting logical in I54221 / R54221C9: got 'VB'\n\n\nWarning: Expecting logical in I54295 / R54295C9: got 'VB'\n\n\nWarning: Expecting logical in I54319 / R54319C9: got 'VB'\n\n\nWarning: Expecting logical in I54569 / R54569C9: got 'VB'\n\n\nWarning: Expecting logical in I54687 / R54687C9: got 'DR'\n\n\nWarning: Expecting logical in I54808 / R54808C9: got 'VB'\n\n\nWarning: Expecting logical in I54837 / R54837C9: got 'VB'\n\n\nWarning: Expecting logical in I54994 / R54994C9: got 'VB'\n\n\nWarning: Expecting logical in I55105 / R55105C9: got 'DR'\n\n\nWarning: Expecting logical in I55278 / R55278C9: got 'VB'\n\n\nWarning: Expecting logical in I55353 / R55353C9: got 'DR'\n\n\nWarning: Expecting logical in I55382 / R55382C9: got 'VB'\n\n\nWarning: Expecting logical in I55459 / R55459C9: got 'DF'\n\n\nWarning: Expecting logical in I55463 / R55463C9: got 'VB'\n\n\nWarning: Expecting logical in I55576 / R55576C9: got 'VB'\n\n\nWarning: Expecting logical in I55695 / R55695C9: got 'DR'\n\n\nWarning: Expecting logical in I56035 / R56035C9: got 'DR'\n\n\nWarning: Expecting logical in I56048 / R56048C9: got 'VB'\n\n\nWarning: Expecting logical in I56084 / R56084C9: got 'VB'\n\n\nWarning: Expecting logical in I56111 / R56111C9: got 'VB'\n\n\nWarning: Expecting logical in I56169 / R56169C9: got 'VB'\n\n\nWarning: Expecting logical in I56216 / R56216C9: got 'VB'\n\n\nWarning: Expecting logical in I56303 / R56303C9: got 'DF'\n\n\nWarning: Expecting logical in I56335 / R56335C9: got 'VB'\n\n\nWarning: Expecting logical in I56340 / R56340C9: got 'DF'\n\n\nWarning: Expecting logical in I56372 / R56372C9: got 'VB'\n\nglimpse(vehicle)\n\nRows: 56,429\nColumns: 12\n$ Vehicle_key          <chr> \"AUD0001604\", \"AUD0002676\", \"AUD0002676\", \"AUD000…\n$ Maint_Model_Range    <chr> \"S8 quattro\", \"A3 Limousine quattro\", \"A3 Limousi…\n$ ESI_Model_Range      <chr> \"S8 [4E2]\", \"A3 [8VS, 8VM] Limousine\", \"A3 [8VS, …\n$ Internal_Model_Range <chr> \"4E2\", \"8VS, 8VM\", \"8VS, 8VM\", \"4B5, C5\", \"8N3\", …\n$ Vehicle_Class        <chr> \"P0\", \"P0\", \"P0\", \"P0\", \"P0\", \"P0\", \"P0\", \"P0\", \"…\n$ Vehicle_Explanation1 <chr> \"P1\", \"P1\", \"P1\", \"P2\", \"P3\", \"P2\", \"P1\", \"P6\", \"…\n$ Vehicle_Explanation2 <chr> \"VB\", \"VB\", \"VB\", NA, \"VB\", \"VB\", \"VB\", NA, \"VB\",…\n$ Vehicle_Explanation3 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Vehicle_Explanation4 <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ SOP                  <chr> \"200606\", \"192801\", \"192801\", \"192908\", \"192908\",…\n$ EOP                  <chr> \"201007\", \"193012\", \"193012\", \"193712\", \"193412\",…\n$ Car_Population       <dbl> 81090, 27969, 10, 91350, 2575, 32518, 15743, 4574…"
  }
]